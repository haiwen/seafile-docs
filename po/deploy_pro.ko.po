# Korean translation for the seafile-docs package.
# This file is distributed under the same license as the Seafile-docs package.
# Seong-ho Cho <darkcircle.0426@gmail.com>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: seafile-docs\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2016-05-05 03:40:23+0900\n"
"PO-Revision-Date: 2016-05-05 03:45+0900\n"
"Last-Translator: Seong-ho Cho <darkcircle.0426@gmail.com>\n"
"Language-Team: Korean <darkcircle.0426@gmail.com>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.7\n"

# header
#: deploy_pro/README.md:1
msgid "# Deploy Seafile Pro Edition"
msgstr "# Seafile 전문가판 가동"

#: deploy_pro/README.md:4
msgid "Install Seafile Pro Edition"
msgstr "Seafile 전문가판 설치"

# unordered list
#: deploy_pro/README.md:6
msgid ""
"- Method 1 (For Debian and CentOS 7): [Deploy Seafile with an installation "
"script](https://github.com/SeafileDE/seafile-server-installer#auto-install-"
"seafile-server-ce-and-pro). The installer offer a quick and easy way to set "
"up a production ready Seafile Server using MariaDB, Memcached and NGINX as a "
"reverse proxy in under 5 minutes."
msgstr ""
"- 1번째 방식(데비안/CentOS 7): [설치 스크립트로 Seafile 가동 준비](https://"
"github.com/SeafileDE/seafile-server-installer#auto-install-seafile-server-ce-"
"and-pro). 설치 관리자는 MariaDB, Memcached, 역방향 프록시로 활용할 Nginx로 설"
"치를 5분 내로 끝내, 빠르고 간편한 실 가동 준비상태 Seafile 서버 설치 방식을 "
"제공합니다."

# unordered list
#: deploy_pro/README.md:7
msgid ""
"- Method 2:  [Download and Setup Seafile Professional Server Step by Step]"
"(download_and_setup_seafile_professional_server.md)"
msgstr ""
"- 2번째 방식:  [Seafile 전문가 서버 단계별 다운로드 및 설치]"
"(download_and_setup_seafile_professional_server.md)"

#: deploy_pro/README.md:9
msgid "LDAP/AD Integration for Pro:"
msgstr "전문가판의 LDAP/AD 통합:"

# unordered list
#: deploy_pro/README.md:11
msgid "- [Configure LDAP in Seafile Pro](using_ldap_pro.md)"
msgstr "- [Seafile 전문가판의 LDAP 설정](using_ldap_pro.md)"

# unordered list
#: deploy_pro/README.md:12
msgid "- [Syncing Groups from LDAP/AD](ldap_group_sync.md)"
msgstr "- [LDAP/AD의 그룹 동기화](ldap_group_sync.md)"

#: deploy_pro/README.md:14
msgid "Migration and Upgrading"
msgstr "이전 및 업그레이드"

# unordered list
#: deploy_pro/README.md:16
msgid ""
"- [Migrate from Seafile Community Server]"
"(migrate_from_seafile_community_server.md)"
msgstr ""
"- [Seafile 커뮤니티 서버에서 이전](migrate_from_seafile_community_server.md)"

# unordered list
#: deploy_pro/README.md:17
msgid ""
"- [Upgrade Seafile Professional Server]"
"(upgrading_seafile_professional_server.md)"
msgstr ""
"- [Seafile 전문가 서버 업그레이드](upgrading_seafile_professional_server.md)"

#: deploy_pro/README.md:19
msgid "S3/OpenSwift/Ceph"
msgstr "S3/OpenSwift/Ceph"

# unordered list
#: deploy_pro/README.md:21
msgid ""
"- [Setup Seafile Professional Server With Amazon S3](setup_with_mazon_S3.md)"
msgstr "- [Seafile 전문가 서버 및 Amazon S3 설치](setup_with_mazon_S3.md)"

# unordered list
#: deploy_pro/README.md:22
msgid ""
"- [Setup Seafile Professional Server With OpenStack Swift](setup_with_swift."
"md)"
msgstr "- [Seafile 전문가 서버 및 오픈스택 Swift 설치](setup_with_swift.md)"

# unordered list
#: deploy_pro/README.md:23
msgid "- [Setup Seafile Professional Server With Ceph](setup_with_Ceph.md)"
msgstr "- [Seafile 전문가 서버 및 Ceph 설치](setup_with_Ceph.md)"

# unordered list
#: deploy_pro/README.md:24
msgid "- [Storage Backend Encryption](seaf_encrypt.md)"
msgstr "- [저장장치 백엔드 암호화](seaf_encrypt.md)"

#: deploy_pro/README.md:26
msgid "Config Options"
msgstr "설정 항목"

# unordered list
#: deploy_pro/README.md:28
msgid ""
"- [Seafile Professional Server Configurable Options](configurable_options.md)"
msgstr "- [Seafile 전문가 서버 설정 항목](configurable_options.md)"

# header
#: deploy_pro/README.md:30
msgid "## Search"
msgstr "## 검색"

# unordered list
#: deploy_pro/README.md:32
msgid "- [Details about File Search](details_about_file_search.md)"
msgstr "- [파일 검색 세부 안내](details_about_file_search.md)"

# header
#: deploy_pro/README.md:34
msgid "## Preview office files"
msgstr "## 오피스 파일 미리 보기"

# unordered list
#: deploy_pro/README.md:36
msgid ""
"- [Enable Office/PDF Documents Online Preview](office_documents_preview.md)"
msgstr ""
"- [Office/PDF 문서 온라인 미리 보기 활성화](office_documents_preview.md)"

# header
#: deploy_pro/README.md:38
msgid "## Office Web App"
msgstr "## 오피스 웹 앱"

# unordered list
#: deploy_pro/README.md:40
msgid "- [Integrating with Office Web App](office_web_app.md)"
msgstr "- [오피스 웹 앱 통합](office_web_app.md)"

# header
#: deploy_pro/README.md:42
msgid "## Cluster"
msgstr "## 클러스터"

# unordered list
#: deploy_pro/README.md:44
msgid "- [Deploy seafile servers in a cluster](deploy_in_a_cluster.md)"
msgstr "- [클러스터에서 Seafile 서버 가동](deploy_in_a_cluster.md)"

# unordered list
#: deploy_pro/README.md:45
msgid ""
"- [Enable search and background tasks in a cluster]"
"(enable_search_and_background_tasks_in_a_cluster.md)"
msgstr ""
"- [클러스터에서 검색 및 백그라운드 작업 활성화]"
"(enable_search_and_background_tasks_in_a_cluster.md)"

# header
#: deploy_pro/README.md:47
msgid "## Backup"
msgstr "## 백업"

# unordered list
#: deploy_pro/README.md:49
msgid "- [Real-time Backup Server](real_time_backup.md)"
msgstr "- [실시간 백업 서버](real_time_backup.md)"

# header
#: deploy_pro/README.md:51
msgid "## Admin Tools"
msgstr "## 관리자 도구"

# unordered list
#: deploy_pro/README.md:53
msgid "- [Import Directory to Seafile](seaf_import.md)"
msgstr "- [Seafile에 디렉터리 가져오기](seaf_import.md)"

# header
#: deploy_pro/README.md:55
msgid "## FAQ"
msgstr "## 자주 묻는 질문"

# unordered list
#: deploy_pro/README.md:57
msgid "- [FAQ For Seafile Professional Server](FAQ_for_seafile_pro_server.md)"
msgstr ""
"- [Seafile 전문가 서버 대상 자주 묻는 질문](FAQ_for_seafile_pro_server.md)"

# header
#: deploy_pro/README.md:60
msgid "## License"
msgstr "## 라이선스"

# unordered list
#: deploy_pro/README.md:62
msgid ""
"- [Seafile Professional Edition Software License Agreement]"
"(seafile_professional_sdition_software_license_agreement.md)"
msgstr ""
"- [Seafile 전문가판 프로그램 라이선스 동의서]"
"(seafile_professional_sdition_software_license_agreement.md)"

#: deploy_pro/change_default_java.md:2
msgid ""
"When you have both java6 and java7 installed, the default java may not be "
"java 7."
msgstr "java6와 java7을 함께 설치했다면 java 7이 기본이 아닐 수도 있습니다."

#: deploy_pro/change_default_java.md:4
msgid "Do this by typing `java -version`, and check the output."
msgstr "`java -version`을 입력하고, 출력 내용을 확인하십시오."

# unordered list
#: deploy_pro/change_default_java.md:6
msgid ""
"- If the output is like **\"java version \"1.7.0_xx\"**, then the default "
"java is java 7, which is good."
msgstr ""
"- 출력이 **\"java version \"1.7.0_xx\"**와 같은 식이면, 기본 자바 버전은 7이"
"며, 활용하기에 좋습니다."

# unordered list
#: deploy_pro/change_default_java.md:7
msgid ""
"- If the output is like **\"java version \"1.6.0_xx\"**, then the default "
"java is java 6, we need to configure default java to java 7."
msgstr ""
"- 출력이 **\"java version \"1.6.0_xx\"**와 같은 식이면, 기본 자바 버전은 6이"
"며, 7을 기본으로 사용하도록 설정해야합니다."

#: deploy_pro/change_default_java.md:9
msgid "If the default java is java 6, then do"
msgstr "기본 자바 버전이 6일 경우,"

#: deploy_pro/change_default_java.md:11 deploy_pro/deploy_in_a_cluster.md:153
#: deploy_pro/setup_with_ceph.md:33
msgid "On Debian/Ubuntu:"
msgstr "데비안/우분투:"

# code block
#: deploy_pro/change_default_java.md:12
msgid ""
"```\n"
"sudo update-alternatives --config java\n"
"```"
msgstr ""
"```\n"
"sudo update-alternatives --config java\n"
"```"

#: deploy_pro/change_default_java.md:16
msgid "On CentOS/RHEL:"
msgstr "CentOS/RHEL:"

# code block
#: deploy_pro/change_default_java.md:17
msgid ""
"```\n"
"sudo alternatives --config java\n"
"```"
msgstr ""
"```\n"
"sudo alternatives --config java\n"
"```"

#: deploy_pro/change_default_java.md:21
msgid ""
"The above command will ask you to choose one of the installed java as the "
"default. You should choose java 7 here."
msgstr ""
"위 명령을 실행하면 설치한 자바 중 하나를 기본으로 설정하도록 물어봅니다. 여기"
"서 7을 선택해야합니다."

#: deploy_pro/change_default_java.md:23
msgid ""
"After that, you should re-run `java -version` to make sure the change has "
"taken effect."
msgstr ""
"명령 처리가 끝나면 `java -version`을 다시 실행하여 바꾼 설정이 동작하는지 확"
"인해야합니다."

#: deploy_pro/change_default_java.md:25
msgid ""
"[Reference link](http://unix.stackexchange.com/questions/35185/installing-"
"openjdk-7-jdk-does-not-update-java-which-is-still-version-1-6)"
msgstr ""
"[참고 링크](http://unix.stackexchange.com/questions/35185/installing-"
"openjdk-7-jdk-does-not-update-java-which-is-still-version-1-6)"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:1
msgid "# Seafile Clustering with MariaDB and Ceph"
msgstr "# MariaDB 및 Ceph를 활용한 Seafile 클러스터링"

#: deploy_pro/clustering_with_mariadb_ceph.md:3
msgid ""
"In this document we describe the detailed solution of deploying a high "
"scalable Seafile cluster with MariaDB and Ceph. The document is not a "
"finished one. We will improve it continuously as our knowledge grow with "
"several on going projects."
msgstr ""
"이 문서에서는 확장이 용이한 Seafile 클러스터와 MariaDB, Ceph를 가동하는 자세"
"한 방법을 설명합니다. 이 문서로 내용이 끝나는건 아닙니다. 프로젝트가 진행 중"
"인 만큼 쌓이는 지식을 반영하여 계속 내용을 고쳐나가겠습니다."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:5
msgid "## Backgrounds"
msgstr "## 배경"

#: deploy_pro/clustering_with_mariadb_ceph.md:7
msgid ""
"Seafile organizes files into libraries. Each library is a GIT repository "
"like file system tree with each file and folder identified by a unique hash "
"value. These unique IDs are used in the syncing algorithm and there is no "
"need to storing syncing state for each file in the database. Tranditional "
"database like MySQL are not scalable to tens of millions of records, while "
"object storages like Ceph and Swift are highly scalable. So in theory, "
"Seafile is capable to storing billions of files for syncing and sharing."
msgstr ""
"Seafile은 파일을 라이브러리에 모아둡니다. 모든 라이브러리는 git 저장소와 유사"
"한 파일 시스템 트리로, 각 파일 및 폴더는 유일한 해시 값을 갖습니다. 이 유일 "
"ID는 동기화 알고리즘에서 활용하며 각 파일의 동기화 상태를 데이터베이스에 저장"
"할 필요가 없습니다. Ceph와 Swift같은 객체 저장소는 확장이 용이하지만 MySQL과 "
"같은 기존의 데이터베이스는 수천만개의 레코드로 확장할 수 없습니다. 따라서 이"
"론적으로는 Seafile은 동기화 및 공유 목적으로 수십억개의 파일을 저장할 수 있습"
"니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:9
msgid ""
"While files are saved into object storage, other information like sharing "
"and permission has to be stored in database. MariaDB Galera can be used to "
"provide a scalable and reliable database storage."
msgstr ""
"파일을 객체 저장소에 저장하면, 공유 및 권한 같은 기타 정보는 데이터베이스에 "
"저장합니다. MariaDB 갈레라는 확장 가능하고 신뢰성 있는 데이터베이스 저장소로 "
"활용할 수 있습니다."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:11
msgid "## Hardware and system requirement"
msgstr "## 하드웨어 및 시스템 요구사항"

#: deploy_pro/clustering_with_mariadb_ceph.md:13
msgid ""
"In the minimum, we use three machines to setup the cluster. Each machine "
"should be of"
msgstr ""
"최소한 클러스터 설정에 머신 세개를 사용합니다. 각 머신의 구성은 다음과 같습니"
"다"

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:15
msgid "* 4 cores with 8GB or more memory."
msgstr "* 코어 4개 및 8GB 이상 용량을 지닌 메모리."

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:16
msgid "* 1 SSD disk to storing Ceph journal."
msgstr "* Ceph 저널을 저장하는 1 SSD."

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:17
msgid "* 1 SATA disk to storing the operating system"
msgstr "* 운영 체제를 저장하는 1 SATA 디스크"

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:18
msgid "* 1 SATA disk to storing MariaDB database"
msgstr "* MariaDB 데이터베이스를 저장하는 1 SATA 디스크"

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:19
msgid "* 4 or more SATA disk to store Ceph data"
msgstr "* Ceph 데이터를 저장하는 SATA 디스크 네개 이상"

#: deploy_pro/clustering_with_mariadb_ceph.md:21
msgid ""
"We use Ubuntu 14.04 server as the operating system. In the following, we "
"denote the three server as node1, node2 and node3."
msgstr ""
"우분투 14.04를 운영 체제로 사용하겠습니다. 아래에서 서버 세대 각각을 node1, "
"node2, node3로 표현했습니다."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:23
msgid "## Setup Ceph cluster"
msgstr "## Ceph 클러스터 설치"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:25
msgid "#### Preparation"
msgstr "#### 준비"

#: deploy_pro/clustering_with_mariadb_ceph.md:27
msgid ""
"Choose one node (say, node1) as admin node for installation. Install ceph-"
"deploy on it."
msgstr ""
"노드 하나(node1이라 하겠습니다)를 설치용 관리자 노드로 선택하십시오. ceph-"
"deploy를 설치하십시오."

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:29
msgid "* Add the release key:  "
msgstr "* 릴리스 키를 추가하십시오:  "

# code block
#: deploy_pro/clustering_with_mariadb_ceph.md:31
msgid ""
"```\n"
"wget -q -O- 'https://ceph.com/git/?p=ceph.git;a=blob_plain;f=keys/release."
"asc' | sudo apt-key add -\n"
"```"
msgstr ""
"```\n"
"wget -q -O- 'https://ceph.com/git/?p=ceph.git;a=blob_plain;f=keys/release."
"asc' | sudo apt-key add -\n"
"```"

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:35
msgid ""
"* Add the Ceph packages to your repository. Replace {ceph-stable-release} "
"with a stable Ceph release (e.g., emperor, firefly, giant etc.). The latest "
"stable release is 'giant'."
msgstr ""
"* Ceph 꾸러미를 저장소에 추가하십시오. {ceph-stable-releast} 대신 안정 Ceph "
"릴리스 버전(emperor, firefly, giant 등)으로 바꾸십시오. 최종 안정 릴리스는 "
"'giant' 입니다."

# code block
#: deploy_pro/clustering_with_mariadb_ceph.md:37
msgid ""
"```\n"
"echo deb http://ceph.com/debian-{ceph-stable-release}/ $(lsb_release -sc) "
"main | sudo tee /etc/apt/sources.list.d/ceph.list\n"
"```"
msgstr ""
"```\n"
"echo deb http://ceph.com/debian-{ceph-stable-release}/ $(lsb_release -sc) "
"main | sudo tee /etc/apt/sources.list.d/ceph.list\n"
"```"

# unordered list
#: deploy_pro/clustering_with_mariadb_ceph.md:41
msgid "* Update your repository and install ceph-deploy:  "
msgstr "* 저장소를 업데이트하고 ceph-deploy를 설치하십시오:  "

# code block
#: deploy_pro/clustering_with_mariadb_ceph.md:43
msgid ""
"```\n"
"sudo apt-get update && sudo apt-get install ceph-deploy\n"
"```"
msgstr ""
"```\n"
"sudo apt-get update && sudo apt-get install ceph-deploy\n"
"```"

#: deploy_pro/clustering_with_mariadb_ceph.md:47
msgid "Install ntp on all nodes, and restart ntp  "
msgstr "모든 노드에 ntp를 설치하고 ntp를 다시 시작하십시오  "

#: deploy_pro/clustering_with_mariadb_ceph.md:49
msgid "    sudo apt-get install ntp"
msgstr "    sudo apt-get install ntp"

#: deploy_pro/clustering_with_mariadb_ceph.md:50
msgid "    sudo service ntp restart"
msgstr "    sudo service ntp restart"

#: deploy_pro/clustering_with_mariadb_ceph.md:52
msgid "Install openssh on all nodes"
msgstr "모든 노드에 openssh를 설치하십시오"

#: deploy_pro/clustering_with_mariadb_ceph.md:54
msgid "    sudo apt-get install openssh-server"
msgstr "    sudo apt-get install openssh-server"

#: deploy_pro/clustering_with_mariadb_ceph.md:56
msgid ""
"We'll use a non-root user for installation. Make sure this user has password-"
"less sudo privileges."
msgstr ""
"설치 과정은 비 루트 사용자로 진행합니다. 이 사용자가 무암호 sudo 권한을 지니"
"고 있는지 확인하십시오."

#: deploy_pro/clustering_with_mariadb_ceph.md:58
msgid ""
"    echo \"{username} ALL = (root) NOPASSWD:ALL\" | sudo tee /etc/sudoers.d/"
"{username}"
msgstr ""
"    echo \"{username} ALL = (root) NOPASSWD:ALL\" | sudo tee /etc/sudoers.d/"
"{username}"

#: deploy_pro/clustering_with_mariadb_ceph.md:59
msgid "    sudo chmod 0440 /etc/sudoers.d/{username}"
msgstr "    sudo chmod 0440 /etc/sudoers.d/{username}"

#: deploy_pro/clustering_with_mariadb_ceph.md:61
msgid ""
"Generate ssh public key for the installation user on node1. Then copy that "
"public key to other nodes `~/.ssh/authorized_keys`."
msgstr ""
"node1에 ssh 공용키를 만들어 설치하십시오. 다음 기타 노드에 `~/.ssh/"
"authorized_keys` 노드에 공용키를 복사하십시오."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:63
msgid "#### Create Ceph Cluster"
msgstr "#### Cept 클러스터 만들기"

#: deploy_pro/clustering_with_mariadb_ceph.md:65
msgid ""
"Create a `ceph-cluster` directory on node1 for storing the generated config "
"files. All commands should be run under this directory."
msgstr ""
"만들어둔 설정 파일을 저장할 node1에 `ceph-cluster` 디렉터리를 만드십시오. 모"
"든 명령은 이 디렉터리에서 실행해야합니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:67
msgid "Install Ceph on all nodes"
msgstr "모든 노드에 Ceph를 설치하십시오"

#: deploy_pro/clustering_with_mariadb_ceph.md:69
msgid "    ceph-deploy install node1 node2 node3"
msgstr "    ceph-deploy install node1 node2 node3"

#: deploy_pro/clustering_with_mariadb_ceph.md:71
msgid "Create the cluster  "
msgstr "클러스터를 만드십시오  "

#: deploy_pro/clustering_with_mariadb_ceph.md:73
msgid "    ceph-deploy new node1 node2 node3"
msgstr "    ceph-deploy new node1 node2 node3"

#: deploy_pro/clustering_with_mariadb_ceph.md:75
msgid "Create Ceph monitors. You should open port 6789 on all nodes."
msgstr "Ceph 감시자를 만드십시오. 모든 노드의 6789 포트를 열어두어야합니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:77
msgid "    ceph-deploy mon create node1 node2 node3 "
msgstr "    ceph-deploy mon create node1 node2 node3 "

#: deploy_pro/clustering_with_mariadb_ceph.md:79
msgid "Gather keys"
msgstr "키를 획득하십시오"

#: deploy_pro/clustering_with_mariadb_ceph.md:81
msgid "    ceph-deploy gatherkeys node1"
msgstr "    ceph-deploy gatherkeys node1"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:83
msgid "#### Add OSDs"
msgstr "#### OSD 추가"

#: deploy_pro/clustering_with_mariadb_ceph.md:85
msgid ""
"In Ceph, every OSD daemon manages one disk. The OSDs can share one SSD disk "
"for journal."
msgstr ""
"Ceph에서, 모든 OSD 데몬은 하나의 디스크를 관리합니다. OSD는 저널링용 SSO를 공"
"유할 수 있습니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:86
msgid ""
"Suppose the SSD disk for journal is `/dev/sdb` and the SATA disks are `/dev/"
"sdc`, `/dev/sdd`, etc. Add OSDs by the following commands:"
msgstr ""
"저널링용 SSD를 `/dev/sdb`라 가정하고 SATA 디스크는 `/dev/sdc`, `/dev/sdd` 등"
"이라고 하겠습니다. 다음 명령으로 OSD를 추가하십시오:"

#: deploy_pro/clustering_with_mariadb_ceph.md:88
msgid "    ceph-deploy osd create node1:/dev/sdc:/dev/sdb"
msgstr "    ceph-deploy osd create node1:/dev/sdc:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:89
msgid "    ceph-deploy osd create node2:/dev/sdc:/dev/sdb"
msgstr "    ceph-deploy osd create node2:/dev/sdc:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:90
msgid "    ceph-deploy osd create node3:/dev/sdc:/dev/sdb"
msgstr "    ceph-deploy osd create node3:/dev/sdc:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:91
msgid "    ceph-deploy osd create node1:/dev/sdd:/dev/sdb"
msgstr "    ceph-deploy osd create node1:/dev/sdd:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:92
msgid "    ceph-deploy osd create node2:/dev/sdd:/dev/sdb"
msgstr "    ceph-deploy osd create node2:/dev/sdd:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:93
msgid "    ceph-deploy osd create node3:/dev/sdd:/dev/sdb"
msgstr "    ceph-deploy osd create node3:/dev/sdd:/dev/sdb"

#: deploy_pro/clustering_with_mariadb_ceph.md:95
msgid ""
"**note** By default Ceph uses a journal partition of size 5GB. The creation "
"of OSD will fail if your journal disk is too small. You can add the "
"following config to /etc/ceph/ceph.conf:"
msgstr ""
"**참고** 기본적으로 Ceph에서 5GB 크기의 저널링 분할 공간을 활용합니다. 저널"
"링 디스크 용량이 너무 적으면 OSD 만들기에 실패합니다. 다음 설정을 /etc/ceph/"
"ceph.conf에 추가할 수 있습니다:"

# code block
#: deploy_pro/clustering_with_mariadb_ceph.md:97
msgid ""
"```\n"
"[osd]\n"
"\t# set journal size to 4GB\n"
"        osd journal size = 4000\n"
"```"
msgstr ""
"```\n"
"[osd]\n"
"\t# set journal size to 4GB\n"
"        osd journal size = 4000\n"
"```"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:103
msgid "#### Check Cluster Status"
msgstr "#### 클러스터 상태 검사"

#: deploy_pro/clustering_with_mariadb_ceph.md:105
msgid ""
"Ceph cluster setup is done. You can check cluster status by `sudo ceph -s`."
msgstr ""
"Ceph 클러스터 설정이 끝났습니다. `sudo ceph -s` 명령으로 클러스터 상태를 검사"
"할 수 있습니다."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:107
#: deploy_pro/clustering_with_mariadb_ceph.md:183
msgid "#### References"
msgstr "#### 참고"

#: deploy_pro/clustering_with_mariadb_ceph.md:109
msgid "http://ceph.com/docs/master/rados/deployment/"
msgstr "http://ceph.com/docs/master/rados/deployment/"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:111
msgid "## Setup MariaDB cluster"
msgstr "## MariaDB 클러스터 설정"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:113
msgid "#### Install MariaDB and Galera"
msgstr "#### MariaDB 및 갈레라 설치"

#: deploy_pro/clustering_with_mariadb_ceph.md:115
msgid ""
"First, set apt source for MariaDB and Galera. Choose a repository for 5.5 in "
"[this page](https://downloads.mariadb.org/mariadb/repositories)."
msgstr ""
"우선, MariaDB 및 갈레라의 apt 공급원을 설정하십시오. [이 페이지](https://"
"downloads.mariadb.org/mariadb/repositories)에서 5.5 저장소를 선택하십시오."

#: deploy_pro/clustering_with_mariadb_ceph.md:116
msgid "Then you can install mariadb and galera."
msgstr "이렇게 준비하면 MariaDB와 갈레라를 설치할 수 있습니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:118
msgid "    sudo apt-get install mariadb-galera-server galera"
msgstr "    sudo apt-get install mariadb-galera-server galera"

#: deploy_pro/clustering_with_mariadb_ceph.md:119
msgid "    sudo apt-get install rsync"
msgstr "    sudo apt-get install rsync"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:121
msgid "#### Config MariaDB"
msgstr "#### MariaDB 설정"

#: deploy_pro/clustering_with_mariadb_ceph.md:123
msgid "In `/etc/mysql/conf.d/cluster.cnf`"
msgstr "`/etc/mysql/conf.d/cluster.cnf`에서,"

#: deploy_pro/clustering_with_mariadb_ceph.md:125
msgid "    [mysqld]"
msgstr "    [mysqld]"

#: deploy_pro/clustering_with_mariadb_ceph.md:127
msgid "    query_cache_size=0"
msgstr "    query_cache_size=0"

#: deploy_pro/clustering_with_mariadb_ceph.md:128
msgid "    binlog_format=ROW"
msgstr "    binlog_format=ROW"

#: deploy_pro/clustering_with_mariadb_ceph.md:129
msgid "    default-storage-engine=innodb"
msgstr "    default-storage-engine=innodb"

#: deploy_pro/clustering_with_mariadb_ceph.md:130
msgid "    innodb_autoinc_lock_mode=2"
msgstr "    innodb_autoinc_lock_mode=2"

#: deploy_pro/clustering_with_mariadb_ceph.md:131
msgid "    query_cache_type=0"
msgstr "    query_cache_type=0"

#: deploy_pro/clustering_with_mariadb_ceph.md:132
msgid "    bind-address=0.0.0.0"
msgstr "    bind-address=0.0.0.0"

#: deploy_pro/clustering_with_mariadb_ceph.md:134
msgid "    # Galera Provider Configuration"
msgstr "    # Galera Provider Configuration"

#: deploy_pro/clustering_with_mariadb_ceph.md:135
msgid "    wsrep_provider=/usr/lib/galera/libgalera_smm.so"
msgstr "    wsrep_provider=/usr/lib/galera/libgalera_smm.so"

#: deploy_pro/clustering_with_mariadb_ceph.md:136
msgid "    #wsrep_provider_options=\"gcache.size=32G\""
msgstr "    #wsrep_provider_options=\"gcache.size=32G\""

#: deploy_pro/clustering_with_mariadb_ceph.md:138
msgid "    # Galera Cluster Configuration"
msgstr "    # Galera Cluster Configuration"

#: deploy_pro/clustering_with_mariadb_ceph.md:139
msgid "    wsrep_cluster_name=\"test_cluster\""
msgstr "    wsrep_cluster_name=\"test_cluster\""

#: deploy_pro/clustering_with_mariadb_ceph.md:140
msgid "    wsrep_cluster_address=\"gcomm://first_ip,second_ip,third_ip"
msgstr "    wsrep_cluster_address=\"gcomm://first_ip,second_ip,third_ip"

#: deploy_pro/clustering_with_mariadb_ceph.md:142
msgid "    # Galera Synchronization Congifuration"
msgstr "    # Galera Synchronization Congifuration"

#: deploy_pro/clustering_with_mariadb_ceph.md:143
msgid "    wsrep_sst_method=rsync"
msgstr "    wsrep_sst_method=rsync"

#: deploy_pro/clustering_with_mariadb_ceph.md:144
msgid "    #wsrep_sst_auth=user:pass"
msgstr "    #wsrep_sst_auth=user:pass"

#: deploy_pro/clustering_with_mariadb_ceph.md:146
msgid "    # Galera Node Configuration"
msgstr "    # Galera Node Configuration"

#: deploy_pro/clustering_with_mariadb_ceph.md:147
msgid "    wsrep_node_address=\"this_node_ip\""
msgstr "    wsrep_node_address=\"this_node_ip\""

#: deploy_pro/clustering_with_mariadb_ceph.md:148
msgid "    wsrep_node_name=\"this_node_name\""
msgstr "    wsrep_node_name=\"this_node_name\""

#: deploy_pro/clustering_with_mariadb_ceph.md:150
msgid ""
"Here first_ip, second_ip and third_ip are corresponding to the IP address of "
"node1, node2 and node3."
msgstr ""
"여기에 있는 first_ip, second_ip, third_ip는 node1, node2, node3의 각각의 IP "
"주소입니다."

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:152
msgid "#### Change the data directory for MariaDB"
msgstr "#### MariaDB의 데이터 디렉터리 바꾸기"

#: deploy_pro/clustering_with_mariadb_ceph.md:154
msgid ""
"We want to store the database data in a separate disk. Supposed the disk is "
"mounted to the path `/mysql`."
msgstr ""
"개별 디스크에 데이터베이스 데이터를 저장하겠습니다. 디스크를 `/mysql` 경로에 "
"마운트했다고 가정하겠습니다."

#: deploy_pro/clustering_with_mariadb_ceph.md:156
msgid "Stop MariaDB using the following command:"
msgstr "다음 명령으로 MariaDB를 멈추십시오:"

#: deploy_pro/clustering_with_mariadb_ceph.md:158
msgid "    sudo /etc/init.d/mysql stop"
msgstr "    sudo /etc/init.d/mysql stop"

#: deploy_pro/clustering_with_mariadb_ceph.md:160
msgid ""
"Copy the existing data directory (default located in /var/lib/mysql) using "
"the following command:"
msgstr ""
"다음 명령으로 기존 데이터 디렉터리(기본적으로 /var/lib/mysql에 있음)를 복사하"
"십시오:"

#: deploy_pro/clustering_with_mariadb_ceph.md:162
msgid "    sudo cp -R -p /var/lib/mysql/* /mysql"
msgstr "    sudo cp -R -p /var/lib/mysql/* /mysql"

#: deploy_pro/clustering_with_mariadb_ceph.md:164
msgid "Edit /etc/mysql/my.cnf, update `datadir` option to `/mysql`."
msgstr ""
"/etc/mysql/my.cnf를 편집하여 `datadir` 설정 항목 값을 `/mysql`로 바꾸십시오."

#: deploy_pro/clustering_with_mariadb_ceph.md:166
msgid "Restart MariaDB with the command:"
msgstr "다음 명령으로 MariaDB를 다시 시작하십시오:"

#: deploy_pro/clustering_with_mariadb_ceph.md:168
msgid "    sudo /etc/init.d/mysql restart"
msgstr "    sudo /etc/init.d/mysql restart"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:170
msgid "#### Start"
msgstr "#### 시작"

#: deploy_pro/clustering_with_mariadb_ceph.md:172
msgid ""
"Before staring the MariaDB cluster, make sure port 3456 and 4444 are open on "
"all database nodes."
msgstr ""
"MariaDB 클러스터를 시작하기 전에, 모든 데이터베이스 노드의 3456 및 4444 포트"
"를 열었는지 확인하십시오."

#: deploy_pro/clustering_with_mariadb_ceph.md:174
msgid "In node1:"
msgstr "node1:"

#: deploy_pro/clustering_with_mariadb_ceph.md:176
msgid "    node1# sudo service mysql start --wsrep-new-cluster"
msgstr "    node1# sudo service mysql start --wsrep-new-cluster"

#: deploy_pro/clustering_with_mariadb_ceph.md:178
msgid "In node2 and node3:"
msgstr "node2, node3:"

#: deploy_pro/clustering_with_mariadb_ceph.md:180
msgid "    node2# sudo service mysql start"
msgstr "    node2# sudo service mysql start"

#: deploy_pro/clustering_with_mariadb_ceph.md:181
msgid "    node3# sudo service mysql start"
msgstr "    node3# sudo service mysql start"

#: deploy_pro/clustering_with_mariadb_ceph.md:185
msgid ""
"https://www.digitalocean.com/community/tutorials/how-to-configure-a-galera-"
"cluster-with-mariadb-on-ubuntu-12-04-servers"
msgstr ""
"https://www.digitalocean.com/community/tutorials/how-to-configure-a-galera-"
"cluster-with-mariadb-on-ubuntu-12-04-servers"

# header
#: deploy_pro/clustering_with_mariadb_ceph.md:187
msgid "## Setup Seafile cluster"
msgstr "## Seafile 클러스터 설정"

#: deploy_pro/clustering_with_mariadb_ceph.md:189
msgid ""
"Please follow http://manual.seafile.com/deploy_pro/setup_with_ceph.html to "
"set seafile with Ceph and follow http://manual.seafile.com/deploy_pro/"
"deploy_in_a_cluster.html for setup Seafile cluster."
msgstr ""
"[Seafile 및 Ceph 설정](setup_with_ceph.md) 및 [Seafile 클러스터 설정]"
"(deploy_in_a_cluster.md) 방식을 따르십시오."

# header
#: deploy_pro/configurable_options.md:1
msgid "# Configurable Options"
msgstr "# 설정 항목"

#: deploy_pro/configurable_options.md:3 deploy_pro/deploy_in_a_cluster.md:3
#: deploy_pro/details_about_file_search.md:3
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:5
#: deploy_pro/setup_with_amazon_s3.md:3 deploy_pro/setup_with_ceph.md:3
#: deploy_pro/setup_with_openstackswift.md:3 deploy_pro/setup_with_swift.md:3
#: deploy_pro/virus_scan.md:3
msgid ""
"**Note**: Since Seafile Server 5.0.0, all config files are moved to the "
"central **conf** folder. [Read More](../deploy/new_directory_layout_5_0_0."
"md)."
msgstr ""
"**참고**: Seafile 서버 5.0.0부터 모든 설정 파일은 **conf** 폴더로 한 곳에 옮"
"겨 모아둡니다. [더 읽어보십시오](../deploy/new_directory_layout_5_0_0.md)."

#: deploy_pro/configurable_options.md:5
msgid "In the file `seafevents.conf`:"
msgstr "`seafevents.conf` 파일에서:"

# code block
#: deploy_pro/configurable_options.md:7
msgid ""
"```\n"
"[Audit]\n"
"## Audit log is disabled default.\n"
"enabled = true\n"
"\n"
"[INDEX FILES]\n"
"## must be \"true\" to enable search\n"
"enabled = true\n"
"\n"
"## The interval the search index is updated. Can be s(seconds), m(minutes), "
"h(hours), d(days)\n"
"interval=10m\n"
"\n"
"## If true, index the contents of office/pdf files while updating search "
"index\n"
"## Note: If you change this option from \"false\" to \"true\", then you need "
"to clear the search index and update the index again. See the FAQ for "
"details.\n"
"index_office_pdf=false\n"
"\n"
"[SEAHUB EMAIL]\n"
"\n"
"## must be \"true\" to enable user email notifications when there are new "
"new unread notifications\n"
"enabled = true\n"
"\n"
"## interval of sending seahub email. Can be s(seconds), m(minutes), "
"h(hours), d(days)\n"
"interval = 30m\n"
"\n"
"\n"
"[OFFICE CONVERTER]\n"
"\n"
"## must be \"true\" to enable office/pdf file online preview\n"
"enabled = true\n"
"\n"
"## How many libreoffice worker processes to run concurrenlty\n"
"workers = 1\n"
"\n"
"## where to store the converted office/pdf files. Deafult is /tmp/.\n"
"outputdir = /tmp/\n"
"\n"
"## how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"\n"
"## the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"## Preview a large file (for example >30M) online will freeze the browser.\n"
"max-size = 2\n"
"\n"
"```"
msgstr ""
"```\n"
"[Audit]\n"
"## Audit log is disabled default.\n"
"enabled = true\n"
"\n"
"[INDEX FILES]\n"
"## must be \"true\" to enable search\n"
"enabled = true\n"
"\n"
"## The interval the search index is updated. Can be s(seconds), m(minutes), "
"h(hours), d(days)\n"
"interval=10m\n"
"\n"
"## If true, index the contents of office/pdf files while updating search "
"index\n"
"## Note: If you change this option from \"false\" to \"true\", then you need "
"to clear the search index and update the index again. See the FAQ for "
"details.\n"
"index_office_pdf=false\n"
"\n"
"[SEAHUB EMAIL]\n"
"\n"
"## must be \"true\" to enable user email notifications when there are new "
"new unread notifications\n"
"enabled = true\n"
"\n"
"## interval of sending seahub email. Can be s(seconds), m(minutes), "
"h(hours), d(days)\n"
"interval = 30m\n"
"\n"
"\n"
"[OFFICE CONVERTER]\n"
"\n"
"## must be \"true\" to enable office/pdf file online preview\n"
"enabled = true\n"
"\n"
"## How many libreoffice worker processes to run concurrenlty\n"
"workers = 1\n"
"\n"
"## where to store the converted office/pdf files. Deafult is /tmp/.\n"
"outputdir = /tmp/\n"
"\n"
"## how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"\n"
"## the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"## Preview a large file (for example >30M) online will freeze the browser.\n"
"max-size = 2\n"
"\n"
"```"

# header
#: deploy_pro/configurable_options.md:52
msgid ""
"### <a id=\"wiki-options-you-may-want-to-modify\"></a>Options you may want "
"to modify"
msgstr "### <a id=\"wiki-options-you-may-want-to-modify\"></a>수정할 설정 항목"

#: deploy_pro/configurable_options.md:54
msgid ""
"The section above listed all the options in `seafevents.conf`. Most of the "
"time you can use the default settings. But you may want to modify some of "
"them to fit your own use case."
msgstr ""
"위 섹션에서는 `seafevents.conf`에 있는 모든 옵션을 언급했습니다. 대부분의 경"
"우 기본 설정을 활용할 수 있습니다. 하지만 개별 상황에 맞추어 일부 설정을 수정"
"해야 할 때도 있습니다."

#: deploy_pro/configurable_options.md:56
msgid ""
"We list them in the following table, as well as why we choose the default "
"value."
msgstr ""
"다음 표를 통해 설정 항목을 나열하고 왜 기본값을 사용해야 하는지 언급하겠습니"
"다."

# inline html
#: deploy_pro/configurable_options.md:58
msgid ""
"<table>\n"
"<tr>\n"
"<th>section</th>\n"
"<th>option</th>\n"
"<th>default value</th>\n"
"<th>description</th>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>INDEX FILES</td>\n"
"<td>index_office_pdf</td>\n"
"<td>false</td>\n"
"<td>\n"
"The full text search of office/pdf documents is not enabled by default. This "
"is because it may consume quite some space for the search index. To turn it "
"on, set this value to \"true\" and recreate the search index. See the [FAQ "
"For Seafile Professional Server](faq_for_seafile_pro_server.md) for detail.\n"
"</td>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>OFFICE CONVERTER</td>\n"
"<td>max-size</td>\n"
"<td>2</td>\n"
"<td>\n"
"The max file size allowed to be previewed online is 2MB. The preview is "
"converted office/pdf to HTML and display it in the browser. If the file size "
"is too large, the conversion may take too long time and consume much space\n"
"</td>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>OFFICE CONVERTER</td>\n"
"<td>max-pages</td>\n"
"<td>50</td>\n"
"<td>\n"
"When previewing a office/pdf document online, the pages displayed is the "
"first 50 pages. If the value is too large, the conversion may take too long "
"time and consume much space.\n"
"</td>\n"
"</tr>\n"
"\n"
"</table>"
msgstr ""
"<table>\n"
"<tr>\n"
"<th>섹션</th>\n"
"<th>설정항목</th>\n"
"<th>기본값</th>\n"
"<th>설명</th>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>INDEX FILES</td>\n"
"<td>index_office_pdf</td>\n"
"<td>false</td>\n"
"<td>\n"
"오피스/pdf 문서의 전체 단어 검색은 기본적으로 활성화 상태가 아닙니다. 검색 색"
"인에 약간의 저장장치 공간을 차지하기 때문입니다. 활성화하려면, 이 값을 \"true"
"\"로 설정하고 검색 색인을 다시 만드십시오. 자세한 내용은 [Seafile 전문가판 서"
"버 자주 묻는 질문](faq_for_seafile_pro_server.md)을 참고하십시오.\n"
"</td>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>OFFICE CONVERTER</td>\n"
"<td>max-size</td>\n"
"<td>2</td>\n"
"<td>\n"
"온라인 미리보기 파일 최대 허용 크기는 2MB입니다. 미리보기 기능은 오피스/pdf "
"파일을 HTML로 변환하고 브라우저에 보여줍니다. 파일 크기가 너무 크면 변환에 시"
"간이 오래 걸리고 상당한 용량을 소비합니다\n"
"</td>\n"
"</tr>\n"
"\n"
"<tr>\n"
"<td>OFFICE CONVERTER</td>\n"
"<td>max-pages</td>\n"
"<td>50</td>\n"
"<td>\n"
"오피스/pdf 문서를 온라인에서 미리 볼 때, 첫 50 페이지를 보여줍니다. 값이 너"
"무 크면 변환에 시간이 오래 걸리고 상당한 용량을 소비합니다.\n"
"</td>\n"
"</tr>\n"
"\n"
"</table>"

# header
#: deploy_pro/deploy_in_a_cluster.md:1
msgid "# Deploy in a cluster"
msgstr "# 클러스터에서 가동"

# header
#: deploy_pro/deploy_in_a_cluster.md:5
msgid "## <a id=\"wiki-arch\"></a> Architecture"
msgstr "## <a id=\"wiki-arch\"></a> 구조"

#: deploy_pro/deploy_in_a_cluster.md:7
msgid "The Seafile cluster solution employs a 3-tier architecture:"
msgstr "Seafile 클러스터 솔루션은 3-티어 구조로 동작합니다:"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:9
msgid ""
"* Load balancer tier: Distribute incoming traffic to Seafile servers. HA can "
"be achieved by deploying multiple load balancer instances."
msgstr ""
"* 로드 밸런서 티어: Seafile 서버로 들어오는 트래픽을 분산합니다. 여러대의 로"
"드 밸런스 인스턴스를 가동하면 고가용성 처리도 가능합니다."

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:10
msgid ""
"* Seafile server cluster: a cluster of Seafile server instances. If one "
"instance fails, the load balancer will stop handing traffic to it. So HA is "
"achieved."
msgstr ""
"* Seafile 서버 클러스터: Seafile 서버 인스턴스의 클러스터. 인스턴스 하나가 망"
"가지면, 로드 밸런서에서 이 인스턴스로 넘어가는 트래픽 처리를 중단합니다. 따라"
"서 고가용성 기능 동작에 성공합니다."

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:11
msgid ""
"* Backend storage: Distributed storage cluster, such as S3, Openstack Swift, "
"Ceph."
msgstr "* 백엔드 저장소: S3, 오픈스택 Swift, Ceph 같은 분산 저장소 클러스터."

#: deploy_pro/deploy_in_a_cluster.md:13
msgid ""
"This architecture scales horizontally. That is, you can handle more traffic "
"by adding more machines. The architecture is presented in the following "
"picture."
msgstr ""
"이 구조는 수평 방향으로 확장합니다. 머신을 추가하여 더 많은 트래픽을 다룰 수 "
"있음을 의미합니다. 이 구조는 다음 그림과 같습니다."

#: deploy_pro/deploy_in_a_cluster.md:15
msgid "![seafile-cluster](../images/seafile-cluster.png)"
msgstr "![seafile-cluster](../images/seafile-cluster.png)"

#: deploy_pro/deploy_in_a_cluster.md:17
msgid ""
"There are two main components on the Seafile server node: web server (Nginx/"
"Apache) and Seafile app server. The web server passes requests from the "
"clients to Seafile app server. The Seafile app servers work independently. "
"They don't know about each other's state. That means each app server can "
"fail independently without affecting other app server instances. The load "
"balancer is responsible for detecting failure and re-routing requests."
msgstr ""
"Seafile 서버 노드에는 두가지 주 구성요소가 있는데, 하나는 웹 서버(Nginx/"
"Apache) 그리고 다른 하나는 Seafile 앱 서버입니다. 웹 서버는 클라이언트 요청"
"을 Seafile 앱 서버에 전달합니다. Seafile 앱 서버는 별개로 동작합니다. 각 구성"
"요소간 상태는 알 수 없습니다. 각 앱 서버는 다른 앱 서버 인스턴스에 영향을 주"
"지 않고 개별적으로 망가질 수 있다는 의미입니다. 로드 밸런서는 망가짐 증상을 "
"발견하고 요청을 우회하는 역할을 수행합니다."

#: deploy_pro/deploy_in_a_cluster.md:19
msgid ""
"Even though Seafile app servers work independently, they still have to share "
"some session information. All shared session information are stored in "
"memcached. So all Seafile app servers have to connect to the same memcached "
"(cluster). More details about memcached configuration will discussed later."
msgstr ""
"Seafile 앱 서버는 개별적으로 동작하지만 일부 세션 정보는 공유해야합니다. 모"
"든 공유 세션 정보는 memcached에 저장합니다. 따라서 Seafile 앱 서버는 동일한 "
"memcached(클러스터)에 연결해야합니다. memcached 설정 세부 내용은 다음에 다루"
"겠습니다."

#: deploy_pro/deploy_in_a_cluster.md:21
msgid ""
"All Seafile app servers access the same set of user data. The user data has "
"two parts: in MySQL database and in backend storage cluster (S3, Ceph etc.). "
"All app servers serve the data equally to the clients."
msgstr "모든 Seafile 앱서버를 통해 동일한 사용자 데이터로 접근합니다."

#: deploy_pro/deploy_in_a_cluster.md:23
msgid ""
"For database, all app servers have to connect to the same database or "
"database cluster. We recommend to use MariaDB Galera Cluster if you need a "
"database cluster."
msgstr ""
"데이터베이스에 대해서는, 모든 앱서버는 동일한 데이터베이스 또는 데이터베이스 "
"클러스터에 연결해야합니다. 데이터베이스 클러스터가 필요하다면 MariaDB 갈레라 "
"클러스터 사용을 추천합니다."

#: deploy_pro/deploy_in_a_cluster.md:25
msgid "There are a few steps to deploy a Seafile cluster:"
msgstr "Seafile 클러스터를 가동하려면 몇가지 과정을 거칩니다:"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:27
msgid "1. Prepare hardware, operating systems, memcached and database"
msgstr "1. 하드웨어, 운영체제, memcached 데이터베이스를 준비합니다"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:28
msgid "2. Setup a single Seafile server node"
msgstr "2. 단일 Seafile 서버 노드를 설정합니다"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:29
msgid "3. Copy the deployment to other Seafile nodes"
msgstr "3. 기타 Seafile 노드에 설정을 복사합니다"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:30
msgid "4. Setup Nginx/Apache and firewall rules"
msgstr "4. Nginx/Apache 및 방화벽 규칙을 설정합니다"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:31
msgid "5. Setup load balancer"
msgstr "5. 로드 밸런서를 설정합니다"

# ordered list
#: deploy_pro/deploy_in_a_cluster.md:32
msgid ""
"6. [Setup backgroup task node]"
"(enable_search_and_background_tasks_in_a_cluster.md)"
msgstr ""
"6. [백그라운드 작업 노드를 설정합니다]"
"(enable_search_and_background_tasks_in_a_cluster.md)"

# header
#: deploy_pro/deploy_in_a_cluster.md:34
msgid "## <a id=\"wiki-preparation\"></a>Preparation"
msgstr "## <a id=\"wiki-preparation\"></a>준비"

# header
#: deploy_pro/deploy_in_a_cluster.md:36
msgid "### Hardware"
msgstr "### 하드웨어"

#: deploy_pro/deploy_in_a_cluster.md:38
msgid "At least 2 Linux server with at least 2GB RAM."
msgstr "최소한 2GB 램을 보유한 리눅스 서버 두대가 있어야합니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:40
#: deploy_pro/download_and_setup_seafile_professional_server.md:62
msgid "### Install Python libraries ###"
msgstr "### 파이썬 라이브러리 설치 ###"

#: deploy_pro/deploy_in_a_cluster.md:42
msgid "On each mode, you need to install some python libraries."
msgstr "각 노드에 파이썬 라이브러리를 설치해야합니다."

#: deploy_pro/deploy_in_a_cluster.md:44
msgid "First make sure your have installed python 2.6 or 2.7, then:"
msgstr "우선 파이썬 2.6 또는 2.7을 설치했는지 확인하시고, 그 다음:"

# code block
#: deploy_pro/deploy_in_a_cluster.md:45
#: deploy_pro/download_and_setup_seafile_professional_server.md:65
msgid ""
"```\n"
"sudo easy_install pip\n"
"sudo pip install boto\n"
"```"
msgstr ""
"```\n"
"sudo easy_install pip\n"
"sudo pip install boto\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:50
#: deploy_pro/download_and_setup_seafile_professional_server.md:70
msgid ""
"If you receive an error about \"Wheel installs require setuptools >= ...\", "
"run this between the pip and boto lines above"
msgstr ""
"\"Wheel installs require setuptools >= ...\" 오류 메시지가 나타났다면, pip과 "
"boto 줄 사이에 다음 명령을 실행하십시오"

# code block
#: deploy_pro/deploy_in_a_cluster.md:51
#: deploy_pro/download_and_setup_seafile_professional_server.md:71
msgid ""
"```\n"
"sudo pip install setuptools --no-use-wheel --upgrade\n"
"```"
msgstr ""
"```\n"
"sudo pip install setuptools --no-use-wheel --upgrade\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:55
msgid "### Setup Memcached"
msgstr "### Memcached 설정"

#: deploy_pro/deploy_in_a_cluster.md:57
msgid ""
"All seafile server instances will share the same memcached servers. Let's "
"assume that the address of memcached server is 192.168.1.134, listening on "
"port 11211 (the default)."
msgstr ""
"모든 Seafile 서버 인스턴스는 동일한 memcached 서버를 함께 활용합니다. "
"memcached 서버의 주소는 192.168.1.134, 11211번 포트(기본)에서 요청을 대기한다"
"고 가정하겠습니다."

#: deploy_pro/deploy_in_a_cluster.md:59
msgid ""
"By default, memcached only listen on 127.0.0.1. So you should modify "
"memcached.conf and restart memcached."
msgstr ""
"기본적으로 memcached는 127.0.0.1에서만 요청대기합니다. 따라서 memcached.conf "
"설정을 수정하고 memcached를 다시 시작해야합니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:61
msgid ""
"```\n"
"# Specify which IP address to listen on. The default is to listen on all IP "
"addresses\n"
"# This parameter is one of the only security measures that memcached has, so "
"make sure\n"
"# it's listening on a firewalled interface.\n"
"-l 0.0.0.0\n"
"```"
msgstr ""
"```\n"
"# Specify which IP address to listen on. The default is to listen on all IP "
"addresses\n"
"# This parameter is one of the only security measures that memcached has, so "
"make sure\n"
"# it's listening on a firewalled interface.\n"
"-l 0.0.0.0\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:68
msgid ""
"It's also recommended to set a higher limit for memcached's memory, such as "
"256MB."
msgstr "memcached의 메모리 상위 한계 값을 256MB 처럼 설정하는 것이 좋습니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:70
msgid ""
"```\n"
"# Start with a cap of 64 megs of memory. It's reasonable, and the daemon "
"default\n"
"# Note that the daemon will grow to this size, but does not start out "
"holding this much\n"
"# memory\n"
"-m 256\n"
"```"
msgstr ""
"```\n"
"# Start with a cap of 64 megs of memory. It's reasonable, and the daemon "
"default\n"
"# Note that the daemon will grow to this size, but does not start out "
"holding this much\n"
"# memory\n"
"-m 256\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:77
msgid ""
"Seafile servers share session information within memcached. If you set up a "
"memcached cluster, please make sure all the seafile server nodes connects to "
"all the memcached nodes."
msgstr ""
"Seafile 서버는 memcached의 세션 정보를 공유합니다. memcached 클러스터를 설정"
"하면, 모든 memcached 노드에 Seafile 서버 노드를 연결했는지 확인하십시오."

#: deploy_pro/deploy_in_a_cluster.md:79
msgid ""
"When setting up a memcached cluster, you can either run one memcached "
"instance on each Seafile server node, or set up separate machines for the "
"memcached cluster. It usually saves you some money if you run memcached on "
"Seafile server nodes."
msgstr ""
"memcached 클러스터를 설정하면, 각 Seafile 서버 노드에 memcached 인스턴스를 실"
"행하거나 memcached 클러스터로 머신을 따로 설정할 수 있습니다. Seafile 서버 노"
"드에 memcached를 실행하면 비용을 절약할 수 있습니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:81
msgid "### (Optional) Setup MariaDB Cluster"
msgstr "### (선택) MariaDB 클러스터 설정"

#: deploy_pro/deploy_in_a_cluster.md:83
msgid ""
"MariaDB cluster helps you to remove single point of failure from the cluster "
"architecture. Every update in the database cluster is synchronously "
"replicated to all instances."
msgstr ""
"MariaDB 클러스터는 클러스터 구조에서 문제가 발생하는 단일 지점을 제거하도록 "
"합니다. 데이터베이스 클러스터의 모든 업데이트 과정에서 모든 인스턴스를 대상으"
"로 동시에 리플리케이션을 진행합니다."

#: deploy_pro/deploy_in_a_cluster.md:85
msgid ""
"It's recommended that you run one database instance on each Seafile server "
"node. There are a few benefits about this approach:"
msgstr ""
"각 Seafile 서버 노드마다 데이터베이스 인스턴스 하나씩 실행하시는것이 좋습니"
"다. 이 방식으로 구동하면 몇가지 이득이 있습니다:"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:87
msgid ""
"* The Seafile app server always access its local database intance, which is "
"faster."
msgstr "* Seafile 앱 서버는 항상 빠른 로컬 데이터베이스 인스턴스에 접근합니다."

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:88
msgid ""
"* You don't have to set up another load balancer for the database instances."
msgstr ""
"* 데이터베이스 인스턴스용도로 다른 로드 밸런서를 설정할 필요가 없습니다."

#: deploy_pro/deploy_in_a_cluster.md:90
msgid ""
"This architecture should scale well for a few tens of database nodes, since "
"Seafile has no much write operations to the db. For bigger deployment, you'd "
"better use more sophiscated load balancing techiques for the databases."
msgstr ""
"Seafile에서는 DB에 쓰기 동작을 그다지 많이 처리하지 않기 때문에 이 구조로 데"
"이터베이스 노드 열댓개로 늘릴 수 있습니다. 좀 더 큰 구동 환경이라면, 데이터베"
"이스에 좀 더 세련된 로드 밸런싱 기술을 활용하는게 좋습니다."

#: deploy_pro/deploy_in_a_cluster.md:92
msgid ""
"Details about setting up MariaDB cluster is covered in [this document]"
"(clustering_with_mariadb_ceph.md)."
msgstr ""
"MariaDB 클러스터 설정 관련 자세한 내용은 [이 문서]"
"(clustering_with_mariadb_ceph.md)에서 다룹니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:94
msgid "## <a id=\"wiki-configure-single-node\"></a> Configure a Single Node"
msgstr "## <a id=\"wiki-configure-single-node\"></a> 단일 노드 설정"

#: deploy_pro/deploy_in_a_cluster.md:96
msgid ""
"You should make sure the config files on every Seafile server are "
"consistent. **It's critical that you don't set up seafile server on each "
"machine separately. You should set up seafile server on one machine then "
"copy the config directory to the other machines.**"
msgstr ""
"모든 Seafile 서버의 설정 파일을 비슷하게 일관되게 두었는지 확인하십시오. **"
"각 머신별로 Seafile 서버를 설정할 필요가 없다는 점이 **"

# header
#: deploy_pro/deploy_in_a_cluster.md:98
#: deploy_pro/download_and_setup_seafile_professional_server.md:87
#: deploy_pro/migrate_from_seafile_community_server.md:48
msgid "### Get the license ###"
msgstr "### 라이선스 취득 ###"

#: deploy_pro/deploy_in_a_cluster.md:100
#: deploy_pro/download_and_setup_seafile_professional_server.md:89
msgid ""
"Put the license you get under the top level diretory. In our wiki, we use "
"the diretory `/data/haiwen/` as the top level directory."
msgstr ""
"라이선스 파일을 최상위 디렉터리에 넣으십시오. 위키에서는 최상위 디렉터리로 `/"
"data/haiwen` 디렉터리를 사용합니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:103
msgid "### Download/Uncompress Seafile Professional Server ###"
msgstr "### Seafile 전문가판 서버 다운로드 및 압축 해제 ###"

# code block
#: deploy_pro/deploy_in_a_cluster.md:105
msgid ""
"```\n"
"tar xf seafile-pro-server_2.1.3_x86-64.tar.gz\n"
"```"
msgstr ""
"```\n"
"tar xf seafile-pro-server_2.1.3_x86-64.tar.gz\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:109
#: deploy_pro/download_and_setup_seafile_professional_server.md:99
#: deploy_pro/migrate_from_seafile_community_server.md:63
#: deploy_pro/migrate_from_seafile_community_server.md:111
msgid "Now you have:"
msgstr "이제 다음 파일 및 디렉터리가 나타납니다:"

# code block
#: deploy_pro/deploy_in_a_cluster.md:111
msgid ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"└── seafile-pro-server-2.1.3/\n"
"```"
msgstr ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"└── seafile-pro-server-2.1.3/\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:116
msgid "### Setup Seafile Config"
msgstr "### Seafile 설정"

#: deploy_pro/deploy_in_a_cluster.md:118
msgid ""
"The setup process of Seafile Professional Server is the same as the Seafile "
"Community Server. See [Download and Setup Seafile Server With MySQL](../"
"deploy/using_mysql.md) in the community wiki."
msgstr ""
"Seafile 전문가판 서버의 설치 절차는 Seafile 커뮤니티판 서버와 동일합니다. 커"
"뮤니티 위키의  [Seafile 서버 및 MySQL 다운로드 및 설치](../deploy/"
"using_mysql.md)를 참고하십시오."

#: deploy_pro/deploy_in_a_cluster.md:120
msgid ""
"Note: **Use the load balancer's address or domain name for the server "
"address. Don't use the local IP address of each Seafile server machine. This "
"assures the user will always access your service via the load balancers.**"
msgstr ""
"참고: **서버 주소에는 로드 밸런서 주소 또는 도메인 이름을 사용하십시오. 각 "
"Seafile 서버 머신에 로컬 IP주소는 사용하지 마십시오. 로드 밸런서로 서비스에 "
"항상 접근할 수 있게 합니다.**"

#: deploy_pro/deploy_in_a_cluster.md:122
msgid ""
"After the setup process is done, you still have to do a few manually changes "
"to the config files."
msgstr ""
"설치 절차가 끝났다면, 설정 파일에 몇가지 설정을 직접 바꾸는 일이 남았습니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:124
msgid "#### seafile.conf"
msgstr "#### seafile.conf"

#: deploy_pro/deploy_in_a_cluster.md:126
msgid "You have to add the following configuration to `seafile.conf`"
msgstr "다음 설정 내용을 `seafile.conf`에 추가하십시오"

# code block
#: deploy_pro/deploy_in_a_cluster.md:128
msgid ""
"```\n"
"[cluster]\n"
"enabled = true\n"
"memcached_options = --SERVER=192.168.1.134 --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[cluster]\n"
"enabled = true\n"
"memcached_options = --SERVER=192.168.1.134 --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:134
msgid ""
"If you have a memcached cluster, you need to specify all the memcached "
"server addresses in seafile.conf. The format is"
msgstr ""
"memcached 클러스터가 있다면, seafile.conf에 memcached 서버 주소를 설정하십시"
"오. 형식은 다음과 같습니다"

# code block
#: deploy_pro/deploy_in_a_cluster.md:136
msgid ""
"```\n"
"[cluster]\n"
"enabled = true\n"
"memcached_options = --SERVER=192.168.1.134 --SERVER=192.168.1.135 --"
"SERVER=192.168.1.136 --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[cluster]\n"
"enabled = true\n"
"memcached_options = --SERVER=192.168.1.134 --SERVER=192.168.1.135 --"
"SERVER=192.168.1.136 --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:142
msgid ""
"(Optional) The Seafile server also opens a port for the load balancers to "
"run health checks. Seafile by default use port 11001. You can change this by "
"adding the following config to `seafile.conf`"
msgstr ""
"(선택) Seafile 서버는 상태 검사 실행 목적으로 로드 밸런서의 포트를 열어둡니"
"다. Seafile에서는 기본적으로 11001번을 사용합니다. 이 값은 `seafile.conf`의 "
"다음 설정을 추가하여 바꿀 수 있습니다"

# code block
#: deploy_pro/deploy_in_a_cluster.md:144
msgid ""
"```\n"
"[cluster]\n"
"health_check_port = 12345\n"
"```"
msgstr ""
"```\n"
"[cluster]\n"
"health_check_port = 12345\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:149
msgid "#### seahub_settings.py"
msgstr "#### seahub_settings.py"

#: deploy_pro/deploy_in_a_cluster.md:151
msgid "Install python memcache library."
msgstr "파이썬 memcache 라이브러리를 설치하십시오."

# code block
#: deploy_pro/deploy_in_a_cluster.md:155
msgid ""
"```\n"
"sudo apt-get install python-memcache\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install python-memcache\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:159
msgid "On CentOS/RedHat:"
msgstr "CentOS/RedHat:"

# code block
#: deploy_pro/deploy_in_a_cluster.md:161
msgid ""
"```\n"
"sudo yum install python-memcached\n"
"```"
msgstr ""
"```\n"
"sudo yum install python-memcached\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:165
msgid ""
"Add following configuration to `seahub_settings.py`. These settings tell "
"Seahub to store avatar in database and cache avatar in memcached, and store "
"css CACHE to local memory of every node."
msgstr ""
"`seahub_settings.py`에 다음 설정을 추가하십시오. 이 설정은 데이터베이스에 아"
"바타를 저장하고 memcached에 아바타를 캐시 공간에 저장해두며, 모든 노드의 자"
"체 메모리에 css 캐시를 저장해둘 것을 Seahub에 알려줍니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:167
msgid ""
"```\n"
"CACHES = {\n"
"    'default': {\n"
"        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n"
"        'LOCATION': '192.168.1.134:11211',\n"
"    }\n"
"}\n"
"\n"
"AVATAR_FILE_STORAGE = 'seahub.base.database_storage.DatabaseStorage'\n"
"\n"
"COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem.LocMemCache'\n"
"\n"
"```"
msgstr ""
"```\n"
"CACHES = {\n"
"    'default': {\n"
"        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n"
"        'LOCATION': '192.168.1.134:11211',\n"
"    }\n"
"}\n"
"\n"
"AVATAR_FILE_STORAGE = 'seahub.base.database_storage.DatabaseStorage'\n"
"\n"
"COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem.LocMemCache'\n"
"\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:181
msgid ""
"If you use memcached cluster, please replace the `CACHES` variable with the "
"following:"
msgstr ""
"memcached 클러스터를 사용하면 `CACHES` 변수값을 다음 값으로 바꾸십시오:"

# code block
#: deploy_pro/deploy_in_a_cluster.md:183
msgid ""
"```\n"
"CACHES = {\n"
"    'default': {\n"
"        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n"
"        'LOCATION': ['192.168.1.134:11211', '192.168.1.135:11211', "
"'192.168.1.136:11211',],\n"
"    }\n"
"}\n"
"```"
msgstr ""
"```\n"
"CACHES = {\n"
"    'default': {\n"
"        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n"
"        'LOCATION': ['192.168.1.134:11211', '192.168.1.135:11211', "
"'192.168.1.136:11211',],\n"
"    }\n"
"}\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:192
msgid ""
"If you enable thumbnail feature, you'd better set thumbnail storage path to "
"a **Shared Folder**, so that every node will create/get thumbnail through "
"the same **Shared Folder**."
msgstr ""
"썸네일 기능을 활성화했다면, 썸네일 저장소 경로를 **공유 폴더**로 설정하여, 모"
"든 노드에서 **공유 폴더**를 통해 썸네일을 만들고 가져올 수 있게 하는 것이 좋"
"습니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:194
msgid ""
"```\n"
"THUMBNAIL_ROOT = 'path/to/shared/folder/'\n"
"```"
msgstr ""
"```\n"
"THUMBNAIL_ROOT = 'path/to/shared/folder/'\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:198
msgid "#### seafevents.conf"
msgstr "#### seafevents.conf"

#: deploy_pro/deploy_in_a_cluster.md:200
msgid ""
"Add following to `seafevents.conf` to disable file indexing service on the "
"local server. The file indexing service should be started on a dedicated "
"background server."
msgstr ""
"다음 설정을 `seafevents.conf`에 추가하여 로컬 서버의 파일 색인화 서비스를 비"
"활성화하십시오. 파일 색인 서비스는 별도로 제공한 백그라운드 서버에서 시작해야"
"합니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:202
msgid ""
"```\n"
"[INDEX FILES]\n"
"external_es_server = true\n"
"```"
msgstr ""
"```\n"
"[INDEX FILES]\n"
"external_es_server = true\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:207
msgid "### Update Seahub Database"
msgstr "### Seahub 데이터베이스 업데이트"

#: deploy_pro/deploy_in_a_cluster.md:209
msgid ""
"In cluster environment, we have to store avatars in the database instead of "
"in a local disk."
msgstr ""
"클러스터 환경에서는 로컬 디스크 대신 데이터베이스에 아바타를 저장해야합니다."

# code block
#: deploy_pro/deploy_in_a_cluster.md:211
msgid ""
"```\n"
"CREATE TABLE `avatar_uploaded` (`filename` TEXT NOT NULL, `filename_md5` "
"CHAR(32) NOT NULL PRIMARY KEY, `data` MEDIUMTEXT NOT NULL, `size` INTEGER "
"NOT NULL, `mtime` datetime NOT NULL);\n"
"```"
msgstr ""
"```\n"
"CREATE TABLE `avatar_uploaded` (`filename` TEXT NOT NULL, `filename_md5` "
"CHAR(32) NOT NULL PRIMARY KEY, `data` MEDIUMTEXT NOT NULL, `size` INTEGER "
"NOT NULL, `mtime` datetime NOT NULL);\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:215
msgid "### Backend Storage Settings"
msgstr "### 백엔드 저장 장치 설정"

#: deploy_pro/deploy_in_a_cluster.md:217
msgid ""
"You also need to add the settings for backend cloud storage systems to the "
"config files."
msgstr "백엔드 클라우드 저장소 시스템 설정을 설정 파일에 추가해야합니다."

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:219
msgid ""
"* For NFS: [Setup Seafile cluster with NFS](setup_seafile_cluster_with_nfs."
"md)"
msgstr ""
"* NFS: [Seafile 클러스터 및 NFS 설정](setup_seafile_cluster_with_nfs.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:220
msgid "* For S3: [Setup With Amazon S3](setup_with_mazon_S3.md)"
msgstr "* S3: [Amazon S3 설정](setup_with_mazon_S3.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:221
msgid ""
"* For OpenStack Swift: [Setup With OpenStackSwift](setup_with_OpenStackSwift."
"md)"
msgstr "* 오픈스택 Swift: [오픈스택 Swift 설정](setup_with_OpenStackSwift.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:222
msgid "* For Ceph: [Setup With Ceph](setup_with_Ceph.md)"
msgstr "* Ceph: [Ceph 설정](setup_with_Ceph.md)"

# header
#: deploy_pro/deploy_in_a_cluster.md:225
msgid "### Run and Test the Single Node"
msgstr "### 단일 노드 실행 및 시험"

#: deploy_pro/deploy_in_a_cluster.md:227
msgid ""
"Once you have finished configuring this single node, start it to test if it "
"can run correctly:"
msgstr ""
"이 단일 노드 설정이 끝났으면, 서버를 시작하여 제대로 동작하는지 시험하십시오:"

# code block
#: deploy_pro/deploy_in_a_cluster.md:229
msgid ""
"```\n"
"cd /data/haiwen/seafile-server-latest\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"
msgstr ""
"```\n"
"cd /data/haiwen/seafile-server-latest\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"

#: deploy_pro/deploy_in_a_cluster.md:235
msgid ""
"*Note:* The first time you start seahub, the script would prompt you to "
"create an admin account for your seafile server. "
msgstr "*참고:*"

#: deploy_pro/deploy_in_a_cluster.md:237
msgid ""
"Open your browser and visit http://ip-address-of-this-node:8000, login with "
"the admin account."
msgstr ""
"브라우저를 열고 http://ip-address-of-this-node:8000 주소에 들어가서 admin 계"
"정으로 로그인하십시오."

# header
#: deploy_pro/deploy_in_a_cluster.md:240
msgid "## <a id=\"wiki-configure-other-nodes\"></a> Configure other nodes"
msgstr "## <a id=\"wiki-configure-other-nodes\"></a>기타 노드 설정"

#: deploy_pro/deploy_in_a_cluster.md:242
msgid ""
"Now you have one node working fine, let's continue to configure other nodes."
msgstr "이제 노드 하나가 잘 동작한, 다른 노드도 계속 설정하겠습니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:244
msgid "### Copy the config to all Seafile servers"
msgstr "### 모든 Seafile 서버에 설정 복사"

#: deploy_pro/deploy_in_a_cluster.md:246
msgid ""
"Supposed your seafile installation directory is `/data/haiwen`, compress "
"this whole directory into a tar ball and copy the tar ball to all other "
"Seafile server machines. You can simply uncompress the tar ball and use it."
msgstr ""
"Seafile 설치 디렉터리를 `/data/haiwen`이라고 하고, 이 디렉터리 전체를 타르볼"
"로 압축한 후 다른 Seafile 서버 머신에 복사했다고 가정하겠습니다. 간단하게 이 "
"타르볼을 풀어 사용할 수 있습니다."

#: deploy_pro/deploy_in_a_cluster.md:248
msgid ""
"On each node, run `./seafile.sh` and `./seahub.sh` to start seafile server."
msgstr ""
"각 노드에서 `./seafile.sh` 및 `./seahub.sh`를 실행하여 Seafile 서버를 시작하"
"십시오."

# header
#: deploy_pro/deploy_in_a_cluster.md:250
msgid "## Setup Nginx/Apache and Https"
msgstr "## Nginx/Apache 및 https 설정"

#: deploy_pro/deploy_in_a_cluster.md:252
msgid ""
"You'll usually want to use Nginx/Apache and https for web access. You need "
"to set it up on each machine running Seafile server. **Make sure the "
"certificate on all the servers are the same.**"
msgstr ""
"웹 접근 용도로 Nginx/Apache와 https를 사용할 수 있습니다. Seafile 서버를 실행"
"하는 각 머신마다 설정해야합니다. **모든 서버의 인증서가 동일한지 확인하십시"
"오.**"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:254
msgid "* For Nginx:"
msgstr "* Nginx:"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:255
msgid "   * [Config Seahub with Nginx](../deploy/deploy_with_nginx.md)"
msgstr "   * [Seahub 및 Nginx 설정](../deploy/deploy_with_nginx.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:256
msgid "   * [Enabling Https with Nginx](../deploy/https_with_nginx.md)"
msgstr "   * [Nginx에서 https 활성화](../deploy/https_with_nginx.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:257
msgid "* For Apache:"
msgstr "* Apache:"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:258
msgid "   * [Config Seahub with Apache](../deploy/deploy_with_apache.md)"
msgstr "   * [Seahub 및 Apache 설정](../deploy/deploy_with_apache.md)"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:259
msgid "   * [Enabling Https with Apache](../deploy/https_with_apache.md)"
msgstr "   * [Apache에서 https 활성화](../deploy/https_with_apache.md)"

# header
#: deploy_pro/deploy_in_a_cluster.md:261
msgid "## Firewall Settings"
msgstr "## 방화벽 설정"

#: deploy_pro/deploy_in_a_cluster.md:263
msgid ""
"Beside [standard ports of a seafile server](../deploy/using_firewall.md), "
"there are 2 firewall rule changes for Seafile cluster:"
msgstr ""
"[Seafile 서버 표준 포트](../deploy/using_firewall.md)를 설정하기 전, Seafile "
"클러스터의 방화벽 규칙 두가지를 설정해야합니다:"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:265
msgid ""
"* On each Seafile server machine, you should open the health check port "
"(default 11001);"
msgstr ""
"* 각 Seafile 서버 머신에 대해, 상태 검사 포트를 열어두십시오(기본값 11001);"

# unordered list
#: deploy_pro/deploy_in_a_cluster.md:266
msgid ""
"* On the memcached server, you should open the port 11211. For security, "
"only the Seafile servers should be allow to access this port."
msgstr ""
"* memcached 서버에서 11211 포트를 여십시오. 보안을 위해 Seafile 서버에서만 "
"이 포트로 접근할 수 있어야합니다."

# header
#: deploy_pro/deploy_in_a_cluster.md:269
msgid "## <a id=\"wiki-lb-settings\"></a>Load Balancer Setting"
msgstr "## <a id=\"wiki-lb-settings\"></a>로드 밸런서 설정"

#: deploy_pro/deploy_in_a_cluster.md:271
msgid ""
"Now that your cluster is already running, fire up the load balancer and "
"welcome your users."
msgstr ""
"이제 클러스터가 이미 동작중이니, 로드 밸런서를 실행하여 사용자를 맞아들이십시"
"오."

# header
#: deploy_pro/deploy_in_a_cluster.md:273
msgid "### AWS Elastic Load Balancer (ELB)"
msgstr "### AWS 엘라스틱 로드 밸런서(ELB)"

#: deploy_pro/deploy_in_a_cluster.md:275
msgid ""
"In the AWS ELB management console, after you've added the Seafile server "
"instances to the instance list, you should do two more configurations."
msgstr ""
"AWS 엘라스틱 로드 밸런서 관리 콘솔에서, Seafile 서버 인스턴스를 인스턴스 목록"
"에 추가하고 나면, 두 단계 이상의 설정 과정을 진행해야 합니다."

#: deploy_pro/deploy_in_a_cluster.md:277
msgid "First you should setup TCP listeners"
msgstr "우선 TCP 요청 대기자를 설정하십시오"

#: deploy_pro/deploy_in_a_cluster.md:279
msgid "![elb-listeners](../images/elb-listeners.png)"
msgstr "![elb-listeners](../images/elb-listeners.png)"

#: deploy_pro/deploy_in_a_cluster.md:281
msgid "Then you setup health check"
msgstr "그 다음 상태 검사를 설정하십시오"

#: deploy_pro/deploy_in_a_cluster.md:283
msgid "![elb-health-check](../images/elb-health-check.png)"
msgstr "![elb-health-check](../images/elb-health-check.png)"

# header
#: deploy_pro/deploy_in_a_cluster.md:285
msgid "### HAProxy"
msgstr "### HAProxy"

#: deploy_pro/deploy_in_a_cluster.md:287
msgid "This is a sample `/etc/haproxy/haproxy.cfg`:"
msgstr "다음은 `/etc/haproxy/haproxy.cfg` 예제입니다:"

#: deploy_pro/deploy_in_a_cluster.md:289
msgid "(Assume your health check port is `11001`)"
msgstr "(상태 검사 포트를 `11001`번이라고 가정합니다)"

# code block
#: deploy_pro/deploy_in_a_cluster.md:291
msgid ""
"```\n"
"global\n"
"    log 127.0.0.1 local1 notice\n"
"    maxconn 4096\n"
"    user haproxy\n"
"    group haproxy\n"
"\n"
"defaults\n"
"    log global\n"
"    mode http\n"
"    retries 3\n"
"    maxconn 2000\n"
"    timeout connect 10000\n"
"    timeout client 300000\n"
"    timeout server 300000\n"
"\n"
"listen seahub 0.0.0.0:80\n"
"    mode http\n"
"    option httplog\n"
"    option dontlognull\n"
"    option forwardfor\n"
"    server seahubserver01 192.168.1.165:80 check port 11001\n"
"    server seahubserver02 192.168.1.200:80 check port 11001\n"
"\n"
"listen seahub-https 0.0.0.0:443\n"
"    mode tcp\n"
"    option tcplog\n"
"    option dontlognull\n"
"    server seahubserver01 192.168.1.165:443 check port 11001\n"
"    server seahubserver02 192.168.1.200:443 check port 11001\n"
"```"
msgstr ""
"```\n"
"global\n"
"    log 127.0.0.1 local1 notice\n"
"    maxconn 4096\n"
"    user haproxy\n"
"    group haproxy\n"
"\n"
"defaults\n"
"    log global\n"
"    mode http\n"
"    retries 3\n"
"    maxconn 2000\n"
"    timeout connect 10000\n"
"    timeout client 300000\n"
"    timeout server 300000\n"
"\n"
"listen seahub 0.0.0.0:80\n"
"    mode http\n"
"    option httplog\n"
"    option dontlognull\n"
"    option forwardfor\n"
"    server seahubserver01 192.168.1.165:80 check port 11001\n"
"    server seahubserver02 192.168.1.200:80 check port 11001\n"
"\n"
"listen seahub-https 0.0.0.0:443\n"
"    mode tcp\n"
"    option tcplog\n"
"    option dontlognull\n"
"    server seahubserver01 192.168.1.165:443 check port 11001\n"
"    server seahubserver02 192.168.1.200:443 check port 11001\n"
"```"

# header
#: deploy_pro/deploy_in_a_cluster.md:323
msgid "## See how it runs"
msgstr "## 동작 방식 살펴보기"

#: deploy_pro/deploy_in_a_cluster.md:325
msgid ""
"Now you should be able to test your cluster. Open https://seafile.example."
"com in your browser and enjoy. You can also sync file with Seafile clients."
msgstr ""
"이제 클러스터를 시험해볼 수 있습니다. https://seafile.example.com 주소를 브라"
"우저에서 열고 재밌게 활용해보십시오. Seafile 클라이언트로 파일을 동기화할 수 "
"있습니다."

#: deploy_pro/deploy_in_a_cluster.md:327
msgid ""
"If the above works, the next step would be [Enable search and background "
"tasks in a cluster](enable_search_and_background_tasks_in_a_cluster.md)."
msgstr ""
"위 과정을 진행한 결과가 동작한다면, 다음 진행 단계는 [클러스터에서 검색 기능 "
"및 백그라운드 작업 활성화](enable_search_and_background_tasks_in_a_cluster."
"md) 입니다."

# header
#: deploy_pro/details_about_file_search.md:1
msgid "# Details about File Search"
msgstr "# 파일 검색 세부 안내"

# header
#: deploy_pro/details_about_file_search.md:5
msgid "## <a id=\"search-opt\"></a>Search Options"
msgstr "## <a id=\"search-opt\"></a>검색 설정 항목"

#: deploy_pro/details_about_file_search.md:7
msgid ""
"Following options should be set in file **seafevents.conf**, and need to "
"restart seafile and seahub to take effect."
msgstr ""
"**seafevents.conf** 파일에 다음 설정 항목을 넣어야 하며, 바꾼 설정을 적용하려"
"면 Seafile과 Seahub를 다시 시작해야합니다."

# code block
#: deploy_pro/details_about_file_search.md:9
msgid ""
"```\n"
"[INDEX FILES]\n"
"...\n"
"# Enable full-text search for PDF/Word/PPT\n"
"index_office_pdf = false\n"
"\n"
"```"
msgstr ""
"```\n"
"[INDEX FILES]\n"
"...\n"
"# Enable full-text search for PDF/Word/PPT\n"
"index_office_pdf = false\n"
"\n"
"```"

# header
#: deploy_pro/details_about_file_search.md:17
msgid "## Use existing ElasticSearch server"
msgstr "## 기존 ElasticSearch 서버 활용"

#: deploy_pro/details_about_file_search.md:19
msgid ""
"The search module use an elasticsearch server bundled within the seafile pro "
"server tarball. However, you may have an existing ElasticSearch server or "
"cluster running in your company. In this situation, you can change the "
"config file to use your existing ES server or cluster."
msgstr ""
"엘리스틱 서치 서버를 사용하는 검색 모듈은 Seafile 전문가판 서버 타르볼에 들어"
"있습니다. 그러나 엘라스틱서치 서버 또는 클러스터가 업체에서 이미 실행중일 지"
"도 모릅니다. 이 상황에서는 기존의 엘라스틱서치 서버 또는 클러스터를 사용하도"
"록 설정 파일을 바꿀 수 있습니다."

#: deploy_pro/details_about_file_search.md:21
msgid "This feature is added since `Seafile Professional Server 2.0.5`."
msgstr "이 기능은 `Seafile 전문가판 서버 2.0.5`부터 추가했습니다."

# header
#: deploy_pro/details_about_file_search.md:23
msgid "### Notes"
msgstr "### 참고"

# unordered list
#: deploy_pro/details_about_file_search.md:25
msgid ""
"- Your ES cluster must have thrift transport plugin installed. If not, "
"install it:"
msgstr ""
"- ES 클러스터에 thrift 전송 플러그인을 설치해야 합니다. 설치하지 않았다면, 설"
"치하십시오:"

# code block
#: deploy_pro/details_about_file_search.md:27
msgid ""
"```\n"
"bin/plugin -install elasticsearch/elasticsearch-transport-thrift/1.6.0\n"
"```"
msgstr ""
"```\n"
"bin/plugin -install elasticsearch/elasticsearch-transport-thrift/1.6.0\n"
"```"

#: deploy_pro/details_about_file_search.md:31
msgid "Restart your ES server after this."
msgstr "그 다음 ES 서버를 다시 시작하십시오."

# unordered list
#: deploy_pro/details_about_file_search.md:33
msgid ""
"- Currently the seafile search module use the default analyzer in your ES "
"server settings. "
msgstr ""
"- 현재 Seafile 검색 모듈은 ES 서버 설정을 통해 기본 분석 프로그램을 활용합니"
"다. "

# header
#: deploy_pro/details_about_file_search.md:36
msgid "### Change the config file"
msgstr "### 설정 파일 설정 바꾸기"

# unordered list
#: deploy_pro/details_about_file_search.md:38
msgid ""
"- Edit `seafevents.conf`, add settings in the section **[INDEX FILES]** to "
"specify your ES server host and port:"
msgstr ""
"- `seafevents.conf`를 편집하여 **[INDEX FILES]** 섹션에 지정 ES 서버 호스트 "
"및 포트를 추가하십시오:"

# code block
#: deploy_pro/details_about_file_search.md:40
msgid ""
"```\n"
"vim seafevents.conf\n"
"```"
msgstr ""
"```\n"
"vim seafevents.conf\n"
"```"

# code block
#: deploy_pro/details_about_file_search.md:44
msgid ""
"```\n"
"[INDEX FILES]\n"
"...\n"
"es_host = 192.168.1.101\n"
"es_port = 9500\n"
"```"
msgstr ""
"```\n"
"[INDEX FILES]\n"
"...\n"
"es_host = 192.168.1.101\n"
"es_port = 9500\n"
"```"

# unordered list
#: deploy_pro/details_about_file_search.md:51
msgid "- `es_host`: The ip address of your ES server"
msgstr "- `es_host`: ES 서버의 IP 주소"

# unordered list
#: deploy_pro/details_about_file_search.md:52
msgid ""
"- `es_port`: The listening port of the Thrift transport module. By default "
"it should be `9500`"
msgstr ""
"- `es_port`: Thrift 전송 모듈의 요청 대기 포트. 기본적으로 `9500` 입니다"

# header
#: deploy_pro/details_about_file_search.md:54
msgid "## <a id=\"wiki-faq\"></a>Common problems"
msgstr "## <a id=\"wiki-faq\"></a>일반 문제"

# header
#: deploy_pro/details_about_file_search.md:56
msgid ""
"### <a id=\"how-to-rebuild-search-index\"></a>How to rebuild index if "
"something goes wrong"
msgstr ""
"### <a id=\"how-to-rebuild-search-index\"></a>문제 발생시 색인 재구성 방법"

#: deploy_pro/details_about_file_search.md:58
msgid "You can rebuild search index by:"
msgstr "다음 명령으로 검색 색인을 재구성할 수 있습니다:"

# code block
#: deploy_pro/details_about_file_search.md:60
msgid ""
"```\n"
"./pro/pro.py search --clear\n"
"./pro/pro.py search --update\n"
"```"
msgstr ""
"```\n"
"./pro/pro.py search --clear\n"
"./pro/pro.py search --update\n"
"```"

#: deploy_pro/details_about_file_search.md:65
msgid "If this not work, you can try the following steps:"
msgstr "이 명령이 동작하지 않으면 다음 절차를 따라 해결할 수 있습니다:"

# ordered list
#: deploy_pro/details_about_file_search.md:67
msgid "1. Stop Seafile"
msgstr "1. Seafile을 멈추십시오"

# ordered list
#: deploy_pro/details_about_file_search.md:68
msgid "2. Remove old search index `rm -rf pro-data/search`"
msgstr "2. `rm -rf pro-data/search` 명령으로 이전 검색 색인을 제거하십시오"

# ordered list
#: deploy_pro/details_about_file_search.md:69
msgid "3. Restart Seafile"
msgstr "3. Seafile을 다시 시작하십시오"

# ordered list
#: deploy_pro/details_about_file_search.md:70
msgid "4. Wait one minute then run `./pro/pro.py search --update`"
msgstr ""
"4. 1분 정도 기다린 후 `./pro/pro.py search --update` 명령을 실행하십시오"

# header
#: deploy_pro/details_about_file_search.md:73
msgid ""
"### <a id=\"wiki-search-no-result\"></a>I get no result when I search a "
"keyword"
msgstr "### <a id=\"wiki-search-no-result\"></a>검색어로 검색할 때 결과가 없음"

#: deploy_pro/details_about_file_search.md:75
msgid ""
"The search index is updated every 10 minutes by default. So before the first "
"index update is performed, you get nothing no matter what you search."
msgstr ""
"검색 색인은 기본적으로 매 10분마다 업데이트 합니다. 따라서 색인 업데이트를 처"
"음 수행하기 전에는 어떤 결과도 나타나지 않습니다."

#: deploy_pro/details_about_file_search.md:77
#: deploy_pro/faq_for_seafile_pro_server.md:12
msgid "  To be able to search immediately,"
msgstr "  즉시 검색할 수 있게 하려면,"

# unordered list
#: deploy_pro/details_about_file_search.md:79
#: deploy_pro/faq_for_seafile_pro_server.md:14
msgid "  - Make sure you have started seafile server"
msgstr "  - Seafile 서버를 시작했는지 확인하십시오"

# unordered list
#: deploy_pro/details_about_file_search.md:80
#: deploy_pro/faq_for_seafile_pro_server.md:15
msgid "  - Update the search index manually:"
msgstr "  - 검색 색인을 직접 업데이트 하십시오:"

# code block
#: deploy_pro/details_about_file_search.md:81
msgid ""
"```\n"
"      cd haiwen/seafile-pro-server-2.0.4\n"
"     ./pro/pro.py search --update\n"
"```"
msgstr ""
"```\n"
"      cd haiwen/seafile-pro-server-2.0.4\n"
"     ./pro/pro.py search --update\n"
"```"

# header
#: deploy_pro/details_about_file_search.md:86
msgid ""
"### <a id=\"wiki-cannot-search-encrypted-files\"></a>Encrypted files cannot "
"be searched"
msgstr ""
"### <a id=\"wiki-cannot-search-encrypted-files\"></a>암호화 파일을 검색할 수 "
"없음"

#: deploy_pro/details_about_file_search.md:88
msgid ""
"This is because the server can't index encrypted files, since, they are "
"encrypted."
msgstr ""
"서버에서 암호화한 파일은 그 자체로 암호화 상태이기 때문에 색인 처리할 수 없습"
"니다."

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:1
msgid "# Download and Setup Seafile Professional Server"
msgstr "# Seafile 전문가 서버 다운로드 및 설치"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:2
#: deploy_pro/migrate_from_seafile_community_server.md:11
msgid "## <a id=\"wiki-preparation\"></a>Preparation ##"
msgstr "## <a id=\"wiki-preparation\"></a>준비 ##"

#: deploy_pro/download_and_setup_seafile_professional_server.md:4
msgid ""
"The following document is tested in Ubuntu 14.04 and CentOS 7. We recommend "
"that you use Ubuntu 14.04 or CentOS 7 as your server."
msgstr ""
"다음 문서는 우분투 14.04와 CentOS 7에서 확인했습니다. 우분투 14.04 또는 "
"CentOS 7 서버를 사용하시는게 좋습니다."

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:6
msgid "> NOTE:"
msgstr "> 참고:"

#: deploy_pro/download_and_setup_seafile_professional_server.md:7
#: deploy_pro/download_and_setup_seafile_professional_server.md:9
#: deploy_pro/download_and_setup_seafile_professional_server.md:13
#: deploy_pro/download_and_setup_seafile_professional_server.md:16
#: deploy_pro/download_and_setup_seafile_professional_server.md:18
#: deploy_pro/download_and_setup_seafile_professional_server.md:24
#: deploy_pro/download_and_setup_seafile_professional_server.md:28
msgid ">"
msgstr ">"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:8
msgid ""
"> If you are using Ubuntu 14.04, you can use the following command to "
"install all the dependency that Seafile requires at one time."
msgstr ""
"> 우분투 14.04를 활용중이면, 다음 명령을 활용하여 Seafile에서 필요한 모든 의"
"존 요소를 한번에 설치할 수 있습니다."

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:10
#: deploy_pro/download_and_setup_seafile_professional_server.md:15
#: deploy_pro/download_and_setup_seafile_professional_server.md:19
#: deploy_pro/download_and_setup_seafile_professional_server.md:27
msgid "> ```"
msgstr "> ```"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:11
msgid ""
"> sudo apt-get install openjdk-7-jre poppler-utils libpython2.7 python-pip \\"
msgstr ""
"> sudo apt-get install openjdk-7-jre poppler-utils libpython2.7 python-pip \\"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:12
msgid ""
"> mysql-server python-setuptools python-imaging python-mysqldb python-"
"memcache python-ldap"
msgstr ""
"> mysql-server python-setuptools python-imaging python-mysqldb python-"
"memcache python-ldap"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:14
#: deploy_pro/download_and_setup_seafile_professional_server.md:25
msgid "> sudo pip install boto"
msgstr "> sudo pip install boto"

#: deploy_pro/download_and_setup_seafile_professional_server.md:17
msgid "> CentOS 7:"
msgstr "> CentOS 7:"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:20
msgid "> wget https://bootstrap.pypa.io/get-pip.py"
msgstr "> wget https://bootstrap.pypa.io/get-pip.py"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:21
msgid "> sudo python get-pip.py"
msgstr "> sudo python get-pip.py"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:22
msgid ""
"> sudo yum install java-1.7.0-openjdk poppler-utils python-dev python-"
"setuptools \\"
msgstr ""
"> sudo yum install java-1.7.0-openjdk poppler-utils python-dev python-"
"setuptools \\"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:23
msgid ""
"> python-imaging MySQL-python mysql-server.x86_64 python-memcached python-"
"ldap"
msgstr ""
"> python-imaging MySQL-python mysql-server.x86_64 python-memcached python-"
"ldap"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:26
msgid "> sudo /etc/init.d/mysqld start"
msgstr "> sudo /etc/init.d/mysqld start"

# blockquote, which can be cascaded
#: deploy_pro/download_and_setup_seafile_professional_server.md:29
msgid "> For more information please see bellow."
msgstr "> 자세한 내용은 하단을 참고하십시오."

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:31
msgid "### Minimum System Requirement ###"
msgstr "### 최소 시스템 요구 사항 ###"

# unordered list
#: deploy_pro/download_and_setup_seafile_professional_server.md:33
msgid "- A Linux server with 2GB RAM"
msgstr "- 2GB 램을 장착한 리눅스 서버"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:35
#: deploy_pro/migrate_from_seafile_community_server.md:13
msgid "### Install Java Runtime Environment (JRE) ###"
msgstr "### 자바 런타임 환경(JRE) 설치 ###"

#: deploy_pro/download_and_setup_seafile_professional_server.md:37
#: deploy_pro/download_and_setup_seafile_professional_server.md:51
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:27
#: deploy_pro/migrate_from_seafile_community_server.md:17
#: deploy_pro/migrate_from_seafile_community_server.md:33
#: deploy_pro/office_documents_preview.md:7
msgid "On Ubuntu/Debian:"
msgstr "우분투/데비안:"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:38
#: deploy_pro/migrate_from_seafile_community_server.md:18
msgid ""
"```\n"
"sudo apt-get install openjdk-7-jre\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install openjdk-7-jre\n"
"```"

#: deploy_pro/download_and_setup_seafile_professional_server.md:42
#: deploy_pro/download_and_setup_seafile_professional_server.md:56
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:32
#: deploy_pro/migrate_from_seafile_community_server.md:22
#: deploy_pro/migrate_from_seafile_community_server.md:38
msgid "On CentOS/Red Hat:"
msgstr "CentOS/레드햇:"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:43
#: deploy_pro/migrate_from_seafile_community_server.md:23
msgid ""
"```\n"
"sudo yum install java-1.7.0-openjdk\n"
"```"
msgstr ""
"```\n"
"sudo yum install java-1.7.0-openjdk\n"
"```"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:47
#: deploy_pro/migrate_from_seafile_community_server.md:29
msgid "### Install poppler-utils ###"
msgstr "### poppler-utils 설치 ###"

#: deploy_pro/download_and_setup_seafile_professional_server.md:49
#: deploy_pro/migrate_from_seafile_community_server.md:31
msgid "We need poppler-utils for full text search of pdf files."
msgstr "pdf 파일에서 완전한 문구 검색을 처리하려면 poppler-utils가 필요합니다."

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:52
#: deploy_pro/migrate_from_seafile_community_server.md:34
msgid ""
"```\n"
"sudo apt-get install poppler-utils\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install poppler-utils\n"
"```"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:57
#: deploy_pro/migrate_from_seafile_community_server.md:39
msgid ""
"```\n"
"sudo yum install poppler-utils\n"
"```"
msgstr ""
"```\n"
"sudo yum install poppler-utils\n"
"```"

#: deploy_pro/download_and_setup_seafile_professional_server.md:64
msgid "First make sure your have installed python 2.7"
msgstr "우선 파이썬 2.7을 설치했는지 확인하십시오"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:75
msgid "### Install libpython2.7 if you use Ubuntu 14.04"
msgstr "### 우분투 14.04일 경우 libpython2.7 설치"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:77
msgid ""
"```\n"
"sudo apt-get install libpython2.7\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install libpython2.7\n"
"```"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:81
msgid "### Install other libraries as required in the community edition"
msgstr "### 커뮤니티판에서 필요한 기타 라이브러리 설치"

#: deploy_pro/download_and_setup_seafile_professional_server.md:83
msgid ""
"See [Download and Setup Seafile Server With MySQL](../deploy/using_mysql.md)."
msgstr ""
"[Seafile 서버 및 MySQL 다운로드 및 설치](../deploy/using_mysql.md)를 참고하십"
"시오."

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:85
msgid ""
"## <a id=\"wiki-download-and-setup\"></a>Download and Setup Seafile "
"Professional Server ##"
msgstr ""
"## <a id=\"wiki-download-and-setup\"></a> Seafile 전문가 서버 다운로드 및 설"
"치 ##"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:92
#: deploy_pro/migrate_from_seafile_community_server.md:54
msgid ""
"### <a id=\"wiki-download-and-uncompress\"></a>Download/Uncompress Seafile "
"Professional Server ###"
msgstr ""
"### <a id=\"wiki-download-and-uncompress\"></a>Seafile 전문가판 서버 다운로"
"드/압축 해제 ###"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:95
#: deploy_pro/migrate_from_seafile_community_server.md:59
msgid ""
"```\n"
"tar xf seafile-pro-server_1.8.0_x86-64.tar.gz\n"
"```"
msgstr ""
"```\n"
"tar xf seafile-pro-server_1.8.0_x86-64.tar.gz\n"
"```"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:101
msgid ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"└── seafile-pro-server-1.8.0/\n"
"```"
msgstr ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"└── seafile-pro-server-1.8.0/\n"
"```"

#: deploy_pro/download_and_setup_seafile_professional_server.md:108
#: deploy_pro/download_and_setup_seafile_professional_server.md:115
#: deploy_pro/migrate_from_seafile_community_server.md:79
#: deploy_pro/migrate_from_seafile_community_server.md:86
msgid "-----------"
msgstr "-----------"

#: deploy_pro/download_and_setup_seafile_professional_server.md:110
#: deploy_pro/migrate_from_seafile_community_server.md:81
msgid ""
"You should notice the difference between the names of the Community Server "
"and Professional Server. Take the 1.8.0 64bit version as an example:"
msgstr ""
"커뮤니티판 서버와 전문가판 서버의 이름이 다르다는 점에 주목하십시오. 1.8.0 64"
"비트 버전을 예로 들어보겠습니다:"

# unordered list
#: deploy_pro/download_and_setup_seafile_professional_server.md:112
#: deploy_pro/migrate_from_seafile_community_server.md:83
msgid ""
"- Seafile Community Server tarball is `seafile-server_1.8.0_x86-86.tar.gz`; "
"After uncompressing, the folder is `seafile-server-1.8.0`"
msgstr ""
"- Seafile 커뮤니티판 서버 타르볼은 `seafile-server_1.8.0_x86-86.tar.gz`이며, "
"압축을 해제하면 `seafile-server-1.8.0` 폴더가 나옵니다"

# unordered list
#: deploy_pro/download_and_setup_seafile_professional_server.md:113
#: deploy_pro/migrate_from_seafile_community_server.md:84
msgid ""
"- Seafile Professional Server tarball is `seafile-pro-server_1.8.0_x86-86."
"tar.gz`; After uncompressing, the folder is `seafile-pro-server-1.8.0`"
msgstr ""
"- Seafile 전문가판 서버 타르볼은 `seafile-pro-server_1.8.0_x86-86.tar.gz`이"
"며, 압축을 해제하면 `seafile-pro-server-1.8.0` 폴더가 나옵니다"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:118
msgid "### Setup ###"
msgstr "### 설치 ###"

#: deploy_pro/download_and_setup_seafile_professional_server.md:120
msgid ""
"The setup process of Seafile Professional Server is the same as the Seafile "
"Community Server. See [Download and Setup Seafile Server With MySQL](../"
"deploy/using_mysql.md)."
msgstr ""
" Seafile 전문가판 설치 과정은 Seafile 커뮤니티판 서버 설치 과정과 비슷합니"
"다. [Seafile 서버 및 MySQL 다운로드 및 설치](../deploy/using_mysql.md)를 참고"
"하십시오."

#: deploy_pro/download_and_setup_seafile_professional_server.md:122
msgid ""
"If you have any problem in setting up the service, please check [Common "
"problems in setting up Seafile server](../deploy/"
"common_problems_for_setting_up_server.md)."
msgstr ""
"서비스 설정에 문제가 있다면 [Seafile 서버 설정 과정 중 일반적인 문제](../"
"deploy/common_problems_for_setting_up_server.md)를 확인하십시오."

#: deploy_pro/download_and_setup_seafile_professional_server.md:124
msgid ""
"After you have succesfully setup Seafile Professional Server, you would have "
"a directory layout like this:"
msgstr ""
"Seafile 전문가판 서버 설정이 제대로 끝나면, 디렉터리 배치는 다음과 같습니다:"

# code block
#: deploy_pro/download_and_setup_seafile_professional_server.md:126
msgid ""
"```\n"
"#tree haiwen -L 2\n"
"haiwen\n"
"├── seafile-license.txt # license file\n"
"├── ccnet               # configuration files\n"
"│   ├── mykey.peer\n"
"│   ├── PeerMgr\n"
"│   └── seafile.ini\n"
"├── conf\n"
"│   └── ccnet.conf\n"
"│   └── seafile.conf\n"
"│   └── seahub_settings.py\n"
"│   └── seafevents.conf\n"
"├── pro-data            # data specific for professional version\n"
"├── seafile-data\n"
"├── seafile-pro-server-1.8.0\n"
"│   ├── reset-admin.sh\n"
"│   ├── runtime\n"
"│   ├── seafile\n"
"│   ├── seafile.sh\n"
"│   ├── seahub\n"
"│   ├── seahub-extra\n"
"│   ├── seahub.sh\n"
"│   ├── setup-seafile.sh\n"
"│   ├── setup-seafile-mysql.py\n"
"│   ├── setup-seafile-mysql.sh\n"
"│   └── upgrade\n"
"├── seahub-data\n"
"│   └── avatars         # for user avatars\n"
"├── seahub.db\n"
"```"
msgstr ""
"```\n"
"#tree haiwen -L 2\n"
"haiwen\n"
"├── seafile-license.txt # license file\n"
"├── ccnet               # configuration files\n"
"│   ├── mykey.peer\n"
"│   ├── PeerMgr\n"
"│   └── seafile.ini\n"
"├── conf\n"
"│   └── ccnet.conf\n"
"│   └── seafile.conf\n"
"│   └── seahub_settings.py\n"
"│   └── seafevents.conf\n"
"├── pro-data            # data specific for professional version\n"
"├── seafile-data\n"
"├── seafile-pro-server-1.8.0\n"
"│   ├── reset-admin.sh\n"
"│   ├── runtime\n"
"│   ├── seafile\n"
"│   ├── seafile.sh\n"
"│   ├── seahub\n"
"│   ├── seahub-extra\n"
"│   ├── seahub.sh\n"
"│   ├── setup-seafile.sh\n"
"│   ├── setup-seafile-mysql.py\n"
"│   ├── setup-seafile-mysql.sh\n"
"│   └── upgrade\n"
"├── seahub-data\n"
"│   └── avatars         # for user avatars\n"
"├── seahub.db\n"
"```"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:158
msgid "## Performance turning"
msgstr "## 성능 조정"

#: deploy_pro/download_and_setup_seafile_professional_server.md:160
msgid ""
"If you have more than 50 users in your Seafile system, we highly recommand "
"you to [add memcached](../deploy/add_memcached.md). This will make the web "
"10x faster.  "
msgstr ""
"Seafile 시스템 사용자가 50명 이상인 경우 [memcached를 추가](../deploy/"
"add_memcached.md) 하시는 것이 좋습니다. 웹을 10배 빠르게 해줍니다."

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:162
msgid "## <a id=\"wiki-done\"></a>Done"
msgstr "## <a id=\"wiki-done\"></a>완료"

# header
#: deploy_pro/download_and_setup_seafile_professional_server.md:164
msgid "At this point, the basic setup of Seafile Professional Server is done."
msgstr "여기서 Seafile 전문가판 서버 기본 설정은 끝납니다."

#: deploy_pro/download_and_setup_seafile_professional_server.md:166
msgid "You may want to read more about Seafile Professional Server:"
msgstr "Seafile 전문가판 서버에 대해 더 읽어볼 만한 내용이 있습니다:"

# unordered list
#: deploy_pro/download_and_setup_seafile_professional_server.md:168
msgid "- [FAQ For Seafile Professional Server](faq_for_seafile_pro_server.md)"
msgstr ""
"- [Seafile 전문가판 서버에 대한 자주 묻는 질문](faq_for_seafile_pro_server."
"md)"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:1
msgid ""
"*Note:* Before you try to deploy file search office documents preview, make "
"sure other parts of your seafile cluster are already working, e.g upload/"
"download files in a web browser. Make sure memcached is configured as "
"described in [\"Deploy in a cluster\"](./deploy_in_a_cluster.md)."
msgstr ""
"*참고:* 파일 검색 오피스 문서 미리보기를 가동하기 전, Seafile 클러스터의 다"
"른 부분이 이미 동작중인지 확인하십시오. 예: 웹 브라우저의 파일 업로드/다운로"
"드. memcached를 [\"클러스터에서 구동하기\"](./deploy_in_a_cluster.md)에서 설"
"명한 대로 설정했는지 확인하십시오."

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:3
msgid "# Enable search and background tasks in a cluster"
msgstr "# 클러스터의 검색 기능 및 백그라운드 작업 활성화"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:7
msgid ""
"In the seafile cluster, only one server should run the background tasks, "
"including:"
msgstr ""
"Seafile 클러스터에서 다음을 수반하는 백그라운드 작업은 하나의 서버에서만 실행"
"해야 합니다:"

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:9
msgid "- indexing files for search"
msgstr "- 검색용 파일 색인 처리"

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:10
msgid "- email notification"
msgstr "- 전자메일 알림"

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:11
msgid "- office documents converts service"
msgstr "- 오피스 문서 변환 서비스"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:13
msgid "Let's assume you have three nodes in your cluster: A, B, and C."
msgstr "클러스터의 노드가 A, B, C가 있다고 가정하겠습니다."

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:15
msgid "* Node A is backend node that run background tasks."
msgstr "* 노드 A는 백그라운드 작업을 수행하는 백엔드 노드입니다."

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:16
msgid "* Node B and C are frontend nodes that serving requests from clients."
msgstr "* 노드 B 및 C는 클라이언트의 요청을 받는 프론트엔드 노드입니다."

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:18
msgid "![cluster-nodes](../images/cluster-nodes.png)"
msgstr "![cluster-nodes](../images/cluster-nodes.png)"

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:21
msgid "## Configuring Node A (the backend node)"
msgstr "## 노드 A (백엔드 노드) 설정"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:23
msgid ""
"If you following the steps on settings up a cluster, node B and node C "
"should have already be configured as frontend node. You can copy the "
"configuration of node B as a base for node A. Then do the following steps:"
msgstr ""
"다음의 클러스터 설정 단계를 따른다면, 노드 B 및 C는 프론트엔드 노드로 이미 설"
"정했습니다. 노드 A에 대한 노드 B의 설정을 기반 설정으로 복사할 수 있습니다. "
"그러면 다음 과정을 진행하십시오:"

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:25
msgid "### Install Dependencies (Java, LibreOffice, poppler)"
msgstr "### 의존 요소 설치(자바, 리버오피스, poppler)"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:28
msgid ""
"```\n"
"sudo apt-get install openjdk-7-jre libreoffice poppler-utils python-uno # or "
"python3-uno for ubuntu 14.04+\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install openjdk-7-jre libreoffice poppler-utils python-uno # or "
"python3-uno for ubuntu 14.04+\n"
"```"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:33
msgid ""
"```\n"
"sudo yum install java-1.7.0-openjdk\n"
"sudo yum install libreoffice libreoffice-headless libreoffice-pyuno\n"
"sudo yum install poppler-utils\n"
"```"
msgstr ""
"```\n"
"sudo yum install java-1.7.0-openjdk\n"
"sudo yum install libreoffice libreoffice-headless libreoffice-pyuno\n"
"sudo yum install poppler-utils\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:40
msgid "Edit **seafevents.conf** and ensure this line does NOT exist:"
msgstr "**seafevents.conf**를 편집하여 다음 줄이 없는지 확인하십시오:"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:42
msgid ""
"```\n"
"external_es_server = true\n"
"```"
msgstr ""
"```\n"
"external_es_server = true\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:46
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:68
msgid "Edit **seahub_settings.py** and add a line:"
msgstr "**seahub_settings.py**를 편집하여 다음 줄을 추가하십시오:"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:48
msgid ""
"```\n"
"OFFICE_CONVERTOR_NODE = True\n"
"```"
msgstr ""
"```\n"
"OFFICE_CONVERTOR_NODE = True\n"
"```"

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:52
msgid "### Edit the firewall rules"
msgstr "### 방화벽 규칙 편집"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:54
msgid ""
"In your firewall rules for node A, you should open the port 9500 (for search "
"requests)."
msgstr ""
"노드 A에 대한 방화벽 규칙에서 9500번 포트를 열어야 합니다(검색 요청용)."

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:56
msgid "## Configure Other Nodes"
msgstr "## 기타 노드 설정"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:58
msgid "On nodes B and C, you need to:"
msgstr "노드 B 및 C에서, 다음 절차를 수행해야합니다:"

# unordered list
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:60
msgid "* Edit `seafevents.conf`, add the following lines:"
msgstr "* `seafevents.conf`를 편집하고 다음 줄을 추가하십시오:"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:61
msgid ""
"```\n"
"[INDEX FILES]\n"
"external_es_server = true\n"
"es_host = <ip of node A>\n"
"es_port = 9500\n"
"```"
msgstr ""
"```\n"
"[INDEX FILES]\n"
"external_es_server = true\n"
"es_host = <ip of node A>\n"
"es_port = 9500\n"
"```"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:70
msgid ""
"```\n"
"OFFICE_CONVERTOR_ROOT = http://<ip of node A>\n"
"```"
msgstr ""
"```\n"
"OFFICE_CONVERTOR_ROOT = http://<ip of node A>\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:74
msgid ""
"Make sure requests to http://<ip of node A> is also handled by seahub. For "
"example , you may need to add this nginx configuration in the background "
"node:"
msgstr ""
"http://<노드 A의 IP> 요청을 Seahub에서도 처리하는지 확인하십시오. 이 설정을 "
"백그라운드 노드의 Nginx 설정에 추가해야합니다:"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:76
msgid ""
"```\n"
"server {\n"
"      listen 80;\n"
"      server_name <IP of node A>;\n"
"      location / {\n"
"          fastcgi_pass    127.0.0.1:8000;\n"
"          ...\n"
"  }\n"
"```"
msgstr ""
"```\n"
"server {\n"
"      listen 80;\n"
"      server_name <IP of node A>;\n"
"      location / {\n"
"          fastcgi_pass    127.0.0.1:8000;\n"
"          ...\n"
"  }\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:86
msgid ""
"As a simple test, you can use this command to test if you set it up "
"correctly."
msgstr ""
"간단한 시험에서와 같이, 설정을 제대로 처리했는지 시험하려는 목적으로 이 명령"
"을 사용할 수 있습니다."

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:88
msgid ""
"```\n"
"curl -v http://<IP of node A>/office-convert/internal/status/\n"
"```"
msgstr ""
"```\n"
"curl -v http://<IP of node A>/office-convert/internal/status/\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:92
msgid "It should say \"400 Bad Request\" when you have nginx config updated."
msgstr "Nginx 설정을 업데이트하면 \"400 Bad Request\" 메시지가 뜹니다."

# header
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:95
msgid "## Start the background tasks"
msgstr "## 백그라운드 작업 시작"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:97
msgid ""
"Before starting background tasks, you have to start seafile and seahub on "
"the backend node, too."
msgstr ""
"백그라운드 작업을 시작하기 전 Seafile 및 Seahub를 백엔드 노드에서 시작해야합"
"니다."

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:99
msgid ""
"```\n"
"./seafile.sh start\n"
"./seahub.sh start-fastcgi\n"
"```"
msgstr ""
"```\n"
"./seafile.sh start\n"
"./seahub.sh start-fastcgi\n"
"```"

#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:104
msgid ""
"On node A (the background tasks node), you can start/stop background tasks "
"by:"
msgstr ""
"노드 A(백그라운드 작업 노드)에서, 다음 명령으로 백그라운드 작업을 시작하거나 "
"멈출 수 있습니다:"

# code block
#: deploy_pro/enable_search_and_background_tasks_in_a_cluster.md:106
msgid ""
"```\n"
"./seafile-background-tasks.sh { start | stop | restart }\n"
"```"
msgstr ""
"```\n"
"./seafile-background-tasks.sh { start | stop | restart }\n"
"```"

# header
#: deploy_pro/faq_for_seafile_pro_server.md:1
msgid "# FAQ"
msgstr "# 자주 묻는 질문"

# header
#: deploy_pro/faq_for_seafile_pro_server.md:2
msgid "## <a id=\"wiki-search-faq\"></a>FAQ about Search ##"
msgstr "## <a id=\"wiki-search-faq\"></a>검색 기능에 대해 자주 묻는 질문 ##"

# unordered list
#: deploy_pro/faq_for_seafile_pro_server.md:4
msgid ""
"- Q: However I tried, files in an encrypted library aren't listed in the "
"search results"
msgstr "- Q: 써보려고 했는데 암호화한 라이브러리의 파일은 검색 목록에 안뜨네요"

#: deploy_pro/faq_for_seafile_pro_server.md:6
msgid ""
"  A: This is because the server can't index encrypted files, since, they are "
"encrypted."
msgstr ""
"  A: 서버에서 암호화한 파일은 암호화했기 때문에 색인처리할 수 없습니다."

# unordered list
#: deploy_pro/faq_for_seafile_pro_server.md:8
msgid ""
"- Q: I switched to Professional Server from Community Server, but whatever I "
"search, I get no results"
msgstr ""
"- Q: 커뮤니티판 서버에서 전문가판 서버로 전환했는데, 검색할 때마다 결과가 안"
"나오네요"

#: deploy_pro/faq_for_seafile_pro_server.md:10
msgid ""
"  A: The search index is updated every 10 minutes by default. So before the "
"first index update is performed, you get nothing no matter what you search."
msgstr ""
"  A: 검색 색인은 기본적으로 매 10분마다 업데이트합니다. 따라서 처음 색인 업데"
"이트를 수행하기 전에는 검색 결과가 나타나지 않습니다."

# code block
#: deploy_pro/faq_for_seafile_pro_server.md:16
msgid ""
"  ```\n"
"  cd haiwen/seafile-pro-server-1.7.0\n"
"  ./pro/pro.py search --update\n"
"  ```"
msgstr ""
"  ```\n"
"  cd haiwen/seafile-pro-server-1.7.0\n"
"  ./pro/pro.py search --update\n"
"  ```"

#: deploy_pro/faq_for_seafile_pro_server.md:21
msgid "  If you have lots of files, this process may take quite a while."
msgstr "  파일이 좀 많이 있다면, 처리 과정이 좀 걸릴 수 있습니다."

# unordered list
#: deploy_pro/faq_for_seafile_pro_server.md:23
msgid ""
"- Q: I want to enable full text search for office/pdf documents, so I set "
"`index_office_pdf` to `true` in the configuration file, but it doesn't work."
msgstr ""
"- Q: 오피스/pdf 문서 전체 텍스트 검색을 활성화하려고 해서, 설정 파일에서 "
"`index_office_pdf`를 `true`로 설정했는데 동작하지 않네요."

#: deploy_pro/faq_for_seafile_pro_server.md:25
msgid "  A: In this case, you need to:"
msgstr "A: 이 경우 다음 절차를 진행해야합니다:"

#: deploy_pro/faq_for_seafile_pro_server.md:26
msgid ""
"  1. Edit the value of `index_office_pdf` option in `seafevents.conf` to "
"`true`"
msgstr ""
"1. `seafevents.conf`의 `index_office_pdf` 설정 항목을 `true` 값으로 설정하십"
"시오"

#: deploy_pro/faq_for_seafile_pro_server.md:27
msgid "  2. Restart seafile server"
msgstr "  2. Seafile 서버를 다시 시작하십시오"

# code block
#: deploy_pro/faq_for_seafile_pro_server.md:28
msgid ""
"  ```\n"
"  cd /data/haiwen/seafile-pro-server-1.7.0/\n"
"  ./seafile.sh restart\n"
"  ```"
msgstr ""
"  ```\n"
"  cd /data/haiwen/seafile-pro-server-1.7.0/\n"
"  ./seafile.sh restart\n"
"  ```"

#: deploy_pro/faq_for_seafile_pro_server.md:32
msgid "  3. Delete the existing search index"
msgstr "  3. 기존 검색 색인을 삭제하십시오"

# code block
#: deploy_pro/faq_for_seafile_pro_server.md:33
msgid ""
"  ```\n"
"  ./pro/pro.py search --clear\n"
"  ```"
msgstr ""
"  ```\n"
"  ./pro/pro.py search --clear\n"
"  ```"

#: deploy_pro/faq_for_seafile_pro_server.md:36
msgid "  4. Create and update the search index again"
msgstr "  4. 검색 색인을 다시 만들고 업데이트하십시오"

# code block
#: deploy_pro/faq_for_seafile_pro_server.md:37
msgid ""
"  ```\n"
"  ./pro/pro.py search --update\n"
"  ```"
msgstr ""
"  ```\n"
"  ./pro/pro.py search --update\n"
"  ```"

# header
#: deploy_pro/faq_for_seafile_pro_server.md:42
msgid ""
"## <a id=\"wiki-office-preview-faq\"></a>FAQ about libreoffice-based office "
"documents preview ##"
msgstr ""
"## <a id=\"wiki-office-preview-faq\"></a>리버오피스 기반 오피스 문서 미리보"
"기 관련 자주 묻는 질문 ##"

# unordered list
#: deploy_pro/faq_for_seafile_pro_server.md:44
msgid ""
"- Q: The browser displays \"document conversion failed\", and in the logs I "
"see messages like `[WARNING] failed to convert xxx to ...`, what should I do?"
msgstr ""
"- Q: 브라우저에서 \"문서 변환 실패\"라고 뜨고 로그 메시지에는 `[WARNING] "
"failed to convert xxx to ...` 같은 내용이 나타나는데 뭘 해야 하죠?"

#: deploy_pro/faq_for_seafile_pro_server.md:46
msgid ""
"  A: Sometimes the libreoffice process need to be restarted, especially if "
"it's the first time seafile server is running on the server."
msgstr ""
"  A: 특히 서버에서 Seafile 서버를 처음 실행하는 경우, 가끔은 리버오피스 프로"
"세스를 다시 시작해야 합니다."

#: deploy_pro/faq_for_seafile_pro_server.md:48
msgid "  Try to kill the libreoffice process:"
msgstr "리버오피스 프로세스 강제 종료를 시도해보십시오:"

# code block
#: deploy_pro/faq_for_seafile_pro_server.md:49
msgid ""
"  ```sh\n"
"  pkill -f soffice.bin\n"
"  ```"
msgstr ""
"  ```sh\n"
"  pkill -f soffice.bin\n"
"  ```"

#: deploy_pro/faq_for_seafile_pro_server.md:52
msgid "  Now try re-opening the preview page in the brower again."
msgstr "이제 브라우저에서 미리보기 페이지를 다시 열어보십시오."

#: deploy_pro/faq_for_seafile_pro_server.md:54
msgid ""
"  Also if you are deploying seafile in cluster mode, make sure memcached is "
"working on each server."
msgstr ""
"  또한 클러스터 모드에서 Seafile을 가동할 경우 memcached가 각 서버에서 동작하"
"는지 확인하십시오."

# unordered list
#: deploy_pro/faq_for_seafile_pro_server.md:56
msgid "- Q: The above solution does not solve my problem."
msgstr "- Q: 위 해결책으로 문제를 해결해주지 못해요."

#: deploy_pro/faq_for_seafile_pro_server.md:58
msgid ""
"  A: Please check whether the user you run Seafile can correctly start the "
"libreoffice process. There may be permission problems. For example, if you "
"use www-data user to run Seafile, make sure www-data has a home directory "
"and can write to the home directory."
msgstr ""
"  A: 사용자가 실행한 Seafile에서 리버오피스 프로세스를 제대로 시작할 수 있는"
"지 확인하십시오. 권한 문제일 수 있습니다. 예를 들어 Seafile을 실행할 때 www-"
"data 사용자를 활용한다면, www-data 사용자에게 내 폴더가 있고 내 폴더에 기록"
"할 수 있는지 확인하십시오."

# header
#: deploy_pro/ldap_group_sync.md:1
msgid "# Importing Groups from LDAP/AD"
msgstr "# LDAP/AD에서 그룹 가져오기"

#: deploy_pro/ldap_group_sync.md:3
msgid ""
"Since version 4.1.0, the Pro Edition supports importing (syncing) groups "
"from LDAP or Active Directory."
msgstr ""
"버전 4.1.0부터 전문가판에서는 LDAP 또는 액티브 디렉터리에서 그룹 가져오기(동"
"기화)를 지원합니다."

# header
#: deploy_pro/ldap_group_sync.md:5
msgid "## How It Works"
msgstr "## 동작 방식"

#: deploy_pro/ldap_group_sync.md:7
msgid ""
"The importing or syncing process maps groups from LDAP directory server to "
"groups in Seafile's internal database. This process is one-way."
msgstr ""
"가져오기 또는 동기화 처리 과정에서는 LDAP 디렉터리 서버의 그룹을 Seafile의 자"
"체 데이터베이스의 그룹과 대응합니다. 이 처리 과정은 단일 방식으로 진행합니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:9
msgid "* Any changes to groups in the database won't propagate back to LDAP;"
msgstr "* 데이터베이스의 그룹 바뀜은 LDAP에 다시 영향을 주지 않습니다"

# unordered list
#: deploy_pro/ldap_group_sync.md:10
msgid ""
"* Any changes to groups in the database, except for \"setting a member as "
"group admin\", will be overwritten in the next LDAP sync operation. If you "
"want to add or delete members, you can only do that on LDAP server."
msgstr ""
"* \"구성원을 그룹 관리자로 설정\" 항목을 제외한 데이터베이스의 그룹 바쓈은 다"
"음 LDAP 동기화 과정에서 덮어씁니다. 구성원 추가, 삭제는 LDAP 서버에서만 가능"
"합니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:11
msgid "* The creator of imported groups will be set to the system admin."
msgstr "* 가져온 그룹의 생성 담당자는 시스템 관리자입니다."

#: deploy_pro/ldap_group_sync.md:13
msgid ""
"Some LDAP servers, such as AD, allows setting a group as member of another "
"group. This is called \"nested group\". Our process supports syncing nested "
"groups. Supposed group B is a member of group A, the result would be: every "
"member of group B will be imported as a member of both group A and group B."
msgstr ""
"AD와 같은 일부 LDAP 서버에서는 다른 그룹의 구성원에 대한 그룹 설정이 가능합니"
"다. 이를 \"중첩 그룹\"이라 합니다. Seafile 에서는 중첩 그룹 동기화 처리 과정"
"을 지원합니다. 그룹 B가 그룹 A의 구성 그룹이라고 가정하면 결과는 다음과 같습"
"니다. 그룹 B의 모든 구성원은 그룹 A와 그룹 B의 구성원으로 가져옵니다."

#: deploy_pro/ldap_group_sync.md:15
msgid "There are two modes of operation:"
msgstr "동작 방식에는 두가지가 있습니다:"

# unordered list
#: deploy_pro/ldap_group_sync.md:17
msgid "* Periodical: the syncing process will be executed in a fixed interval"
msgstr "* 주기 동작: 동기화 처리 과정을 고정 주기별로 실행합니다"

# unordered list
#: deploy_pro/ldap_group_sync.md:18
msgid "* Manual: there is a script you can run to trigger the syncing once"
msgstr "* 수동 동작: 동기화 동작을 한 번 실행할 수 있는 스크립트가 있습니다"

# header
#: deploy_pro/ldap_group_sync.md:20 deploy_pro/virus_scan_with_kav4fs.md:3
msgid "## Prerequisite"
msgstr "## 준비"

#: deploy_pro/ldap_group_sync.md:22
msgid "You have to install python-ldap library in your system."
msgstr "python-ldap 라이브러리를 시스템에 설치해야합니다."

#: deploy_pro/ldap_group_sync.md:24
msgid "For Debian or Ubuntu"
msgstr "데비안 또는 우분투"

# code block
#: deploy_pro/ldap_group_sync.md:26 deploy_pro/using_ldap_pro.md:79
msgid ""
"```\n"
"sudo apt-get install python-ldap\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install python-ldap\n"
"```"

#: deploy_pro/ldap_group_sync.md:30
msgid "For CentOS or RedHat"
msgstr "CentOS 또는 레드햇"

# code block
#: deploy_pro/ldap_group_sync.md:32
msgid ""
"```\n"
"sudo yum install python-ldap\n"
"```"
msgstr ""
"```\n"
"sudo yum install python-ldap\n"
"```"

# header
#: deploy_pro/ldap_group_sync.md:36
msgid "## Configuration"
msgstr "## 설정"

#: deploy_pro/ldap_group_sync.md:38
msgid ""
"Before enabling LDAP group sync, you should have configured LDAP "
"authentication. See [Configure Seafile to use LDAP](using_ldap.md) for "
"details."
msgstr ""
"LDAP 그룹 동기화를 활성화하기 전, LDAP 인증을 설정해야합니다. 자세한 내용을 "
"보려면 [LDAP 사용 설정](using_ldap.md)을 참고하십시오."

#: deploy_pro/ldap_group_sync.md:40
msgid ""
"The following are LDAP group sync related options. They're in the "
"\"[LDAP_SYNC]\" section of [ccnet.conf](../config/ccnet-conf.md)."
msgstr ""
"다음은 LDAP 그룹 동기화 관련 설정 항목입니다. [ccnet.conf](../config/ccnet-"
"conf.md)의 \"[LDAP_SYNC]\" 섹션에 있습니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:42
msgid ""
"* **ENABLE_GROUP_SYNC**: set to \"true\" if you want to enable ldap group "
"syncing"
msgstr ""
"* **ENABLE_GROUP_SYNC**: LDAP 그룹 동기화를 활성화하려면 \"true\"로 설정하십"
"시오"

# unordered list
#: deploy_pro/ldap_group_sync.md:43
msgid ""
"* **SYNC_INTERVAL**: The interval to sync. Unit is minutes. Default to 60 "
"minutes."
msgstr ""
"* **SYNC_INTERVAL**: 동기화 주기. 단위는 분입니다. 기본값은 60분입니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:44
msgid ""
"* **GROUP_OBJECT_CLASS**: This is the name of the class used to search for "
"group objects. In Active Directory, it's usually \"group\"; in OpenLDAP or "
"others, you may use \"groupOfNames\" or \"groupOfUniqueNames\", depends on "
"your LDAP server. The default value is \"group\"."
msgstr ""
"* **GROUP_OBJECT_CLASS**: 그룹 객체 검색에 사용하는 클래스의 이름. 액티브 디"
"렉터리에서는, 보통 \"group\" 입니다. OpenLDAP 또는 다른 서비스에서는, LDAP 서"
"버에 따라 \"groupOfNames\" 또는 \"groupOfUniqueNames\"를 사용할 수 있습니다. "
"기본값은 \"group\" 입니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:45
msgid ""
"* **GROUP_FILTER**: An additional filter to use when searching group "
"objects. If it's set, the final filter used to run search is "
"\"(&(objectClass=GROUP_OBJECT_CLASS)(GROUP_FILTER))\"; otherwise the final "
"filter would be \"(objectClass=GROUP_OBJECT_CLASS)\"."
msgstr ""
"* **GROUP_FILTER**: 그룹 검색에 활용할 추가 필터. 이 값을 설정하면, 검색 실행"
"에 활용할 최종 필터는 \"(&(objectClass=GROUP_OBJECT_CLASS)(GROUP_FILTER))\" "
"입니다. 설정하지 않으면 \"(objectClass=GROUP_OBJECT_CLASS)\" 입니다."

# unordered list
#: deploy_pro/ldap_group_sync.md:46
msgid ""
"* **GROUP_MEMBER_ATTR**: The attribute field to use when loading the group's "
"members. For most directory servers, the attributes is \"member\", which is "
"the default value."
msgstr ""
"* **GROUP_MEMBER_ATTR**: 그룹 구성원을 불러올 때 사용할 속성 필드. 대부분 디"
"렉터리 서버에서 속성 기본값은 \"member\"입니다."

#: deploy_pro/ldap_group_sync.md:48
msgid ""
"The search base for groups is the \"BASE_DN\" set in \"[LDAP]\" section of "
"ccnet.conf. "
msgstr "그룹 검색 기반은 ccnet.conf의 \"[LDAP]\" 섹션의 \"BASE_DN\"입니다."

#: deploy_pro/ldap_group_sync.md:50
msgid "Here is an example configuration for Active Directory:"
msgstr "액티브 디렉터리 설정 예제는 다음과 같습니다:"

# code block
#: deploy_pro/ldap_group_sync.md:52
msgid ""
"```\n"
"[LDAP]\n"
"HOST = ldap://192.168.1.123/\n"
"BASE = cn=users,dc=example,dc=com\n"
"USER_DN = administrator@example.local\n"
"PASSWORD = secret\n"
"LOGIN_ATTR = mail\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_GROUP_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"```"
msgstr ""
"```\n"
"[LDAP]\n"
"HOST = ldap://192.168.1.123/\n"
"BASE = cn=users,dc=example,dc=com\n"
"USER_DN = administrator@example.local\n"
"PASSWORD = secret\n"
"LOGIN_ATTR = mail\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_GROUP_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"```"

#: deploy_pro/ldap_group_sync.md:65
msgid ""
"For AD, you usually don't need to configure other options except for "
"\"ENABLE_GROUP_SYNC\". That's because the default values for other options "
"are the usual values for AD. If you have special settings in your LDAP "
"server, just set the corresponding options."
msgstr ""
"AD에서는 보통 \"ENABLE_GROUP_SYNC\"을 제외한 기타 설정 항목을 설정할 필요가 "
"없습니다. 다른 설정 항목의 기본값은 AD의 값이기 때문입니다.. LDAP 서버에 별도"
"로 설정한 항목이 있다면 관련 설정 항목 값을 설정하십시오."

#: deploy_pro/ldap_group_sync.md:67
msgid "Here is an example configuration for OpenLDAP:"
msgstr "OpenLDAP 설정 예제는 다음과 같습니다:"

# code block
#: deploy_pro/ldap_group_sync.md:69
msgid ""
"```\n"
"[LDAP]\n"
"HOST = ldap://192.168.1.123/\n"
"BASE = ou=users,dc=example,dc=com\n"
"USER_DN = cn=admin,dc=example,dc=com\n"
"PASSWORD = secret\n"
"LOGIN_ATTR = mail\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_GROUP_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"GROUP_OBJECT_CLASS = groupOfNames\n"
"```"
msgstr ""
"```\n"
"[LDAP]\n"
"HOST = ldap://192.168.1.123/\n"
"BASE = ou=users,dc=example,dc=com\n"
"USER_DN = cn=admin,dc=example,dc=com\n"
"PASSWORD = secret\n"
"LOGIN_ATTR = mail\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_GROUP_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"GROUP_OBJECT_CLASS = groupOfNames\n"
"```"

#: deploy_pro/ldap_group_sync.md:83
msgid ""
"**NOTE** Periodical sync won't happen immediately after you restart seafile "
"server. It gets scheduled after the first sync interval. For example if you "
"set sync interval to 30 minutes, the first auto sync will happen after 30 "
"minutes you restarts. To sync immediately, you need to manually trigger it. "
"This is covered in the next section."
msgstr ""
"**참고** Seafile 서버를 다시 시작하고 나면 주기적 동기화 작업을 바로 진행하"
"진 않습니다. 첫 동기화 주기 처리 후 일정을 수립합니다. 예를 들어 30분마다 동"
"기화하도록 설정했다면, 처음 자동 동기화는 다시 시작하고 나서 30분 후에 일어납"
"니다. 즉시 동기화 처리하려면, 직접 실행해야합니다. 이 방법은 다음 섹션에서 다"
"룹니다."

#: deploy_pro/ldap_group_sync.md:85
msgid ""
"After the sync is run, you should see log messages like the following in "
"logs/seafevents.log. And you should be able to see the groups in system "
"admin page."
msgstr ""
"동기화를 실행하고 나면 logs/seafevents.log에서 다음과 같은 기록 메시지를 볼 "
"수 있습니다. 그리고 시스템 관리자 페이지에서 그룹을 볼 수 있어야합니다."

# code block
#: deploy_pro/ldap_group_sync.md:87
msgid ""
"```\n"
"[2015-03-30 18:15:05,109] [DEBUG] create group 1, and add dn pair "
"CN=DnsUpdateProxy,CN=Users,DC=Seafile,DC=local<->1 success.\n"
"[2015-03-30 18:15:05,145] [DEBUG] create group 2, and add dn pair CN=Domain "
"Computers,CN=Users,DC=Seafile,DC=local<->2 success.\n"
"[2015-03-30 18:15:05,154] [DEBUG] create group 3, and add dn pair CN=Domain "
"Users,CN=Users,DC=Seafile,DC=local<->3 success.\n"
"[2015-03-30 18:15:05,164] [DEBUG] create group 4, and add dn pair CN=Domain "
"Admins,CN=Users,DC=Seafile,DC=local<->4 success.\n"
"[2015-03-30 18:15:05,176] [DEBUG] create group 5, and add dn pair CN=RAS and "
"IAS Servers,CN=Users,DC=Seafile,DC=local<->5 success.\n"
"[2015-03-30 18:15:05,186] [DEBUG] create group 6, and add dn pair "
"CN=Enterprise Admins,CN=Users,DC=Seafile,DC=local<->6 success.\n"
"[2015-03-30 18:15:05,197] [DEBUG] create group 7, and add dn pair CN=dev,"
"CN=Users,DC=Seafile,DC=local<->7 success.\n"
"```"
msgstr ""
"```\n"
"[2015-03-30 18:15:05,109] [DEBUG] create group 1, and add dn pair "
"CN=DnsUpdateProxy,CN=Users,DC=Seafile,DC=local<->1 success.\n"
"[2015-03-30 18:15:05,145] [DEBUG] create group 2, and add dn pair CN=Domain "
"Computers,CN=Users,DC=Seafile,DC=local<->2 success.\n"
"[2015-03-30 18:15:05,154] [DEBUG] create group 3, and add dn pair CN=Domain "
"Users,CN=Users,DC=Seafile,DC=local<->3 success.\n"
"[2015-03-30 18:15:05,164] [DEBUG] create group 4, and add dn pair CN=Domain "
"Admins,CN=Users,DC=Seafile,DC=local<->4 success.\n"
"[2015-03-30 18:15:05,176] [DEBUG] create group 5, and add dn pair CN=RAS and "
"IAS Servers,CN=Users,DC=Seafile,DC=local<->5 success.\n"
"[2015-03-30 18:15:05,186] [DEBUG] create group 6, and add dn pair "
"CN=Enterprise Admins,CN=Users,DC=Seafile,DC=local<->6 success.\n"
"[2015-03-30 18:15:05,197] [DEBUG] create group 7, and add dn pair CN=dev,"
"CN=Users,DC=Seafile,DC=local<->7 success.\n"
"```"

# header
#: deploy_pro/ldap_group_sync.md:97
msgid "## Manually Trigger Syncing"
msgstr "## 동기화 직접 실행"

#: deploy_pro/ldap_group_sync.md:99 deploy_pro/using_ldap_pro.md:171
msgid "To trigger LDAP sync manually,"
msgstr "LDAP 동기화를 직접 실행하려면,"

# code block
#: deploy_pro/ldap_group_sync.md:101 deploy_pro/using_ldap_pro.md:173
msgid ""
"```\n"
"cd seafile-server-lastest\n"
"./pro/pro.py ldapsync\n"
"```"
msgstr ""
"```\n"
"cd seafile-server-lastest\n"
"./pro/pro.py ldapsync\n"
"```"

# header
#: deploy_pro/migrate_from_seafile_community_server.md:1
msgid "# Migrate from Seafile Community Server"
msgstr "# Seafile 커뮤니티 서버에서 이전"

# header
#: deploy_pro/migrate_from_seafile_community_server.md:3
msgid "## <a id=\"wiki-restriction\"></a>Restriction ##"
msgstr "## <a id=\"wiki-restriction\"></a>제한사항 ##"

#: deploy_pro/migrate_from_seafile_community_server.md:5
msgid ""
"It's quite likely you have deployed the Seafile Community Server and want to "
"switch to the [Professional Server](http://seafile.com/en/product/"
"private_server/), or vice versa. But there is some restriction:"
msgstr ""
"Seafile 커뮤니티판 서버를 가동중이고, [전문가판 서버](http://seafile.com/en/"
"product/private_server/) 또는 그 반대로 전환하고 싶을 경우가 있습니다. 그런"
"데, 몇가지 제한 사항이 있습니다:"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:7
msgid ""
"- You can only switch between Community Server and Professional Server of "
"the same minor version."
msgstr ""
"- 커뮤니티 서버 및 전문가 서버의 부 버전이 같을 때만 전환할 수 있습니다."

#: deploy_pro/migrate_from_seafile_community_server.md:9
msgid ""
"That is, if you are using Community Server 1.6, and want to switch to the "
"Professional Server 1.7, you must first upgrade to Community Server 1.7, and "
"then follow the guides below to switch to the Professional Server 1.7. (The "
"last tiny version number in 1.7.x is not important.)"
msgstr ""
"그러니까 커뮤니티 서버 1.6을 사용하고 전문가 서버 1.7로 이전하려면 커뮤니티 "
"서버를 1.7로 우선 업그레이드 하고 전문가 서버 1.7로 전환하는 지시 사항을 따라"
"야합니다(1.7.x에서 마지막의 가장 작은 버전 숫자는 중요하지 않습니다)."

#: deploy_pro/migrate_from_seafile_community_server.md:15
msgid "Java 7 or higher is required."
msgstr "Java 7 이상이 필요합니다."

#: deploy_pro/migrate_from_seafile_community_server.md:27
msgid ""
"*Note*: Since version 3.1.12, java 1.7 is required, please check your java "
"version by `java -version`. If not, please [change the default java version]"
"(./change_default_java.md)."
msgstr ""
"*참고*: 3.1.12 버전부터 자바 1.7이 필요합니다. `java -version` 명령으로 자바 "
"버전을 확인하십시오. 1.7이 아니면 [기본 자바 버전을 변경하십시오](./"
"change_default_java.md)."

# header
#: deploy_pro/migrate_from_seafile_community_server.md:43
msgid "## <a id=\"wiki-do-migration\"></a>Do the migration ##"
msgstr "## <a id=\"wiki-do-migration\"></a>이전 작업 진행 ##"

#: deploy_pro/migrate_from_seafile_community_server.md:45
msgid ""
"We assume you have already deployed Seafile Community Server 1.8.0 under `/"
"data/haiwen/seafile-server-1.8.0`. "
msgstr ""
"`/data/haiwen/seafile-server-1.8.0`에 Seafile 커뮤니티판 서버 1.8.0을 가동중"
"이라고 가정하겠습니다."

#: deploy_pro/migrate_from_seafile_community_server.md:51
msgid ""
"Put the license you get under the top level directory of your Seafile "
"installation. In our example, it is `/data/haiwen/`."
msgstr ""
"Seafile 설치 최상위 디렉터리에 라이선스 파일을 복사하십시오, 최상위 디렉터리 "
"예는 `/data/haiwen`입니다."

#: deploy_pro/migrate_from_seafile_community_server.md:57
msgid ""
"You should uncompress the tarball to the top level directory of your "
"installation, in our example, `/data/haiwen`."
msgstr ""
"설치본의 최상위 디렉터리에 타르볼 압축을 해제해야합니다. 예를 들면 `/data/"
"haiwen`입니다."

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:65
msgid ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"├── seafile-pro-server-1.8.0/\n"
"├── seafile-server-1.8.0/\n"
"├── ccnet/\n"
"├── seafile-data/\n"
"├── seahub-data/\n"
"├── seahub.db\n"
"└── seahub_settings.py\n"
"\n"
"\n"
"```"
msgstr ""
"```\n"
"haiwen\n"
"├── seafile-license.txt\n"
"├── seafile-pro-server-1.8.0/\n"
"├── seafile-server-1.8.0/\n"
"├── ccnet/\n"
"├── seafile-data/\n"
"├── seahub-data/\n"
"├── seahub.db\n"
"└── seahub_settings.py\n"
"\n"
"\n"
"```"

# header
#: deploy_pro/migrate_from_seafile_community_server.md:89
msgid "### Do the migration ###"
msgstr "### 이전 작업 진행 ###"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:91
msgid "- Stop Seafile Community Server if it's running"
msgstr "- Seafile 커뮤니티판 서버를 실행중이면 멈추십시오"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:92
msgid ""
"```\n"
"cd haiwen/seafile-server-1.8.0\n"
"./seafile.sh stop\n"
"./seahub.sh stop\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-server-1.8.0\n"
"./seafile.sh stop\n"
"./seahub.sh stop\n"
"```"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:97
msgid "- Run the migration script "
msgstr "- 이전 스크립트를 실행하십시오"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:98
msgid ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0/\n"
"./pro/pro.py setup --migrate\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0/\n"
"./pro/pro.py setup --migrate\n"
"```"

#: deploy_pro/migrate_from_seafile_community_server.md:103
msgid "The migration script would do the following for you:"
msgstr "이전 스크립트에서는 다음 과정을 진행합니다:"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:105
msgid "- ensure your have all the prerequisites met"
msgstr "- 준비 조건을 모두 만족했는지 확인합니다"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:106
msgid "- create necessary extra configurations"
msgstr "- 필요한 추가 설정을 만듭니다"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:107
msgid "- update the avatar directory"
msgstr "- 아바타 디렉터리를 업데이트합니다"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:108
msgid "- create extra database tables  "
msgstr "- 추가 데이터베이스 테이블을 만듭니다  "

# inline html
#: deploy_pro/migrate_from_seafile_community_server.md:113
msgid ""
"<blockquote>\n"
"haiwen<br/>\n"
"├── seafile-license.txt<br/>\n"
"├── seafile-pro-server-1.8.0/<br/>\n"
"├── seafile-server-1.8.0/<br/>\n"
"├── ccnet/<br/>\n"
"├── seafile-data/<br/>\n"
"├── seahub-data/<br/>\n"
"├── seahub.db<br/>\n"
"├── seahub_settings.py<br/>\n"
"└── <span style=\"color:green;font-weight:bold;\">pro-data/</span><br/>\n"
"</blockquote>"
msgstr ""
"<blockquote>\n"
"haiwen<br/>\n"
"├── seafile-license.txt<br/>\n"
"├── seafile-pro-server-1.8.0/<br/>\n"
"├── seafile-server-1.8.0/<br/>\n"
"├── ccnet/<br/>\n"
"├── seafile-data/<br/>\n"
"├── seahub-data/<br/>\n"
"├── seahub.db<br/>\n"
"├── seahub_settings.py<br/>\n"
"└── <span style=\"color:green;font-weight:bold;\">pro-data/</span><br/>\n"
"</blockquote>"

# header
#: deploy_pro/migrate_from_seafile_community_server.md:126
msgid "### Start Seafile Professional Server ###"
msgstr "### Seafile 전문가판 서버 시작 ###"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:128
msgid ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"

# header
#: deploy_pro/migrate_from_seafile_community_server.md:135
msgid "## <a id=\"wiki-switch-back\"></a>Switch Back to Community Server ##"
msgstr "## <a id=\"wiki-switch-back\"></a>커뮤니티판 서버로 돌아가기 ##"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:137
msgid "- Stop Seafile Professional Server if it's running"
msgstr "- Seafile 전문가판 서버를 실행 중이면 멈추십시오"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:138
msgid ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0/\n"
"./seafile.sh stop\n"
"./seahub.sh stop\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-pro-server-1.8.0/\n"
"./seafile.sh stop\n"
"./seahub.sh stop\n"
"```"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:143
msgid ""
"- Update the avatar directory link just like in [Minor Upgrade](https://"
"github.com/haiwen/seafile/wiki/Upgrading-Seafile-Server#minor-upgrade-like-"
"from-150-to-151)"
msgstr ""
"- [부 버전(minor) 업그레이드](https://github.com/haiwen/seafile/wiki/"
"Upgrading-Seafile-Server#minor-upgrade-like-from-150-to-151)와 같이 아바타 디"
"렉터리 링크를 업데이트하십시오"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:144
msgid ""
"```\n"
"cd haiwen/seafile-server-1.8.0/\n"
"./upgrade/minor-upgrade.sh\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-server-1.8.0/\n"
"./upgrade/minor-upgrade.sh\n"
"```"

# unordered list
#: deploy_pro/migrate_from_seafile_community_server.md:148
msgid "- Start Seafile Community Server"
msgstr "- Seafile 커뮤니티판 서버를 시작하십시오"

# code block
#: deploy_pro/migrate_from_seafile_community_server.md:149
msgid ""
"```\n"
"cd haiwen/seafile-server-1.8.0/\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"
msgstr ""
"```\n"
"cd haiwen/seafile-server-1.8.0/\n"
"./seafile.sh start\n"
"./seahub.sh start\n"
"```"

# header
#: deploy_pro/multi_institutions.md:1
msgid "# Multiple Organization/Institution User Management"
msgstr "# 다중 조직/단체 사용자 관리"

#: deploy_pro/multi_institutions.md:3
msgid ""
"Start from version 5.1, you can add institutions into Seafile and assign "
"users into institutions. Each institution can have one or more "
"administrators. This feature is to ease user administration when multiple "
"organizations (universities) share a single Seafile instance. Unlike multi-"
"tenancy, the users are not-isolated. An user from one institution can share "
"files with another institution."
msgstr ""
"버전 5.1부터 Seafile에 단체를 추가하고 사용자를 단체에 할당할 수 있습니다. "
"각 단체에는 하나 이상의 관리자를 확보할 수 있습니다. 이 기능은 가중 조직(대학"
"교)에서 단일 Seafile 인스턴스를 공유할 때 사용자 관리를 용이하게 합니다. 다"
"중 임차 구조와는 달리, 사용자는 특정 조직에 제한적으로 묶이지 않습니다. 한 단"
"체의 사용자는 다른 단체로 파일을 공유할 수 있습니다."

# header
#: deploy_pro/multi_institutions.md:5
msgid "## Turn on the feature"
msgstr "## 기능 활성화"

#: deploy_pro/multi_institutions.md:7
msgid ""
"In `seahub_settings.py`, add `MULTI_INSTITUTION = True` to enable multi-"
"institution feature. And add"
msgstr ""
"`seahub_settings.py`에서, `MULTI_INSTITUTION = True` 설정을 추가하여 다중 단"
"체 기능을 활성화하십시오. 그리고"

# code block
#: deploy_pro/multi_institutions.md:9
msgid ""
"```\n"
"EXTRA_MIDDLEWARE_CLASSES += (\n"
"    'seahub.institutions.middleware.InstitutionMiddleware',\n"
")\n"
"```"
msgstr ""
"```\n"
"EXTRA_MIDDLEWARE_CLASSES += (\n"
"    'seahub.institutions.middleware.InstitutionMiddleware',\n"
")\n"
"```"

#: deploy_pro/multi_institutions.md:15
msgid "or"
msgstr "또는"

# code block
#: deploy_pro/multi_institutions.md:17
msgid ""
"```\n"
"EXTRA_MIDDLEWARE_CLASSES = (\n"
"    'seahub.institutions.middleware.InstitutionMiddleware',\n"
")\n"
"```"
msgstr ""
"```\n"
"EXTRA_MIDDLEWARE_CLASSES = (\n"
"    'seahub.institutions.middleware.InstitutionMiddleware',\n"
")\n"
"```"

#: deploy_pro/multi_institutions.md:23
msgid "if `EXTRA_MIDDLEWARE_CLASSES` is not defined."
msgstr "를 `EXTRA_MIDDLEWARE_CLASSES`를 정의하지 않았을 경우 추가하십시오."

# header
#: deploy_pro/multi_institutions.md:25
msgid "## Add institutions and institution admins"
msgstr "## 단체 및 단체 관리자 추가"

#: deploy_pro/multi_institutions.md:27
msgid ""
"After restart service, system admin can add institutions by adding "
"institution name in admin panel. He can also click into an institution, "
"which will list all users whose `profile.institution` match the name."
msgstr ""
"서비스를 다시 시작하고 나면, 시스템 관리자는 관리자 창에서 단체 이름을 추가하"
"여 단체를 추가할 수 있습니다. 또한 단체를 눌러 들어가서 `profile.institution`"
"과 이름이 일치하는 단체의 사용자를 볼 수 있습니다."

# header
#: deploy_pro/multi_institutions.md:29
msgid "## Assign users to institutions"
msgstr "## 사용자를 단체에 할당"

#: deploy_pro/multi_institutions.md:31
msgid ""
"If you are using Shibboleth, you can map a Shibboleth attribute into "
"institution. For example, the following configuration map organization "
"attribute to institution."
msgstr ""
"시볼레스 인증 기능을 사용한다면, 시볼레스 속성을 단체에 대응할 수 있습니다. "
"예를 들어 다음 설정은 조직 속성을 단체에 대응합니다."

# code block
#: deploy_pro/multi_institutions.md:33
msgid ""
"```\n"
"SHIBBOLETH_ATTRIBUTE_MAP = {\n"
"    \"givenname\": (False, \"givenname\"),\n"
"    \"sn\": (False, \"surname\"),\n"
"    \"mail\": (False, \"contact_email\"),\n"
"    \"organization\": (False, \"institution\"),\n"
"}\n"
"```"
msgstr ""
"```\n"
"SHIBBOLETH_ATTRIBUTE_MAP = {\n"
"    \"givenname\": (False, \"givenname\"),\n"
"    \"sn\": (False, \"surname\"),\n"
"    \"mail\": (False, \"contact_email\"),\n"
"    \"organization\": (False, \"institution\"),\n"
"}\n"
"```"

#: deploy_pro/office_documents_preview.md:1
msgid ""
"Seafile Professional server supports previewing office/pdf documents online, "
"to use it you need to follow the steps described on this page."
msgstr ""
"Seafile 전문가판 서버에서는 오피스/pdf 문서 온라인 미리보기를 지원하며, 이 기"
"능을 사용하려면 이 페이지에 설명한 절차를 따라야합니다."

# header
#: deploy_pro/office_documents_preview.md:3
msgid "### Install Libreoffice/UNO ###"
msgstr "### 리버오피스/UNO 설치 ###"

#: deploy_pro/office_documents_preview.md:5
msgid ""
"Libreoffice 4.1+ and Python-uno library are needed to enable office files "
"online preview."
msgstr ""
"오피스 파일 온라인 미리보기 기능을 활성화하려면 리버오피스 4.1 이상 그리고 "
"Python-uno 라이브러리가 필요합니다."

# code block
#: deploy_pro/office_documents_preview.md:8
msgid ""
"```\n"
"sudo apt-get install libreoffice libreoffice-script-provider-python\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install libreoffice libreoffice-script-provider-python\n"
"```"

# blockquote, which can be cascaded
#: deploy_pro/office_documents_preview.md:11
msgid ""
"> For older version of Ubuntu: `sudo apt-get install libreoffice python-uno`"
msgstr "> 우분투 이전 버전: `sudo apt-get install libreoffice python-uno`"

#: deploy_pro/office_documents_preview.md:13
msgid "On Centos/RHEL:"
msgstr "CentOS/RHEL:"

# code block
#: deploy_pro/office_documents_preview.md:14
msgid ""
"```\n"
"sudo yum install libreoffice libreoffice-headless libreoffice-pyuno\n"
"```"
msgstr ""
"```\n"
"sudo yum install libreoffice libreoffice-headless libreoffice-pyuno\n"
"```"

#: deploy_pro/office_documents_preview.md:18
msgid ""
"For other Linux distro: [Installation of LibreOffice on Linux](http://www."
"libreoffice.org/get-help/installation/linux/)"
msgstr ""
"다른 리눅스 배포판: [리눅스에서 리버오피스 설치](http://www.libreoffice.org/"
"get-help/installation/linux/)"

#: deploy_pro/office_documents_preview.md:20
msgid ""
"Also, you may need to install fonts for your language, especially for "
"Asians, otherwise the  office/pdf document may not display correctly."
msgstr ""
"또한, 사용 언어에 따라, 특히 아시아 언어권 사용자라면 글꼴을 설치해야하며, 설"
"치하지 않으면 오피스/pdf 문서를 제대로 표시할 수 없습니다."

#: deploy_pro/office_documents_preview.md:22
msgid ""
"For example, Chinese users may wish to install the WenQuanYi series of "
"truetype fonts:"
msgstr ""
"예를 들어, 중국어권 사용자는 WenQuanYi 트루타입 글꼴 모음을 설치하면 좋습니"
"다:"

# code block
#: deploy_pro/office_documents_preview.md:24
msgid ""
"```\n"
"# For ubuntu/debian\n"
"sudo apt-get install ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy\n"
"```"
msgstr ""
"```\n"
"# For ubuntu/debian\n"
"sudo apt-get install ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy\n"
"```"

# header
#: deploy_pro/office_documents_preview.md:29
msgid "### Enable Office Preview"
msgstr "### 오피스 미리보기 활성화"

# ordered list
#: deploy_pro/office_documents_preview.md:31
msgid "1. Open file `seafevents.conf`, in the `OFFICE CONVERTER` section:"
msgstr "1. `seafevents.conf` 파일을 열고 `OFFICE CONVERTER` 섹션에서:"

# code block
#: deploy_pro/office_documents_preview.md:32
msgid ""
"```\n"
"[OFFICE CONVERTER]\n"
"enabled = true\n"
"```"
msgstr ""
"```\n"
"[OFFICE CONVERTER]\n"
"enabled = true\n"
"```"

# ordered list
#: deploy_pro/office_documents_preview.md:36
msgid ""
"2. After modifying and saving `seafevents.conf`, restart seafile server by "
"`./seafile.sh restart`"
msgstr ""
"2. `seafevents.conf`를 수정하고 저장한 다음, `./seafile.sh restart` 명령으로 "
"Seafile 서버를 다시 시작하십시오"

# ordered list
#: deploy_pro/office_documents_preview.md:37
msgid ""
"3. Open a doc/ppt/xls/pdf file on seahub, you should be about the previewing "
"it in your browser."
msgstr ""
"3. doc/ppt/xls/pdf 파일을 Seahub에서 열어보십시오. 브라우저에서 미리보기 화면"
"이 나와야합니다."

# header
#: deploy_pro/office_documents_preview.md:39
msgid "### Other Configurable Options"
msgstr "### 다른 설정 가능 항목"

#: deploy_pro/office_documents_preview.md:41
msgid "Here are full list of options you can fine tune:"
msgstr "좀 더 세밀하게 설정할 수 있는 설정 항목 모두를 모아두었습니다:"

# code block
#: deploy_pro/office_documents_preview.md:43
msgid ""
"```\n"
"[OFFICE CONVERTER]\n"
"\n"
"## must be \"true\" to enable office/pdf file online preview\n"
"enabled = true\n"
"\n"
"## How many libreoffice worker processes to run concurrenlty\n"
"workers = 1\n"
"\n"
"## where to store the converted office/pdf files. Deafult is /tmp/.\n"
"outputdir = /tmp/\n"
"\n"
"## how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"\n"
"## the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"## Preview a large file (for example >30M) online will freeze the browser.\n"
"max-size = 2\n"
"\n"
"```"
msgstr ""
"```\n"
"[OFFICE CONVERTER]\n"
"\n"
"## must be \"true\" to enable office/pdf file online preview\n"
"enabled = true\n"
"\n"
"## How many libreoffice worker processes to run concurrenlty\n"
"workers = 1\n"
"\n"
"## where to store the converted office/pdf files. Deafult is /tmp/.\n"
"outputdir = /tmp/\n"
"\n"
"## how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"\n"
"## the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"## Preview a large file (for example >30M) online will freeze the browser.\n"
"max-size = 2\n"
"\n"
"```"

# header
#: deploy_pro/office_documents_preview.md:64
msgid ""
"## <a id=\"wiki-doc-preview\"></a>FAQ about Office/PDF document preview ##"
msgstr ""
"## <a id=\"wiki-doc-preview\"></a>오피스/PDF 문서 미리 보기 관련 자주 묻는 질"
"문 ##"

# unordered list
#: deploy_pro/office_documents_preview.md:66
msgid "- Document preview doesn't work, where to find more information?"
msgstr ""
"- 문서 미리보기 기능이 동작하지 않는데, 어디서 추가 정보를 찾을 수 있죠?"

#: deploy_pro/office_documents_preview.md:68
msgid "    You can check the log at logs/seafevents.log"
msgstr "    logs/seafevents.log 로그를 확인해볼 수 있습니다"

# unordered list
#: deploy_pro/office_documents_preview.md:71
msgid ""
"- How can I change max size and max pages of documents that can be previewed "
"online ?"
msgstr ""
"- 온라인 미리보기 기능 이용시 문서의 최대 용량 및 최대 페이지 수를 어떻게 바"
"꿀 수 있죠?"

#: deploy_pro/office_documents_preview.md:73
msgid " 1. Locate the `OFFICE CONVERTER` section in `seafevents.conf`."
msgstr "1. `seafevents.conf`의 `OFFICE CONVERTER` 섹션을 찾으십시오."

#: deploy_pro/office_documents_preview.md:74
msgid " 2. Append following lines to the section"
msgstr "2. 섹션에 다음 줄을 추가하십시오"

# code block
#: deploy_pro/office_documents_preview.md:75
msgid ""
"```\n"
"# the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"max-size = 2\n"
"# how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"```"
msgstr ""
"```\n"
"# the max size of documents to allow to be previewed online, in MB. Default "
"is 2 MB\n"
"max-size = 2\n"
"# how many pages are allowed to be previewed online. Default is 50 pages\n"
"max-pages = 50\n"
"```"

#: deploy_pro/office_documents_preview.md:82
msgid "Then, restart seafile server"
msgstr "그 다음 Seafile 서버를 다시 시작하십시오"

# code block
#: deploy_pro/office_documents_preview.md:83
msgid ""
"```\n"
"cd /data/haiwen/seafile-server-latest/\n"
"./seafile.sh restart\n"
"./seahub.sh restart\n"
"```"
msgstr ""
"```\n"
"cd /data/haiwen/seafile-server-latest/\n"
"./seafile.sh restart\n"
"./seahub.sh restart\n"
"```"

# unordered list
#: deploy_pro/office_documents_preview.md:89
msgid ""
"- Document preview doesn't work on my Ubuntu/Debian server, what can I do?"
msgstr ""
"- 우분투/데비안 서버에서 문서 미리보기 기능이 동작하지 않는데 뭘 할 수 있죠?"

#: deploy_pro/office_documents_preview.md:91
msgid ""
"Current office online preview works with libreoffice 4.0-4.2. If the version "
"of libreoffice installed by `apt-get` is too old or too new, you can solve "
"this by:"
msgstr ""
"현재 오피스 온라인 미리보기 기능은 리버오피스 4.0-4.2와 동작합니다. `apt-get`"
"으로 설치한 리버오피스 버전이 너무 오래됐거나 너무 최신이면 다음 절차로 해결"
"할 수 있습니다:"

# unordered list
#: deploy_pro/office_documents_preview.md:93
msgid "- Remove the installed libreoffice:"
msgstr "- 설치한 libreoffice를 제거하십시오:"

# code block
#: deploy_pro/office_documents_preview.md:94
msgid ""
"```\n"
"sudo apt-get remove libreoffice* python-uno python3-uno\n"
"```"
msgstr ""
"```\n"
"sudo apt-get remove libreoffice* python-uno python3-uno\n"
"```"

# unordered list
#: deploy_pro/office_documents_preview.md:97
msgid ""
"- Download libreoffice packages from [libreoffice official site](http://"
"sourceforge.net/projects/libreoffice.mirror/files/LibreOffice%204.1.6/)"
msgstr ""
"- [리버 오피스 공식 사이트](http://sourceforge.net/projects/libreoffice."
"mirror/files/LibreOffice%204.1.6/)에서 리버 오피스 꾸러미를 다운로드하십시오"

# unordered list
#: deploy_pro/office_documents_preview.md:99
msgid "- Install the downloaded pacakges:"
msgstr "- 다운로드한 꾸러미를 설치하십시오:"

# code block
#: deploy_pro/office_documents_preview.md:100
msgid ""
"```\n"
"tar xf LibreOffice_4.1.6_Linux_x86-64_deb.tar.gz\n"
"cd LibreOffice_4.1.6.2_Linux_x86-64_deb\n"
"cd DEBS\n"
"sudo dpkg -i *.deb\n"
"```"
msgstr ""
"```\n"
"tar xf LibreOffice_4.1.6_Linux_x86-64_deb.tar.gz\n"
"cd LibreOffice_4.1.6.2_Linux_x86-64_deb\n"
"cd DEBS\n"
"sudo dpkg -i *.deb\n"
"```"

# unordered list
#: deploy_pro/office_documents_preview.md:107
msgid "- Restart your seafile server and try again. It should work now."
msgstr "- Seafile 서버를 다시 시작하고 다시 시도해보십시오. 잘 동작해야합니다."

# code block
#: deploy_pro/office_documents_preview.md:108
msgid ""
"```\n"
"./seafile.sh restart\n"
"```"
msgstr ""
"```\n"
"./seafile.sh restart\n"
"```"

# header
#: deploy_pro/office_web_app.md:1
msgid "# Office Web app"
msgstr "# 오피스 웹 앱"

#: deploy_pro/office_web_app.md:3
msgid ""
"In pro version 4.4.0(or above), you can use Microsoft Office Web App to "
"preview document online. Office Web App provides the best preview for all "
"Office format files. For organizations with Microsoft Office Volume License, "
"it's free to use Office Web App. For more information about Office Web App "
"and how to deploy it, please refer to https://technet.microsoft.com/en-us/"
"library/jj219456.aspx ."
msgstr ""
"전문가 버전 4.4.0(이상) 에서는 온라인 에서 문서를 미리볼 때 마이크로소프트 오"
"피스 웹 앱을 활용할 수 있습니다. 오피스 웹 앱에서는 모든 오피스 형식 파일을 "
"가장 멋지게 미리볼 수 있습니다. 마이크로소프트 오피스 볼륨 라이선스를 보유한 "
"조직에서는 오피스 웹 앱을 무료로 사용할 수 있습니다. 오피스 웹 앱 추가 정보"
"와 구동 방법은 https://technet.microsoft.com/en-us/library/jj219456.aspx 주소"
"를 참고하십시오."

#: deploy_pro/office_web_app.md:5
msgid ""
"Seafile's own Office file preview is still the default. To use Office Web "
"App for preview, please add following config to seahub_settings.py."
msgstr ""
"Seafile의 자체 오피스 파일 미리 보기는 여전히 기본 기능입니다. 오피스 웹 앱 "
"을 미리보기 기능에 사용하려면 seahub_settings.py에 다음 설정을 추가하십시오."

# code block
#: deploy_pro/office_web_app.md:7
msgid ""
"``` python\n"
"# Enable Office Web App\n"
"ENABLE_OFFICE_WEB_APP = True\n"
"\n"
"# Url of Office Web App's discovery page\n"
"# The discovery page tells Seafile how to interact with Office Web App when "
"view file online\n"
"# You should change `http://example.office-web-app.com` to your actual "
"Office Web App server address\n"
"OFFICE_WEB_APP_BASE_URL = 'http://example.office-web-app.com/hosting/"
"discovery'\n"
"\n"
"# Expiration of WOPI access token\n"
"# WOPI access token is a string used by Seafile to determine the file's\n"
"# identity and permissions when use Office Web App view it online\n"
"# And for security reason, this token should expire after a set time period\n"
"WOPI_ACCESS_TOKEN_EXPIRATION = 30 * 60 # seconds\n"
"\n"
"# Tuple of file format that you want to view through Office Web App\n"
"# You can change this value according to your preferences\n"
"# And of course you should make sure your Office Web App support to preview\n"
"# the specified extension file you add below\n"
"OFFICE_WEB_APP_FILE_EXTENSION = ('ods', 'xls', 'xlsb', 'xlsm', "
"'xlsx','ppsx', 'ppt',\n"
"    'pptm', 'pptx', 'doc', 'docm', 'docx')\n"
"\n"
"# Enable edit file through Office Web App\n"
"ENABLE_OFFICE_WEB_APP_EDIT = True\n"
"\n"
"# Currently we only support `xlsx` and `pptx`\n"
"# type of file editing through Office Web App\n"
"OFFICE_WEB_APP_EDIT_FILE_EXTENSION = ('xlsx', 'pptx')\n"
"\n"
"```"
msgstr ""
"``` python\n"
"# Enable Office Web App\n"
"ENABLE_OFFICE_WEB_APP = True\n"
"\n"
"# Url of Office Web App's discovery page\n"
"# The discovery page tells Seafile how to interact with Office Web App when "
"view file online\n"
"# You should change `http://example.office-web-app.com` to your actual "
"Office Web App server address\n"
"OFFICE_WEB_APP_BASE_URL = 'http://example.office-web-app.com/hosting/"
"discovery'\n"
"\n"
"# Expiration of WOPI access token\n"
"# WOPI access token is a string used by Seafile to determine the file's\n"
"# identity and permissions when use Office Web App view it online\n"
"# And for security reason, this token should expire after a set time period\n"
"WOPI_ACCESS_TOKEN_EXPIRATION = 30 * 60 # seconds\n"
"\n"
"# Tuple of file format that you want to view through Office Web App\n"
"# You can change this value according to your preferences\n"
"# And of course you should make sure your Office Web App support to preview\n"
"# the specified extension file you add below\n"
"OFFICE_WEB_APP_FILE_EXTENSION = ('ods', 'xls', 'xlsb', 'xlsm', "
"'xlsx','ppsx', 'ppt',\n"
"    'pptm', 'pptx', 'doc', 'docm', 'docx')\n"
"\n"
"# Enable edit file through Office Web App\n"
"ENABLE_OFFICE_WEB_APP_EDIT = True\n"
"\n"
"# Currently we only support `xlsx` and `pptx`\n"
"# type of file editing through Office Web App\n"
"OFFICE_WEB_APP_EDIT_FILE_EXTENSION = ('xlsx', 'pptx')\n"
"\n"
"```"

#: deploy_pro/office_web_app.md:38
msgid "Then restart"
msgstr "그 다음 다시 시작하십시오"

# code block
#: deploy_pro/office_web_app.md:40
msgid ""
"```\n"
"./seafile.sh restart\n"
"./seahub.sh restart\n"
"```"
msgstr ""
"```\n"
"./seafile.sh restart\n"
"./seahub.sh restart\n"
"```"

#: deploy_pro/office_web_app.md:45
msgid ""
"After you click the document you specified in seahub_settings.py, you will "
"see the new preview page."
msgstr ""
"seahub_settings.py에 지정한 문서를 누르고 나면 새 미리보기 페이지가 뜹니다."

#: deploy_pro/office_web_app.md:47
msgid "![office-web-app](../images/office-web-app.png)"
msgstr "![office-web-app](../images/office-web-app.png)"

# header
#: deploy_pro/office_web_app.md:49
msgid "## Trouble shooting"
msgstr "## 문제 해결"

#: deploy_pro/office_web_app.md:51
msgid ""
"Understanding how the web app integration work will help you debug the "
"problem. When a user visit a file page:"
msgstr ""
"웹 앱 통합 동작 방식를 이해하면 문제를 찾는데 도움이 됩니다. 사용자가 파일 페"
"이지에 방문했을 때:"

# ordered list
#: deploy_pro/office_web_app.md:53
msgid ""
"1. (seahub->browser) Seahub will generate a page containing an iframe and "
"send to the browser"
msgstr ""
"1. (seahub->브라우저) Seahub는 iframe에 들어간 페이지를 만들고 브라우저에 보"
"냅니다"

# ordered list
#: deploy_pro/office_web_app.md:54
msgid ""
"2. (broswer->office web app) With the iframe, the browser will try to load "
"the file preview page from the office web app"
msgstr ""
"2. (브라우저->오피스 웹 앱) iframe으로 브라우저에서 오피스 웹 앱의 파일 미리"
"보기 페이지를 불러옵니다"

# ordered list
#: deploy_pro/office_web_app.md:55
msgid ""
"3. (office web app->seahub) Office web app receives the request and send a "
"request to Seahub to get the file content"
msgstr ""
"3. (오피스 웹 앱->Seahub) 오피스 웹 앱에서 요청을 받고 Seahub에 파일 내용 요"
"청을 보냅니다"

# ordered list
#: deploy_pro/office_web_app.md:56
msgid ""
"4. (office web app->browser) Office web app send the file preview page to "
"the browser."
msgstr ""
"4. (오피스 웹 앱->브라우저) 오피스 웹 앱에서 브라우저로 파일 미리보기 페이지"
"를 보냅니다."

#: deploy_pro/office_web_app.md:58
msgid ""
"Please check the Nginx log for Seahub (for step 3) and Office Web App to see "
"which step is wrong."
msgstr ""
"Seahub(3단계 과정) 및 오피스 웹 앱 처리 단계중 어떤 단계에 문제가 있는지는 "
"Nginx 로그를 확인하십시오."

# header
#: deploy_pro/real_time_backup.md:1
msgid "# Seafile Real-Time Backup Server"
msgstr "# Seafile 실시간 백업 서버"

#: deploy_pro/real_time_backup.md:3
msgid ""
"NOTE: The real-time backup feature is currently in beta state. It may have "
"minor issues on the backup server side. But this feature will not affect the "
"functionality or data integrity of the primary server."
msgstr ""
"참고: 실시간 백업 기능은 현재 베타 상태입니다. 백업 서버측에 사소한 문제가 있"
"을 수 있지만, 이 가능은 주 서버의 기능 또는 데이터 무결성에는 전혀 영향을 주"
"지 않습니다."

#: deploy_pro/real_time_backup.md:5
msgid ""
"Backup is the procedure that copies data from a primary server (which is "
"running production service) to a backup server."
msgstr ""
"백업은(실 서비스를 가동하는) 주 서버의 데이터를 백업 서버로 복사하는 과정입니"
"다."

#: deploy_pro/real_time_backup.md:7
msgid ""
"Backup is an important procedure to keep data safe. The basic backup "
"procedure described in [this documentation](../maintain/backup_recovery.md) "
"has a few drawbacks:"
msgstr ""
"백업은 데이터를 안전하게 지켜주는 중요한 과정입니다. 기본 백업 과정은 몇가지 "
"빠진 내용을 담고 있는 [이 문서](../maintain/backup_recovery.md)에 설명했습니"
"다:"

# unordered list
#: deploy_pro/real_time_backup.md:9
msgid ""
"- The backup is done in fixed \"backup windows\" (once per day or a few "
"times per day). The latest data written between two backup windows will be "
"lost if the primary server storage is damaged."
msgstr ""
"- 백업은 고정 \"백업 윈도우\"에서 처리합니다(하루에 한 번 또는 하루에 몇 "
"번). 주 서버 저장소가 손상되면 두 백업 윈도우간 최신 데이터를 기록한 최근 데"
"이터를 잃게 됩니다."

# unordered list
#: deploy_pro/real_time_backup.md:10
msgid ""
"- The backup procedure backup database and data directory separately. In the "
"backup server, some entries in the database may become inconsistent with the "
"data directory. This causes some libraries become \"corrupted\" after "
"restore."
msgstr ""
"- 백업 과정에서는 데이터베이스와 데이터 디렉터리를 각각 백업합니다. 백업 서버"
"에서는, 데이터베이스의 일부 항목이 데이터 디렉터리와 일관성이 떨어질 수도 잇"
"습니다. 이는 추후 복구할 때 일부 라이브러리의 \"손상\"을 유발합니다."

#: deploy_pro/real_time_backup.md:12
msgid ""
"The real-time backup server uses a syncing algorithm similar to the Seafile "
"desktop client to retrieve data from the primary server. It works as follows:"
msgstr ""
"실시간 백업 서버는 주 서버의 데이터를 가져올 때 Seafile 클라이언트와 동일한 "
"동기화 알고리즘을 활용합니다. 다음과 같이 동작합니다:"

# unordered list
#: deploy_pro/real_time_backup.md:14
msgid ""
"- Whenever a library is updated, the primary server notifies the backup "
"server to retrieve the changed data. With a delta syncing algorithm, this "
"procedure runs quickly and updates the backup server in nearly real-time."
msgstr ""
"- 라이브러리를 업데이트할 때마다 주 서버는 백업 서버에 바뀐 데이터를 전달함"
"을 알립니다. 델타 동기화 알고리즘으로 이 과정은 빠르게 진행하며 거의 실시간으"
"로 백업 서버를 업데이트합니다."

# unordered list
#: deploy_pro/real_time_backup.md:15
msgid ""
"- The backup server also checks all libraries on the primary server at a "
"fixed period. Any new or updated libraries will be synced to the backup "
"server. This will pick up any legged updates due to glitches in the above "
"real-time sync procedure."
msgstr ""
"- 또한 백업 서버에서는 주 서버의 모든 라이브러리를 주기적으로 확인합니다. 일"
"부 새 라이브러리 또는 최신 업데이트 라이브러리를 백업 서버로 동기화합니다. "
"이 과정에서 실시간 동기화 처리 과정에 사소한 어긋남이 발생하여 나타나는 모난 "
"업데이트를 추려냅니다."

# unordered list
#: deploy_pro/real_time_backup.md:16
msgid ""
"- The backup server always keep the database and data directory consistent. "
"So no libraries on the backup server will be in corrupted state (unless "
"they're already corrupted on the primary server)."
msgstr ""
"- 백업 서버는 항상 데이터베이스와 데이터 디렉터리의 일관성을 유지합니다. 따라"
"서 백업 서버의 어떤 라이브러리도(주 서버가 손상되지 않은 이상) 손상된 상태가 "
"되지 않습니다."

# unordered list
#: deploy_pro/real_time_backup.md:17
msgid ""
"- The full history of all libraries will be backed up. This is not like the "
"desktop client, which only syncs the latest state of a library."
msgstr ""
"- 모든 라이브러리의 전체 기록을 백업합니다. 이는 라이브러리의 최신 상태만 동"
"기화하는 데스크톱 클라이언트와 유사한 방식으로 동작하지 않습니다."

#: deploy_pro/real_time_backup.md:19
msgid "There are two sets of data that need to be backup:"
msgstr "백업에 필요한 데이터는 두가지 종류가 있습니다:"

# unordered list
#: deploy_pro/real_time_backup.md:21
msgid ""
"- The seafile-data directory and the core library metadata tables in the "
"seafile database. This data is the core data structures of the libraries in "
"Seafile. They're synced to the backup server with Seafile's syncing "
"algorithm. In this procedure, the metadata tables are kept consistent with "
"the seafile-data directory."
msgstr ""
"- seafile-data 디렉터리와 Seafile 데이터베이스의 핵심 라이브러리 메타데이터 "
"테이블입니다. 이 데이터는 Seafile의 라이브러리 핵심 데이터 구조를 담고 있습니"
"다. Seafile의 동기화 알고리즘으로 백업 서버와 동기화합니다. 이 절차를 통해 메"
"타데이터 테이블은 seafile-data 디렉터리와의 일관성을 유지합니다."

# unordered list
#: deploy_pro/real_time_backup.md:22
msgid ""
"- All other tables in the database (including seafile, ccnet and seahub "
"databases) are backup with MySQL replication."
msgstr ""
"- 데이터베이스의 모든 기타 테이블(seafile, ccnet, seahub 데이터베이스 포함)"
"을 MySQL 리플리케이션으로 백업합니다."

# header
#: deploy_pro/real_time_backup.md:24
msgid "## Configure Real-Time Backup Server"
msgstr "## 실시간 백업 서버 설정"

#: deploy_pro/real_time_backup.md:26
msgid ""
"We assume you already have a primary server running, and now you want to "
"setup a backup server."
msgstr ""
"주 서버를 이미 가동 중이고 이제 백업 서버를 설정하려 한다고 가정하겠습니다."

#: deploy_pro/real_time_backup.md:28
msgid "The steps to setup the backup server are:"
msgstr "백업 서버 설정 단계는 다음과 같습니다:"

# ordered list
#: deploy_pro/real_time_backup.md:30
msgid "1. Install Seafile on the backup server"
msgstr "1. 백업 서버에 Seafile을 설치하십시오"

# ordered list
#: deploy_pro/real_time_backup.md:31
msgid ""
"2. Configure MySQL replication between the primary server and the backup "
"server"
msgstr "2. 주 서버와 백업 서버의 MySQL 리플리케이션을 설정하십시오"

# ordered list
#: deploy_pro/real_time_backup.md:32
msgid ""
"3. Configure Seafile syncing between the primary server and the backup server"
msgstr "3. 주 서버와 백업 서버의 Seafile 동기화를 설정하십시오"

# header
#: deploy_pro/real_time_backup.md:34
msgid "### Install Seafile on the Backup Server"
msgstr "### 백업 서버에 Seafile 설치"

#: deploy_pro/real_time_backup.md:36
msgid ""
"You should install Seafile Pro Edition on the backup server according to "
"[this documentation](../deploy_pro/"
"download_and_setup_seafile_professional_server.md). Since the real-time "
"backup feature is only available for 5.1.0 or later, you also have to "
"upgrade your primary server to 5.1.0 version or later."
msgstr ""
"[이 문서](../deploy_pro/download_and_setup_seafile_professional_server.md)를 "
"따라 Seafile 전문가판을 백업 서버에 설치해야합니다. 실시간 백업 기능은 5.1.0 "
"이상에서만 쓸 수 있으므로, 5.1.0 이후 버전으로 업그레이드해야합니다."

#: deploy_pro/real_time_backup.md:38
msgid "When installing Seafile on the backup server, you have to notice:"
msgstr "백업서버에 Seafile을 설치할 때, 다음을 참고하십시오:"

# unordered list
#: deploy_pro/real_time_backup.md:40
msgid ""
"- The database names (ccnet, seafile and seahub database) should be the same "
"as the names on the primary server."
msgstr ""
"- 데이터베이스 이름(ccnet, seafile, seahub 데이터베이스)은 주 서버의 데이터베"
"이스 이름과 동일해야합니다."

# unordered list
#: deploy_pro/real_time_backup.md:41
msgid ""
"- You don't need to enable other Pro features, such as Office file preview, "
"search indexing, file auditing etc."
msgstr ""
"- 오피스 파일 미리 보기, 검색 색인 처리, 파일 감사 등 전문가판의 다른 기능을 "
"활성화할 필요가 없습니다."

# header
#: deploy_pro/real_time_backup.md:43
msgid "### Configure MySQL Replication"
msgstr "### MySQL 리플리케이션 설정"

#: deploy_pro/real_time_backup.md:45
msgid ""
"MySQL replication asynchronously replicates database updates from a Master "
"server (in our case, the primary server) to a Slave server (the backup "
"server). To better understand how MySQL replication works and how to "
"configure it, you should first read [MySQL official documentation](https://"
"dev.mysql.com/doc/refman/5.6/en/replication-howto.html). The following steps "
"are based on the steps in MySQL documentation, with some modifications for "
"Seafile."
msgstr ""
"MySQL 리플리케이션은 마스터 서버(이 경우, 주 서버)에서 슬레이브 서버(백업 서"
"버)로 최신 데이터베이스를 비동기 방식으로 복제합니다. MySQL 리플리케이션 동"
"작 방식, 설정 방법을 더 잘 이해하려면 우선 [MySQL 공식 문서](https://dev."
"mysql.com/doc/refman/5.6/en/replication-howto.html)를 읽어보아야합니다. 다음 "
"단계는 MySQL 문서에 기반한 단계이며, Seafile에 맞게 조금 수정했습니다."

#: deploy_pro/real_time_backup.md:47
msgid ""
"In the following discussion, we'll use \"primary server\" and \"master server"
"\", \"backup server\" and \"slave server\" interchangeably."
msgstr ""
"다음 내용에서는 \"주 서버\", \"마스터 서버\", \"백업 서버\", \"슬레이브 서버"
"\"를 혼용합니다."

# header
#: deploy_pro/real_time_backup.md:49
msgid "#### Modify MySQL Server Configuration on Primary Server (my.cnf)"
msgstr "#### 주 서버의 MySQL 서버 설정 수정(my.cnf)"

#: deploy_pro/real_time_backup.md:51
msgid "On the primary server, add following options to my.cnf:"
msgstr "주 서버에서 my.cnf에 다음 설정 항목을 추가하십시오:"

# code block
#: deploy_pro/real_time_backup.md:53
msgid ""
"```\n"
"[mysqld]\n"
"log-bin=mysql-bin\n"
"server-id=1\n"
"```"
msgstr ""
"```\n"
"[mysqld]\n"
"log-bin=mysql-bin\n"
"server-id=1\n"
"```"

#: deploy_pro/real_time_backup.md:59
msgid ""
"In the my.cnf of the primary server, another important option is "
"`expire_logs_days` ([reference](http://dev.mysql.com/doc/refman/5.7/en/"
"server-system-variables.html#sysvar_expire_logs_days)). This option controls "
"the retention time of the binary log, which is used for replication. The "
"default value of this option is to keep binary log files forever. You can "
"set this option to keep the binary log files for specific days. Binary log "
"files older than the specified days will be deleted. So if the backup server "
"is offline for more than `expire_logs_days`, the replication cannot be "
"resumed after the backup server is online. We recommend to set this option "
"to a long enough time."
msgstr ""
"주 서버의 my.cnf에서, 다른 중요한 설정 항목은 `expire_logs_days`입니다([참고]"
"(http://dev.mysql.com/doc/refman/5.7/en/server-system-variables."
"html#sysvar_expire_logs_days)). 이 설정 항목은 리플리케이션에 사용할 바이너"
"리 로그의 유지 시간을 관리합니다. 이 설정 항목의 기본 값은 바이너리 로그 파일"
"을 오래토록 유지하는 값입니다. 지정 일 수 만큼 바이너리 로그 파일을 유지하도"
"록 이 설정 항목 값을 정할 수 있습니다. 지정 일 수보다 오래된 바이너리 로그 파"
"일은 삭제합니다. 따라서 백업 서버가 `expire_logs_days` 값 이상의 일 수 만큼 "
"오프라인 상태이면, 백업 서버를 온라인으로 전환한 후에 리플리케이션을 재개할 "
"수 없습니다. 이 설정 항목을 충분한 시간으로 설정하시는 것이 좋습니다."

#: deploy_pro/real_time_backup.md:61
msgid "After saving the changes, you should restart MySQL on primary server."
msgstr "바뀐 내용을 저장하고 나면, 주 서버의 MySQL 서버를 다시 시작하십시오."

# header
#: deploy_pro/real_time_backup.md:63
msgid "#### Create a User for Replication in MySQL"
msgstr "#### MySQL 리플리케이션 사용자 만들기"

#: deploy_pro/real_time_backup.md:65
msgid ""
"On the primary server, create a user dedicated for replication. In MySQL "
"client prompt,"
msgstr ""
"주 서버에서 리플리케이션에 관련된 사용자를 만드십시오. MySQL 클라이언트 프롬"
"프트에서,"

# code block
#: deploy_pro/real_time_backup.md:67
msgid ""
"```\n"
"CREATE USER 'repl'@'%' IDENTIFIED BY 'slavepass';\n"
"GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\n"
"```"
msgstr ""
"```\n"
"CREATE USER 'repl'@'%' IDENTIFIED BY 'slavepass';\n"
"GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\n"
"```"

#: deploy_pro/real_time_backup.md:72
msgid "Replace the user name and password with your own choice."
msgstr "보유한 사용자 이름 및 암호로 바꾸십시오."

# header
#: deploy_pro/real_time_backup.md:74
msgid "#### Obtain the Replication Master Binary Log Coordinates"
msgstr "#### 리플리케이션 마스터 바이너리 로그 위치 가져오기"

#: deploy_pro/real_time_backup.md:76
msgid ""
"Before running this step, you should stop Seafile service on the primary "
"server, so that no update will be written into database."
msgstr ""
"이 단계를 진행하는 동안, 주 서버의 Seafile 서비스를 멈추어 데이터베이스에 최"
"신 내용을 기록하지 못하게 막아야합니다."

#: deploy_pro/real_time_backup.md:78
msgid "On the primary (Master) server, in MySQL client prompt,"
msgstr "주 서버에서, MySQL 클라이언트 프롬프트에,"

# code block
#: deploy_pro/real_time_backup.md:80
msgid ""
"```\n"
"FLUSH TABLES WITH READ LOCK;\n"
"SHOW MASTER STATUS;\n"
"```"
msgstr ""
"```\n"
"FLUSH TABLES WITH READ LOCK;\n"
"SHOW MASTER STATUS;\n"
"```"

#: deploy_pro/real_time_backup.md:85
msgid "You'll get output similar to the following:"
msgstr "출력은 다음과 같이 나타납니다:"

# code block
#: deploy_pro/real_time_backup.md:87
msgid ""
"```\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | "
"Executed_Gtid_Set |\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"| mysql-bin.000002 |   368915 |              |                  "
"|                   |\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"```"
msgstr ""
"```\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | "
"Executed_Gtid_Set |\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"| mysql-bin.000002 |   368915 |              |                  "
"|                   |\n"
"+------------------+----------+--------------+------------------"
"+-------------------+\n"
"```"

#: deploy_pro/real_time_backup.md:95
msgid ""
"The `File` and `Position` fields in output will be used to configure the "
"backup server (replication Slave)."
msgstr ""
"출력 내용에서 `File`과 `Position` 필드는 백업 서버(리플리케이션 슬레이브) 설"
"정에 활용합니다."

# header
#: deploy_pro/real_time_backup.md:97
msgid "#### Export Existing Data on the Primary Server"
msgstr "#### 주 서버 기존 데이터 내보내기"

#: deploy_pro/real_time_backup.md:99
msgid "Exporting data from the databases on the primary server with mysqldump:"
msgstr "mysqldump로 주 서버 데이터베이스 데이터를 내보내는 방법은:"

# code block
#: deploy_pro/real_time_backup.md:101
msgid ""
"```\n"
"mysqldump -u <user> -p<password> --databases \\\n"
"--ignore-table=<seafile_db>.Repo --ignore-table=<seafile_db>.Branch --ignore-"
"table=<seafile_db>.RepoHead \\\n"
"--ignore-table=<seahub_db>.base_userlastlogin --ignore-table=<seahub_db>."
"django_session \\\n"
"--ignore-table=<seahub_db>.sysadmin_extra_userloginlog --ignore-"
"table=<seahub_db>.UserTrafficStat \\\n"
"--ignore-table=<seahub_db>.FileAudit --ignore-table=<seahub_db>.FileUpdate --"
"ignore-table=<seahub_db>.PermAudit \\\n"
"--ignore-table=<seahub_db>.Event --ignore-table=<seahub_db>.UserEvent --"
"ignore-table=<seahub_db>.avatar_avatar \\\n"
"--ignore-table=<seahub_db>.avatar_groupavatar --ignore-table=<seahub_db>."
"avatar_uploaded \\\n"
"--master-data <seafile_db> <ccnet_db> <seahub_db> > dbdump.sql\n"
"```"
msgstr ""
"```\n"
"mysqldump -u <user> -p<password> --databases \\\n"
"--ignore-table=<seafile_db>.Repo --ignore-table=<seafile_db>.Branch --ignore-"
"table=<seafile_db>.RepoHead \\\n"
"--ignore-table=<seahub_db>.base_userlastlogin --ignore-table=<seahub_db>."
"django_session \\\n"
"--ignore-table=<seahub_db>.sysadmin_extra_userloginlog --ignore-"
"table=<seahub_db>.UserTrafficStat \\\n"
"--ignore-table=<seahub_db>.FileAudit --ignore-table=<seahub_db>.FileUpdate --"
"ignore-table=<seahub_db>.PermAudit \\\n"
"--ignore-table=<seahub_db>.Event --ignore-table=<seahub_db>.UserEvent --"
"ignore-table=<seahub_db>.avatar_avatar \\\n"
"--ignore-table=<seahub_db>.avatar_groupavatar --ignore-table=<seahub_db>."
"avatar_uploaded \\\n"
"--master-data <seafile_db> <ccnet_db> <seahub_db> > dbdump.sql\n"
"```"

#: deploy_pro/real_time_backup.md:112
msgid ""
"You should replace `<user>`, `<password>` with your MySQL admin user and "
"password. You should replace `<seafile_db>`, `<seahub_db>` and `<ccnet_db>` "
"with your database names."
msgstr ""
"`<user>`, `<password>`를 MySQL 관리 사용자 이름 및 암호로 바꿔야합니다. "
"`<seafile_db>`, `<seahub_db>`, `<ccnet_db>`를 데이터베이스 이름으로 바꾸십시"
"오."

# header
#: deploy_pro/real_time_backup.md:114
msgid "#### Modify MySQL Server Configuration on Backup Server (my.cnf)"
msgstr "#### 백업 서버의 MySQL 서버 설정 수정(my.cnf)"

#: deploy_pro/real_time_backup.md:116
msgid "On the backup server, add following options to my.cnf:"
msgstr "백업 서버에서 다음 옵션을 my.cnf에 추가하십시오:"

# code block
#: deploy_pro/real_time_backup.md:118
msgid ""
"```\n"
"[mysqld]\n"
"server-id=2\n"
"replicate-ignore-table = <seafile db>.Repo\n"
"replicate-ignore-table = <seafile db>.Branch\n"
"replicate-ignore-table = <seafile db>.RepoHead\n"
"replicate-ignore-table = <seahub db>.base_userlastlogin\n"
"replicate-ignore-table = <seahub db>.django_session\n"
"replicate-ignore-table = <seahub db>.sysadmin_extra_userloginlog\n"
"replicate-ignore-table = <seahub db>.UserTrafficStat\n"
"replicate-ignore-table = <seahub db>.FileAudit\n"
"replicate-ignore-table = <seahub db>.FileUpdate\n"
"replicate-ignore-table = <seahub db>.PermAudit\n"
"replicate-ignore-table = <seahub db>.avatar_avatar\n"
"replicate-ignore-table = <seahub db>.avatar_groupavatar\n"
"replicate-ignore-table = <seahub db>.avatar_uploaded\n"
"replicate-ignore-table = <seahub db>.Event\n"
"replicate-ignore-table = <seahub db>.UserEvent\n"
"```"
msgstr ""
"```\n"
"[mysqld]\n"
"server-id=2\n"
"replicate-ignore-table = <seafile db>.Repo\n"
"replicate-ignore-table = <seafile db>.Branch\n"
"replicate-ignore-table = <seafile db>.RepoHead\n"
"replicate-ignore-table = <seahub db>.base_userlastlogin\n"
"replicate-ignore-table = <seahub db>.django_session\n"
"replicate-ignore-table = <seahub db>.sysadmin_extra_userloginlog\n"
"replicate-ignore-table = <seahub db>.UserTrafficStat\n"
"replicate-ignore-table = <seahub db>.FileAudit\n"
"replicate-ignore-table = <seahub db>.FileUpdate\n"
"replicate-ignore-table = <seahub db>.PermAudit\n"
"replicate-ignore-table = <seahub db>.avatar_avatar\n"
"replicate-ignore-table = <seahub db>.avatar_groupavatar\n"
"replicate-ignore-table = <seahub db>.avatar_uploaded\n"
"replicate-ignore-table = <seahub db>.Event\n"
"replicate-ignore-table = <seahub db>.UserEvent\n"
"```"

#: deploy_pro/real_time_backup.md:138
msgid ""
"The above configuration tells the backup server to ignore following tables "
"on replication:"
msgstr ""
"위 설정은 리플리케이션 진행시 언급한 테이블을 무시하라고 백업 서버에 알려줍니"
"다:"

# unordered list
#: deploy_pro/real_time_backup.md:140
msgid ""
"- The library metadata tables in Seafile db：Repo, Branch, RepoHead。These "
"tables will be synced by Seafile backup server itself."
msgstr ""
"- Seafile 데이터베이스의 라이브러리 메타데이터 테이블: Repu, Branch, RepoHead"
"로 구성합니다。이 테이블은 Seafile 백업 서버 자체에서 동기화합니다."

# unordered list
#: deploy_pro/real_time_backup.md:141
msgid ""
"- Local or temporary tables in Seahub database. When the admin logs into the "
"backup server to view the data, these tables may be updated on the backup "
"server. To avoid conflicts with the replicated entries, we ignore them on "
"replication."
msgstr ""
"- Seahub 데이터베이스의 로컬 또는 임시 테이블. 관리자가 백업 서버의 데이터를 "
"살펴보려 기록을 남겨두었다면, 이 테이블은 백업 서버에서 업데이트됩니다. 복제 "
"항목 충돌을 막으려면 복제 과정에서 이 항목은 무시하십시오."

#: deploy_pro/real_time_backup.md:143
msgid "Notes:"
msgstr "참고:"

# unordered list
#: deploy_pro/real_time_backup.md:145
msgid "- The `server-id` for the primary and backup server must be different."
msgstr "- 주 서버 및 백업 서버의 `server-id`는 달라야합니다."

# unordered list
#: deploy_pro/real_time_backup.md:146
msgid ""
"- You should replace `<seafile db>` and `<seahub db>` with your database "
"names."
msgstr ""
"- `<seafile db>` 및 `<seahub db>` 값은 데이터베이스 이름으로 바꾸십시오."

#: deploy_pro/real_time_backup.md:148
msgid ""
"Restart MySQL server on backup server, with `--skip-slave-start` option so "
"that replication does not start."
msgstr ""
"리플리케이션을 시작하지 않도록 `--skip-slave-start` 옵션을 붙여 백업 서버의 "
"MySQL 서버를 다시 시작하십시오."

# code block
#: deploy_pro/real_time_backup.md:150
msgid ""
"```\n"
"sudo /etc/init.d/mysql start --skip-slave-start\n"
"```"
msgstr ""
"```\n"
"sudo /etc/init.d/mysql start --skip-slave-start\n"
"```"

# header
#: deploy_pro/real_time_backup.md:154
msgid "#### Import Existing Data into backup server"
msgstr "#### 백업 서버에서 기존 데이터 가져오기"

#: deploy_pro/real_time_backup.md:156
msgid "Importing existing data into the backup server's MySQL:"
msgstr "백업 서버의 MySQL로 기존 데이터를 가져오려면:"

# code block
#: deploy_pro/real_time_backup.md:158
msgid ""
"```\n"
"mysql -u <usr> -p<pas> < dbdump.sql\n"
"```"
msgstr ""
"```\n"
"mysql -u <usr> -p<pas> < dbdump.sql\n"
"```"

#: deploy_pro/real_time_backup.md:162
msgid ""
"Replace `<user>` and `<pass>` with your MySQL admin user name and password."
msgstr "`<user>` 및 `<pass>`를 MySQL 관리 사용자 이름 및 암호로 바꾸십시오."

# header
#: deploy_pro/real_time_backup.md:164
msgid "#### Start Replication"
msgstr "#### 리플리케이션 시작"

#: deploy_pro/real_time_backup.md:166
msgid "Unlock MySQL on the primary server. In MySQL client prompt,"
msgstr "주 서버의 MySQL 잠금을 해제하십시오. MySQL 클라이언트 프롬프트에서,"

# code block
#: deploy_pro/real_time_backup.md:168
msgid ""
"```\n"
"unlock tables;\n"
"```"
msgstr ""
"```\n"
"unlock tables;\n"
"```"

#: deploy_pro/real_time_backup.md:172
msgid "On the backup server, setup replication start coordinates:"
msgstr "백업 서버에서 리플리케이션 시작 지점을 설정하십시오:"

# code block
#: deploy_pro/real_time_backup.md:174
msgid ""
"```\n"
"CHANGE MASTER TO MASTER_HOST='primary-host', MASTER_USER='user', "
"MASTER_PASSWORD='slavepass', MASTER_LOG_FILE='bin-log-file', "
"MASTER_LOG_POS=position;\n"
"```"
msgstr ""
"```\n"
"CHANGE MASTER TO MASTER_HOST='primary-host', MASTER_USER='user', "
"MASTER_PASSWORD='slavepass', MASTER_LOG_FILE='bin-log-file', "
"MASTER_LOG_POS=position;\n"
"```"

#: deploy_pro/real_time_backup.md:178
msgid ""
"Replace `primary-host` with the MySQL master server address; Replace `user` "
"with the dedicated user for replication; Replace `slavepass` with the "
"dedicated user's password; Replace `bin-log-file` and `position` with the "
"information you obtained in the \"Obtain the Replication Master Binary Log "
"Coordinates\" section."
msgstr ""
"`primary-host`는 MySQL 마스터 서버 주소 값으로 바꿔주시고 `user`는 리플리케이"
"션 진행 사용자로, `slavepass`는 제공할 사용자 암호로, `bin-log-file`과 "
"`position`dms \"리플리케이션 마스터 바이너리 로그 위치 가져오기\" 섹션에서 확"
"인한 정보로 바꾸십시오."

#: deploy_pro/real_time_backup.md:180
msgid "Start replication on the backup server. In MySQL client prompt,"
msgstr "백업 서버 리플리케이션을 시작하십시오 MySQL 클라이언트 프롬프트에서,"

# code block
#: deploy_pro/real_time_backup.md:182
msgid ""
"```\n"
"start slave;\n"
"```"
msgstr ""
"```\n"
"start slave;\n"
"```"

#: deploy_pro/real_time_backup.md:186
msgid ""
"After staring replication, you should see some log messages in MySQL's error."
"log on the backup server, stating the replication is started. And the slave "
"will catch up with any new updates on the master server."
msgstr ""
"리플리케이션을 시작하면, 백업 서버의 MySQL error.log에서 리플리케이션을 시작"
"함을 나타내는 몇가지 로그 메시지를 볼 수 있습니다. 그리고 슬레이브에서는 마스"
"터 서버의 새 최신 내용을 찾아냅니다."

# header
#: deploy_pro/real_time_backup.md:188
msgid "### Configure Real-time Backup in Seafile"
msgstr "### Seafile의 실시간 백업 설정"

#: deploy_pro/real_time_backup.md:190
msgid "On the primary server, add following options to seafile.conf:"
msgstr "주 서버에서 다음 설정 항목을 seafile.conf에 추가하십시오:"

# code block
#: deploy_pro/real_time_backup.md:192
msgid ""
"```\n"
"[backup]\n"
"backup_url = http://backup-server\n"
"sync_token = c7a78c0210c2470e14a20a8244562ab8ad509734\n"
"```"
msgstr ""
"```\n"
"[backup]\n"
"backup_url = http://backup-server\n"
"sync_token = c7a78c0210c2470e14a20a8244562ab8ad509734\n"
"```"

#: deploy_pro/real_time_backup.md:198
msgid "On the backup server, add following options to seafile.conf:"
msgstr "백업 서버에서 다음 설정 항목을 seafile.conf에 추가하십시오:"

# code block
#: deploy_pro/real_time_backup.md:200
msgid ""
"```\n"
"[backup]\n"
"primary_url = http://primary-server\n"
"sync_token = c7a78c0210c2470e14a20a8244562ab8ad509734\n"
"sync_poll_interval = 3\n"
"```"
msgstr ""
"```\n"
"[backup]\n"
"primary_url = http://primary-server\n"
"sync_token = c7a78c0210c2470e14a20a8244562ab8ad509734\n"
"sync_poll_interval = 3\n"
"```"

# unordered list
#: deploy_pro/real_time_backup.md:207
msgid ""
"- `backup_url`: the backup server's address in url format. You can use http "
"or https."
msgstr ""
"- `backup_url`: URL 형식의 백업 서버 주소. http 또는 https를 사용할 수 있습니"
"다."

# unordered list
#: deploy_pro/real_time_backup.md:208
msgid "- `primary_url`: the primary server's address in url format."
msgstr "- `primary_url`: URL 형식의 주 서버 주소."

# unordered list
#: deploy_pro/real_time_backup.md:209
msgid ""
"- `sync_token`: a secret that shared between the primary and backup server. "
"It's 40 character SHA1 generated by the system admin. You can use `uuidgen | "
"openssl sha1` command to generate a random token."
msgstr ""
"- `sync_token`: 주 서버 및 백업 서버간 공유하는 비밀 토큰. 시스템 관리자가 만"
"든 문자 40개로 이루어진 SHA1 토큰입니다. `uuidgen | openssl sha1` 명령을 사용"
"하여 임의 토큰을 만들 수 있습니다."

# unordered list
#: deploy_pro/real_time_backup.md:210
msgid ""
"- `sync_poll_interval`: The backup server polls all libraries of the primary "
"server periodically. You can set the poll interval in the unit of hours. The "
"default interval is 1 hour, which mean the backup server will poll the "
"primary every hour. You should choose larger intervals if you have large "
"number of libraries."
msgstr ""
"- `sync_poll_interval`: 백업 서버는 주 서버의 모든 라이브러리를 주기적으로 순"
"차처리합니다. 폴링 주기를 시간 단위로 설정할 수 있습니다. 기본 주기는 1 시간"
"이며 매 시간마다 백업 서버가 주 서버를 폴링 방식으로 처리함을 의미합니다. 라"
"이브러리 갯수가 많으면 주기 시간을 더 늘려야합니다."

#: deploy_pro/real_time_backup.md:212
msgid ""
"After saving the configuration, restart seafile service on the primary and "
"backup servers. The backup server will automatically start backup on restart."
msgstr ""
"설정을 저장한 후, 주 서버와 백업 서버의 Seafile 서비스를 다시 시작하십시오. "
"백업 서버를 다시 시작할 때 자동으로 백업을 시작합니다."

# header
#: deploy_pro/real_time_backup.md:214
msgid "### Setup Backup Server for Seafile Cluster"
msgstr "### Seafile 클러스토의 백업 서버 설정"

#: deploy_pro/real_time_backup.md:216
msgid ""
"If your primary service runs as a Seafile cluster, you have two points to "
"notice when setting up a backup server:"
msgstr ""
"주 서비스를 Seafile 클러스터로 실행 중이라면, 백업 서버를 설정할 때 확인할 두"
"가지 주안점이 있습니다:"

# ordered list
#: deploy_pro/real_time_backup.md:218
msgid ""
"1. You should only use one MySQL instance as the replication master, if "
"you're using MariaDB cluster."
msgstr ""
"1. MariaDB 클러스터를 사용한다면 MySQL 인스턴스를 리플리케이션 마스터로만 사"
"용해야 합니다."

# ordered list
#: deploy_pro/real_time_backup.md:219
msgid ""
"2. You have to change seafile.conf and set the `backup_url` and `sync_token` "
"options on each Seafile node. The configuration on all primary Seafile node "
"should be the same. They all point to the same backup server."
msgstr ""
"2. seafile.conf 설정을 바꾸면서 각 Seafile 노드에 있는 `backup_url` 및 "
"`sync_token` 설정 항목의 값을 설정해야합니다. 모든 첫 Seafile 노드 설정은 동"
"일해야합니다. 해당 노드는 동일한 백업 서버를 가리킵니다."

#: deploy_pro/real_time_backup.md:221
msgid ""
"Currently you cannot deploy the backup service **as** a cluster. That is, "
"you can only use a single node as backup server. This support may be added "
"in the future."
msgstr ""
"현재 백업 서비스를 클러스터 **로** 구동할 수 없습니다. 단일 노드만 백업 서버"
"로 활용할 수 있다는 의미입니다. 추후 이 부분을 개선할 예정입니다."

# header
#: deploy_pro/real_time_backup.md:223
msgid "## Managing the Real-time Backup Server"
msgstr "## 실시간 백업 서버 관리"

#: deploy_pro/real_time_backup.md:225
msgid ""
"Once set up, the backup server is a fully working Seafile instance. The "
"admin can manage the backup server in two ways:"
msgstr ""
"설정이 끝나면, 백업 서버는 완벽하게 동작하는 Seafile 인스턴스가 됩니다. 관리"
"자는 백업 서버를 두가지 방식으로 관리할 수 있습니다:"

# ordered list
#: deploy_pro/real_time_backup.md:227
msgid ""
"1. Access the server via Seahub web interface, just like a normal Seafile "
"instance."
msgstr ""
"1. 일반적인 Seafile 인스턴스와 같이 Seahub 웹 인터페이스로 서버를 접근합니다."

# ordered list
#: deploy_pro/real_time_backup.md:228
msgid ""
"2. Use the `seaf-backup-cmd.sh` script in the server package to manage the "
"backup function."
msgstr ""
"2. 서버 꾸러미에 있는 `seaf-backup-cmd.sh` 스크립트를 활용하여 백업 기능을 관"
"리합니다."

#: deploy_pro/real_time_backup.md:230
msgid "The `seaf-backup-cmd.sh` script provides the following commands:"
msgstr "`seaf-backup-cmd.sh` 스크립트는 다음 명령을 제공합니다:"

# header
#: deploy_pro/real_time_backup.md:232
msgid "### Checking Backup Status"
msgstr "### 백업 상태 검사"

#: deploy_pro/real_time_backup.md:234
msgid ""
"`seaf-backup-cmd.sh` provides `status` command to view the backup status. "
"The output is like:"
msgstr ""
"`seaf-backup-cmd.sh`는 백업 상태를 살펴보는 `status` 명령을 제공합니다. 출력"
"은 다음과 같습니다:"

# code block
#: deploy_pro/real_time_backup.md:236
msgid ""
"```\n"
"# ./seaf-backup-cmd.sh status\n"
"Total number of libraries: xxx\n"
"Number of synchronized libraries: xxx\n"
"Number of libraries waiting for sync: xxx\n"
"Number of libraries syncing: xxx\n"
"Number of libraries failed to sync: xxx\n"
"\n"
"List of syncing libraries:\n"
"xxx\n"
"xxx\n"
"\n"
"List of libraries failed to sync:\n"
"xxx\n"
"xxx\n"
"```"
msgstr ""
"```\n"
"# ./seaf-backup-cmd.sh status\n"
"Total number of libraries: xxx\n"
"Number of synchronized libraries: xxx\n"
"Number of libraries waiting for sync: xxx\n"
"Number of libraries syncing: xxx\n"
"Number of libraries failed to sync: xxx\n"
"\n"
"List of syncing libraries:\n"
"xxx\n"
"xxx\n"
"\n"
"List of libraries failed to sync:\n"
"xxx\n"
"xxx\n"
"```"

#: deploy_pro/real_time_backup.md:253
msgid "There are a few reasons that may fail the backup of a library:"
msgstr "몇가지 이유로 라이브러리 백업에 실패할 수 있습니다:"

# unordered list
#: deploy_pro/real_time_backup.md:255
msgid ""
"- Some data in the primary server is corrupted. The data may be in the "
"latest state or in history. Since the backup procedure syncs the full "
"history, corruption in history will fail the backup."
msgstr ""
"- 주 서버의 일부 데이터 손상. 데이터는 최근 상태 또는 기록상 남아있는 상태로 "
"되돌립니다. 백업 처리 과정은 전체 기록을 동기화하므로 기록이 손상되면 백업에 "
"실패합니다."

# unordered list
#: deploy_pro/real_time_backup.md:256
msgid ""
"- The primary server has run seaf-fsck, which may restore a library back to "
"an older state."
msgstr ""
"- 라이브러리를 이전 상태로 복원하려면 주 서버에서 seaf-fsck를 실행하십시오."

# header
#: deploy_pro/real_time_backup.md:258
msgid "### Manually Trigger Syncing a Library"
msgstr "### 라이브러리 동기화 직접 실행"

#: deploy_pro/real_time_backup.md:260
msgid ""
"You can use the `sync` command to manually schedule backup of a library:"
msgstr ""
"`sync` 명령을 사용하여 라이브러리의 백업 계획을 직접 수립할 수 있습니다:"

# code block
#: deploy_pro/real_time_backup.md:262
msgid ""
"```\n"
"# ./seaf-backup-cmd.sh sync <library id>\n"
"```"
msgstr ""
"```\n"
"# ./seaf-backup-cmd.sh sync <library id>\n"
"```"

#: deploy_pro/real_time_backup.md:266
msgid "The command will block until the backup is finished."
msgstr "이 명령은 백업이 끝나기 전까지 다른 작업을 막습니다."

# header
#: deploy_pro/real_time_backup.md:268
msgid "### Handling Backup Errors"
msgstr "### 백업 오류 처리"

#: deploy_pro/real_time_backup.md:270
msgid ""
"The `--force` option of `sync` command can be used to force failing backup "
"to complete. Permanent backup failures are usually caused by data corruption "
"of a library in the primary server. The `--force` option asks the backup to "
"skip corrupted objects and finish the backup."
msgstr ""
"`sync` 명령의 `--force` 옵션은 백업 과정중 실패한 부분을 강제로 마무리할 때 "
"사용할 수 있습니다. 완전한 백업 실패는 주 서버 라이브러리에 있는 데이터의 손"
"상을 야기합니다. `--force` 옵션은 손상 객체를 무시하고 백업하고 백업을 끝낼지"
"를 물어봅니다."

#: deploy_pro/real_time_backup.md:272
msgid "When you find a backup error, follow two steps:"
msgstr "백업 오류를 찾았따면 다음 두 과정을 따르십시오:"

# ordered list
#: deploy_pro/real_time_backup.md:274
msgid ""
"1. Run seaf-fsck on the primary server, for the failing libraries. Fsck "
"fixes any corruption for the latest state of the libraries."
msgstr ""
"1. 주 서버에서 seaf-fsck를 실행하여 문제가 생긴 라이브러리를 검사하십시오. "
"fsck는 라이브러리를 최근 상태로 돌려 손상 상태를 수정합니다."

# ordered list
#: deploy_pro/real_time_backup.md:275
msgid ""
"2. Run `seaf-backup-cmd.sh sync --force <library id>` on the backup server."
msgstr ""
"2. `seaf-backup-cnd.sh sync --force <library id>` 명령을 백업 서버에서 실행하"
"십시오."

# header
#: deploy_pro/real_time_backup.md:277
msgid "## Restore from the Backup Server"
msgstr "## 백업 서버에서 복원"

#: deploy_pro/real_time_backup.md:279
msgid ""
"Since the backup server is a fully workable Seafile instance, you can switch "
"your service to the backup server after your primary is severely damaged. "
"But you need to take a few points into consideration before switching to the "
"backup server."
msgstr ""
"백업 서버는 완벽하게 동작하는 Seafile 인스턴스이므로, 주 서버가 치명적인 손상"
"을 입고 나면 백업 서버로 서비스를 전환할 수 있습니다. 그러나 백업 서버로 전환"
"하기 전 몇가지 요점을 고려해야 합니다."

# unordered list
#: deploy_pro/real_time_backup.md:281
msgid ""
"- You should first try to repair the primary server as long as possible. "
"Running seaf-fsck will fix most daily corruptions on the primary server."
msgstr ""
"- 최대한 충분한 시간을 잡고 주 서버를 복구해봐야 합니다. seaf-fsck를 실행하"
"면 주 서버의 일일 손상 대부분을 수정합니다."

# unordered list
#: deploy_pro/real_time_backup.md:282
msgid ""
"- Even with the near real-time feature of the backup server, the data on the "
"backup server may still be a bit older than the primary server. This is "
"especially true for the libraries failed to backup."
msgstr ""
"- 백업 서버의 실시간에 가까운 기능으로 백업 서버의 데이터는 여전히 주 서버에 "
"저장한 데이터보다는 조금 시기가 지납니다. 이는 특히 라이브러리 백업에 실패했"
"을 경우에 해당합니다."

#: deploy_pro/real_time_backup.md:284
msgid ""
"Before switching to the backup server, you should first unsync all clients "
"which is syncing with \"failed to backup\" libraries."
msgstr ""
"백업 서버로 전환하기 전, 우선, \"백업에 실패한\" 라이브러리를 동기화하는 모"
"든 클라이언트의 동기화를 해제해야합니다."

#: deploy_pro/real_time_backup.md:286
msgid "Supposed the output of `seaf-backup-cmd.sh status` is as follows:"
msgstr "`seaf-backup-cmd.sh` 출력은 다음과 같다고 가정하겠습니다:"

# code block
#: deploy_pro/real_time_backup.md:288
msgid ""
"```\n"
"List of libraries failed to sync:\n"
"f690ea2c-fe4d-459a-ba1e-165cdc6df391\n"
"e2df70b5-cd80-496f-98cf-c9f038cf1307\n"
"```"
msgstr ""
"```\n"
"List of libraries failed to sync:\n"
"f690ea2c-fe4d-459a-ba1e-165cdc6df391\n"
"e2df70b5-cd80-496f-98cf-c9f038cf1307\n"
"```"

#: deploy_pro/real_time_backup.md:294
msgid "You run the following command within MySQL on the backup server:"
msgstr "백업 서버의 MySQL에서 다음 명령을 실행하십시오:"

# code block
#: deploy_pro/real_time_backup.md:296
msgid ""
"```\n"
"use seafile-db;\n"
"delete from RepoUserToken where repo_id in ('f690ea2c-fe4d-459a-"
"ba1e-165cdc6df391', 'e2df70b5-cd80-496f-98cf-c9f038cf1307');\n"
"```"
msgstr ""
"```\n"
"use seafile-db;\n"
"delete from RepoUserToken where repo_id in ('f690ea2c-fe4d-459a-"
"ba1e-165cdc6df391', 'e2df70b5-cd80-496f-98cf-c9f038cf1307');\n"
"```"

# header
#: deploy_pro/seaf_encrypt.md:1
msgid "# Seafile Storage Backend Encryption"
msgstr "## Seafile 저장장치 백엔드 암호화"

#: deploy_pro/seaf_encrypt.md:3
msgid ""
"Since seafile 5.1.3 pro edition, we support storage backend encryption "
"functionality. When enabled, all seafile objects (commit, fs, block) will be "
"encrypted with AES 256 CBC algorithm, before writing to the storage backend. "
"Currently supported backends are: file system, Ceph, Swift, S3."
msgstr ""
"5.1.3 전문가판부터, 저장장치 백엔드 암호화 기능을 지원합니다. 이 기능을 활성"
"화하면 저장장치 백엔드에 기록하기 전에 모든 Seafile 객체(commit, fs, block)"
"을 AES 256 CBC 알고리즘으로 암호화합니다. 현재 지원하는 백엔드는 파일 시스"
"템, Ceph, Swift, S3 입니다."

#: deploy_pro/seaf_encrypt.md:5
msgid ""
"Note that all objects will be encrypted with the same global key/iv pair. "
"The key/iv pair has to be generated by the system admin and stored safely. "
"If the key/iv pair is lost, all data cannot be recovered."
msgstr ""
"모든 객체는 동일한 전역 키 및 초기 벡터값 쌍으로 암호화 처리합니다. 키 및 초"
"기화 벡터 쌍은 시스템 관리자가 생성하며 안전하게 보관합니다. 키 및 초기화 벡"
"터 쌍을 잃으면 모든 데이터를 복원할 수 없습니다."

# header
#: deploy_pro/seaf_encrypt.md:7
msgid "## Configure Storage Backend Encryption"
msgstr "## 저장장치 백엔드 암호화 설정"

# header
#: deploy_pro/seaf_encrypt.md:9
msgid "### Generate Key and IV"
msgstr "### 키 및 초기 벡터값 생성"

#: deploy_pro/seaf_encrypt.md:11
msgid ""
"Go to <INSTALL_PATH>/seafile-server-latest, execute `./seaf-gen-key.sh -h`. "
"it will print follow usage information:"
msgstr ""
"<INSTALL_PATH>/seafile-server-latest 디렉터리로 이동, `./seaf-gen-key.sh -h` "
"명령을 실행하십시오. 다음 사용법 정보를 출력합니다:"

# code block
#: deploy_pro/seaf_encrypt.md:13
msgid ""
"```\n"
"usage :\n"
"seaf-gen-key.sh\n"
" -p <file path to write key iv, default ./seaf-key.txt>\n"
"```"
msgstr ""
"```\n"
"usage :\n"
"seaf-gen-key.sh\n"
" -p <file path to write key iv, default ./seaf-key.txt>\n"
"```"

#: deploy_pro/seaf_encrypt.md:19
msgid ""
"By default, the key/iv pair will be saved to a file named seaf-key.txt in "
"the current directory. You can use '-p' option to change the path."
msgstr ""
"기본적으로 키 및 초기 벡터값은 현재 디렉터리의 seaf-key.txt 파일로 저장합니"
"다. '-p' 옵션으로 경로를 바꿀 수 있습니다."

# header
#: deploy_pro/seaf_encrypt.md:21
msgid "### Configure a Freshly Installed Seafile Server"
msgstr "### 새로 설치한 Seafile 서버 설정"

#: deploy_pro/seaf_encrypt.md:23
msgid "Add following configuration to seafile.conf:"
msgstr "다음 설정 내용을 seafile.conf에 추가하십시오:"

# code block
#: deploy_pro/seaf_encrypt.md:25 deploy_pro/seaf_encrypt.md:55
msgid ""
"```\n"
"[store_crypt]\n"
"key_path = <the key file path generated in previous section>\n"
"```"
msgstr ""
"```\n"
"[store_crypt]\n"
"key_path = <the key file path generated in previous section>\n"
"```"

#: deploy_pro/seaf_encrypt.md:30
msgid "Now the encryption feature should be working."
msgstr "이제 암호화 기능이 동작해야합니다."

# header
#: deploy_pro/seaf_encrypt.md:32
msgid "### Migrating Existing Seafile Server"
msgstr "### 기존 Seafile 서버 이전"

#: deploy_pro/seaf_encrypt.md:34
msgid ""
"If you have existing data in the Seafile server, you have to migrate/encrypt "
"the existing data. **You must stop Seafile server before migrating the data."
"**"
msgstr ""
"Seafile 서버에 이미 데이터가 있다면 기존 데이터를 이전하거나 암호화해야합니"
"다. **데이터를 이전하기 전, Seafile 서버를 멈추십시오.**"

# header
#: deploy_pro/seaf_encrypt.md:36
msgid "#### Create Directories for Encrypted Data"
msgstr "#### 암호화 데이터 디렉터리 만들기"

#: deploy_pro/seaf_encrypt.md:38
msgid "Create new configuration and data directories for the encrypted data."
msgstr "암호화 데이터를 둘 새 설정과 데이터 디렉터리를 만드십시오."

# code block
#: deploy_pro/seaf_encrypt.md:40
msgid ""
"```\n"
"cd seafile-server-latest\n"
"cp -r conf conf-enc\n"
"mkdir seafile-data-enc\n"
"cp -r seafile-data/library-template seafile-data-enc\n"
"# If you use SQLite database\n"
"cp seafile-data/seafile.db seafile-data-enc/\n"
"```"
msgstr ""
"```\n"
"cd seafile-server-latest\n"
"cp -r conf conf-enc\n"
"mkdir seafile-data-enc\n"
"cp -r seafile-data/library-template seafile-data-enc\n"
"# If you use SQLite database\n"
"cp seafile-data/seafile.db seafile-data-enc/\n"
"```"

# header
#: deploy_pro/seaf_encrypt.md:49
msgid "#### Edit Config Files"
msgstr "#### 설정 파일 편집"

#: deploy_pro/seaf_encrypt.md:51
msgid ""
"If you configured s3/swift/ceph backend, edit <INSTALL_PATH>/conf-enc/"
"seafile.conf. You must use a different bucket/container/pool to store the "
"encrypted data."
msgstr ""
"S3/Swift/Ceph 백엔드를 설정했다면 <INSTALL_PATH>/conf-enc/seafile.conf를 편집"
"하십시오. 암호화 데이터를 저장할 때 각기 다른 버킷/컨테이너/풀을 사용해야합니"
"다."

#: deploy_pro/seaf_encrypt.md:53
msgid ""
"Then add the following configuration to <INSTALL_PATH>/conf-enc/seafile.conf"
msgstr "이후 다음 설정을 <INSTALL_PATH>/conf-enc/seafile.conf에 추가하십시오"

# header
#: deploy_pro/seaf_encrypt.md:60
msgid "#### Migrate the Data"
msgstr "#### 데이터 이전"

#: deploy_pro/seaf_encrypt.md:62
msgid ""
"Go to <INSTALL_PATH>/seafile-server-latest, use the seaf-encrypt.sh script "
"to migrate the data."
msgstr ""
"<INSTALL_PATH>/seafile-server-latest 디렉터리로 이동하고, seaf-encrypt.sh 스"
"크립트를 활용하여 데이터를 이전하십시오."

#: deploy_pro/seaf_encrypt.md:64
msgid "Run `./seaf-encrypt.sh -f ../conf-enc -e ../seafile-data-enc`,"
msgstr ""
"`./seaf-encrypt.sh -f ../conf-enc -e ../seafile-data-enc`를 실행하십시오,"

# code block
#: deploy_pro/seaf_encrypt.md:66
msgid ""
"```\n"
"Starting seaf-encrypt, please wait ...\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 57 block among 12 "
"repo.\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 102 fs among 12 "
"repo.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all fs.\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 66 commit among 12 "
"repo.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all commit.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all block.\n"
"seaf-encrypt run done\n"
"Done.\n"
"```"
msgstr ""
"```\n"
"Starting seaf-encrypt, please wait ...\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 57 block among 12 "
"repo.\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 102 fs among 12 "
"repo.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all fs.\n"
"[04/26/16 06:59:40] seaf-encrypt.c(444): Start to encrypt 66 commit among 12 "
"repo.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all commit.\n"
"[04/26/16 06:59:41] seaf-encrypt.c(454): Success encrypt all block.\n"
"seaf-encrypt run done\n"
"Done.\n"
"```"

#: deploy_pro/seaf_encrypt.md:78
msgid ""
"If there are error messages output after executing seaf-encrypt.sh, you can "
"fix the problem and run the script again. Objects that already migrated will "
"not be copied again."
msgstr ""
"seaf-encrypt.sh 실행 후 오류 메시지가 나타났다면 스크립트를 한번 더 실행하여 "
"문제를 해결할 수 있습니다. 이미 이전한 객체는 다시 복사하지 않습니다."

# header
#: deploy_pro/seaf_encrypt.md:80
msgid "#### Clean Up"
msgstr "#### 정리"

#: deploy_pro/seaf_encrypt.md:82
msgid "Go to <INSTALL_PATH>, execute following commands:"
msgstr "<INSTALL_PATH>로 이동하여 다음 명령을 실행하십시오:"

# code block
#: deploy_pro/seaf_encrypt.md:84
msgid ""
"```\n"
"mv conf conf-bak\n"
"mv seafile-data seafile-data-bak\n"
"mv conf-enc conf\n"
"mv seafile-data-enc seafile-data\n"
"```"
msgstr ""
"```\n"
"mv conf conf-bak\n"
"mv seafile-data seafile-data-bak\n"
"mv conf-enc conf\n"
"mv seafile-data-enc seafile-data\n"
"```"

#: deploy_pro/seaf_encrypt.md:91
msgid ""
"Restart seafile server. If everything works okay, you can remove the backup "
"directories later."
msgstr ""
"Seafile 서버를 다시 시작하십시오. 모든 부분이 잘 동작한다면 백업 디렉터리를 "
"나중에 제거할 수 있습니다."

# header
#: deploy_pro/seaf_import.md:1
msgid "# Import Directory To Seafile"
msgstr "# Seafile에 디렉터리 가져오기"

#: deploy_pro/seaf_import.md:3
msgid ""
"Since seafile 5.1.3 pro edition, we support importing a local directory on "
"the server to seafile. It's a handy tool for the system admin to import "
"files from existing file servers (NFS, Samba etc.)."
msgstr ""
"5.1.3 전문가판부터 서버의 로컬 디렉터리를 Seafile로 가져오는 기능을 지원합니"
"다. 시스템 관리자가 기존 파일 서버(NFS, 삼바 등)에서 파일을 가져올 때 쓸만한 "
"도구입니다."

#: deploy_pro/seaf_import.md:5
msgid ""
"To import a directory, use the `seaf-import.sh` script in seafile-server-"
"latest directory."
msgstr ""
"디렉터리를 가져오려면 seafile-server-latest 디렉터리에서 `seaf-import.sh` 스"
"크립트를 사용하십시오."

# code block
#: deploy_pro/seaf_import.md:7
msgid ""
"```\n"
"usage :\n"
"seaf-import.sh\n"
" -p <import dir path, must set>\n"
" -n <repo name, must set>\n"
" -u <repo owner, must set>\n"
"```"
msgstr ""
"```\n"
"usage :\n"
"seaf-import.sh\n"
" -p <import dir path, must set>\n"
" -n <repo name, must set>\n"
" -u <repo owner, must set>\n"
"```"

#: deploy_pro/seaf_import.md:15
msgid ""
"The specified directory will be imported into Seafile as a library. You can "
"set the name and owner of the imported library."
msgstr ""
"지정 디렉터리는 Seafile에 라이브러리로 가져옵니다. 가져온 라이브러리의 이름"
"과 소유자를 설정할 수 있습니다."

#: deploy_pro/seaf_import.md:17
msgid ""
"Run `./seaf-import.sh -p <dir you want to import> -n <repo name> -u <repo "
"owner>`,"
msgstr ""
"`./seaf-import.sh -p <dir you want to import> -n <repo name> -u <repo owner>`"
"를 실행하십시오,"

# code block
#: deploy_pro/seaf_import.md:19
msgid ""
"```\n"
"Starting seaf-import, please wait ...\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/seahub.pid "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/error.log "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/seahub.conf "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/access.log "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(183): Import dir ./runtime/ to repo "
"5ffb1f43 successfully.\n"
" run done\n"
"Done.\n"
"```"
msgstr ""
"```\n"
"Starting seaf-import, please wait ...\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/seahub.pid "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/error.log "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/seahub.conf "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(79): Import file ./runtime/access.log "
"successfully.\n"
"[04/26/16 03:36:23] seaf-import.c(183): Import dir ./runtime/ to repo "
"5ffb1f43 successfully.\n"
" run done\n"
"Done.\n"
"```"

#: deploy_pro/seaf_import.md:30
msgid ""
"Login to seafile server with the specified library owner, you will find a "
"new library with the specified name."
msgstr ""
"지정 라이브러리 소유자로 Seafile 서버에 로그인하시면 지정 이름을 가진 새 라이"
"브러리를 찾을 수 있습니다."

# header
#: deploy_pro/seafile_professional_sdition_software_license_agreement.md:1
msgid "# Seafile Professional Edition Software License Agreement"
msgstr "# Seafile 전문가판 프로그램 라이선스 동의서"

# code block
#: deploy_pro/seafile_professional_sdition_software_license_agreement.md:2
msgid ""
"```\n"
"Seafile Professional Edition\n"
"SOFTWARE LICENSE AGREEMENT\n"
"\n"
"NOTICE: READ THE FOLLOWING TERMS AND CONDITIONS CAREFULLY BEFORE YOU "
"DOWNLOAD, INSTALL OR USE Seafile, Inc'S PROPRIETARY SOFTWARE. BY INSTALLING "
"OR USING THE SOFTWARE, YOU AGREE TO BE BOUND BY THE FOLLOWING TERMS AND "
"CONDITIONS. IF YOU DO NOT AGREE TO THE FOLLOWING TERMS AND CONDITIONS, DO "
"NOT INSTALL OR USE THE SOFTWARE.\n"
"\n"
"1. DEFINITIONS\n"
"\"Seafile, Inc\" means Seafile, Inc\n"
"\n"
"\"You and Your\" means the party licensing the Software hereunder.\n"
"\n"
"\"Software\" means the computer programs provided under the terms of this "
"license by Seafile, Inc together with any documentation provided therewith.\n"
"\n"
"2. GRANT OF RIGHTS\n"
"2.1 General\n"
"The License granted for Software under this Agreement authorizes You on a "
"non-exclusive basis to use the Software. The Software is licensed, not sold "
"to You and Seafile, Inc reserves all rights not expressly granted to You in "
"this Agreement. The License is personal to You and may not be assigned by "
"You to any third party.\n"
"\n"
"2.2 License Provisions\n"
"Subject to the receipt by Seafile, Inc of the applicable license fees, You "
"have the right use the Software as follows:\n"
"\n"
"* You may use and install the Software on an unlimited number of computers "
"that are owned, leased, or controlled by you.\n"
"* Nothing in this Agreement shall permit you, or any third party to disclose "
"or otherwise make available to any third party the licensed Software, source "
"code or any portion thereof.\n"
"* You agree to indemnify, hold harmless and defend Seafile, Inc from and "
"against any claims or lawsuits, including attorney's fees, that arise as a "
"result from the use of the Software;\n"
"* You do not permit further redistribution of the Software by Your end-user "
"customers\n"
"\n"
"5. NO DERIVATIVE WORKS\n"
"The inclusion of source code with the License is explicitly not for your use "
"to customize a solution or re-use in your own projects or products. The "
"benefit of including the source code is for purposes of security auditing. "
"You may modify the code only for emergency bug fixes that impact security or "
"performance and only for use within your enterprise. You may not create or "
"distribute derivative works based on the Software or any part thereof. If "
"you need enhancements to the software features, you should suggest them to "
"Source Tree Solutions for version improvements.\n"
"\n"
"6. OWNERSHIP\n"
"You acknowledge that all copies of the Software in any form are the sole "
"property of Seafile, Inc. You have no right, title or interest to any such "
"Software or copies thereof except as provided in this Agreement.\n"
"\n"
"7. CONFIDENTIALITY\n"
"You hereby acknowledge and agreed that the Software constitute and contain "
"valuable proprietary products and trade secrets of Seafile, Inc, embodying "
"substantial creative efforts and confidential information, ideas, and "
"expressions. You agree to treat, and take precautions to ensure that your "
"employees and other third parties treat, the Software as confidential in "
"accordance with the confidentiality requirements herein.\n"
"\n"
"8. DISCLAIMER OF WARRANTIES\n"
"EXCEPT AS OTHERWISE SET FORTH IN THIS AGREEMENT THE SOFTWARE IS PROVIDED TO "
"YOU \"AS IS\", AND Seafile, Inc MAKES NO EXPRESS OR IMPLIED WARRANTIES WITH "
"RESPECT TO ITS FUNCTIONALITY, CONDITION, PERFORMANCE, OPERABILITY OR USE. "
"WITHOUT LIMITING THE FOREGOING, Seafile, Inc DISCLAIMS ALL IMPLIED "
"WARRANTIES INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF "
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR FREEDOM FROM "
"INFRINGEMENT. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED "
"WARRANTIES, SO THE ABOVE EXCLUSIONS MAY NOT APPLY TO YOU. THE LIMITED "
"WARRANTY HEREIN GIVES YOU SPECIFIC LEGAL RIGHTS, AND YOU MAY ALSO HAVE OTHER "
"RIGHTS THAT VARY FROM ONE JURISDICTION TO ANOTHER.\n"
"\n"
"9. LIMITATION OF LIABILITY\n"
"YOU ACKNOWLEDGE AND AGREE THAT THE CONSIDERATION WHICH Seafile, Inc IS "
"CHARGING HEREUNDER DOES NOT INCLUDE ANY CONSIDERATION FOR ASSUMPTION BY "
"Seafile, Inc OF THE RISK OF YOUR CONSEQUENTIAL OR INCIDENTAL DAMAGES WHICH "
"MAY ARISE IN CONNECTION WITH YOUR USE OF THE SOFTWARE. ACCORDINGLY, YOU "
"AGREE THAT Seafile, Inc SHALL NOT BE RESPONSIBLE TO YOU OR ANY THIRD PARTY "
"FOR ANY LOSS-OF-PROFIT, LOST SAVINGS, INDIRECT, INCIDENTAL, SPECIAL OR "
"CONSEQUENTIAL DAMAGES ARISING OUT OF A LICENSING OR USE OF THE SOFTWARE.\n"
"\n"
"10. INDEMNIFICATION\n"
"You agree to defend, indemnify and hold Seafile, Inc and its employees, "
"agents, representatives and assigns harmless from and against any claims, "
"proceedings, damages, injuries, liabilities, costs, attorney's fees relating "
"to or arising out of Your use of the Software or any breach of this "
"Agreement.\n"
"\n"
"11. TERMINATION\n"
"Your license is effective until terminated. You may terminate it at any time "
"by destroying the Software or returning all copies of the Software to "
"Seafile, Inc. Your license will terminate immediately without notice if You "
"breach any of the terms and conditions of this Agreement, including non or "
"incomplete payment of the license fee. Upon termination of this Agreement "
"for any reason: You will uninstall all copies of the Software; You will "
"immediately cease and desist all use of the Software; and will destroy all "
"copies of the software in your possesion.\n"
"\n"
"12. UPDATES AND SUPPORT\n"
"Seafile, Inc has the right, but no obligation, to periodically update the "
"Software, at its complete discretion, without the consent or obligation to "
"You or any licensee or user.\n"
"\n"
"13. TAXES AND OTHER CHARGES\n"
"You are responsible for paying all sales, use, excise valuated or other "
"taxes or governmental charges in addition to freight, insurance and "
"installation charges and import or export duties.\n"
"\n"
"YOU HEREBY ACKNOWLEDGE THAT YOU HAVE READ THIS AGREEMENT, UNDERSTAND IT AND "
"AGREE TO BE BOUND BY ITS TERMS AND CONDITIONS.\n"
"\n"
"```"
msgstr ""
"```\n"
"Seafile Professional Edition\n"
"SOFTWARE LICENSE AGREEMENT\n"
"\n"
"NOTICE: READ THE FOLLOWING TERMS AND CONDITIONS CAREFULLY BEFORE YOU "
"DOWNLOAD, INSTALL OR USE Seafile, Inc'S PROPRIETARY SOFTWARE. BY INSTALLING "
"OR USING THE SOFTWARE, YOU AGREE TO BE BOUND BY THE FOLLOWING TERMS AND "
"CONDITIONS. IF YOU DO NOT AGREE TO THE FOLLOWING TERMS AND CONDITIONS, DO "
"NOT INSTALL OR USE THE SOFTWARE.\n"
"\n"
"1. DEFINITIONS\n"
"\"Seafile, Inc\" means Seafile, Inc\n"
"\n"
"\"You and Your\" means the party licensing the Software hereunder.\n"
"\n"
"\"Software\" means the computer programs provided under the terms of this "
"license by Seafile, Inc together with any documentation provided therewith.\n"
"\n"
"2. GRANT OF RIGHTS\n"
"2.1 General\n"
"The License granted for Software under this Agreement authorizes You on a "
"non-exclusive basis to use the Software. The Software is licensed, not sold "
"to You and Seafile, Inc reserves all rights not expressly granted to You in "
"this Agreement. The License is personal to You and may not be assigned by "
"You to any third party.\n"
"\n"
"2.2 License Provisions\n"
"Subject to the receipt by Seafile, Inc of the applicable license fees, You "
"have the right use the Software as follows:\n"
"\n"
"* You may use and install the Software on an unlimited number of computers "
"that are owned, leased, or controlled by you.\n"
"* Nothing in this Agreement shall permit you, or any third party to disclose "
"or otherwise make available to any third party the licensed Software, source "
"code or any portion thereof.\n"
"* You agree to indemnify, hold harmless and defend Seafile, Inc from and "
"against any claims or lawsuits, including attorney's fees, that arise as a "
"result from the use of the Software;\n"
"* You do not permit further redistribution of the Software by Your end-user "
"customers\n"
"\n"
"5. NO DERIVATIVE WORKS\n"
"The inclusion of source code with the License is explicitly not for your use "
"to customize a solution or re-use in your own projects or products. The "
"benefit of including the source code is for purposes of security auditing. "
"You may modify the code only for emergency bug fixes that impact security or "
"performance and only for use within your enterprise. You may not create or "
"distribute derivative works based on the Software or any part thereof. If "
"you need enhancements to the software features, you should suggest them to "
"Source Tree Solutions for version improvements.\n"
"\n"
"6. OWNERSHIP\n"
"You acknowledge that all copies of the Software in any form are the sole "
"property of Seafile, Inc. You have no right, title or interest to any such "
"Software or copies thereof except as provided in this Agreement.\n"
"\n"
"7. CONFIDENTIALITY\n"
"You hereby acknowledge and agreed that the Software constitute and contain "
"valuable proprietary products and trade secrets of Seafile, Inc, embodying "
"substantial creative efforts and confidential information, ideas, and "
"expressions. You agree to treat, and take precautions to ensure that your "
"employees and other third parties treat, the Software as confidential in "
"accordance with the confidentiality requirements herein.\n"
"\n"
"8. DISCLAIMER OF WARRANTIES\n"
"EXCEPT AS OTHERWISE SET FORTH IN THIS AGREEMENT THE SOFTWARE IS PROVIDED TO "
"YOU \"AS IS\", AND Seafile, Inc MAKES NO EXPRESS OR IMPLIED WARRANTIES WITH "
"RESPECT TO ITS FUNCTIONALITY, CONDITION, PERFORMANCE, OPERABILITY OR USE. "
"WITHOUT LIMITING THE FOREGOING, Seafile, Inc DISCLAIMS ALL IMPLIED "
"WARRANTIES INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF "
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR FREEDOM FROM "
"INFRINGEMENT. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED "
"WARRANTIES, SO THE ABOVE EXCLUSIONS MAY NOT APPLY TO YOU. THE LIMITED "
"WARRANTY HEREIN GIVES YOU SPECIFIC LEGAL RIGHTS, AND YOU MAY ALSO HAVE OTHER "
"RIGHTS THAT VARY FROM ONE JURISDICTION TO ANOTHER.\n"
"\n"
"9. LIMITATION OF LIABILITY\n"
"YOU ACKNOWLEDGE AND AGREE THAT THE CONSIDERATION WHICH Seafile, Inc IS "
"CHARGING HEREUNDER DOES NOT INCLUDE ANY CONSIDERATION FOR ASSUMPTION BY "
"Seafile, Inc OF THE RISK OF YOUR CONSEQUENTIAL OR INCIDENTAL DAMAGES WHICH "
"MAY ARISE IN CONNECTION WITH YOUR USE OF THE SOFTWARE. ACCORDINGLY, YOU "
"AGREE THAT Seafile, Inc SHALL NOT BE RESPONSIBLE TO YOU OR ANY THIRD PARTY "
"FOR ANY LOSS-OF-PROFIT, LOST SAVINGS, INDIRECT, INCIDENTAL, SPECIAL OR "
"CONSEQUENTIAL DAMAGES ARISING OUT OF A LICENSING OR USE OF THE SOFTWARE.\n"
"\n"
"10. INDEMNIFICATION\n"
"You agree to defend, indemnify and hold Seafile, Inc and its employees, "
"agents, representatives and assigns harmless from and against any claims, "
"proceedings, damages, injuries, liabilities, costs, attorney's fees relating "
"to or arising out of Your use of the Software or any breach of this "
"Agreement.\n"
"\n"
"11. TERMINATION\n"
"Your license is effective until terminated. You may terminate it at any time "
"by destroying the Software or returning all copies of the Software to "
"Seafile, Inc. Your license will terminate immediately without notice if You "
"breach any of the terms and conditions of this Agreement, including non or "
"incomplete payment of the license fee. Upon termination of this Agreement "
"for any reason: You will uninstall all copies of the Software; You will "
"immediately cease and desist all use of the Software; and will destroy all "
"copies of the software in your possesion.\n"
"\n"
"12. UPDATES AND SUPPORT\n"
"Seafile, Inc has the right, but no obligation, to periodically update the "
"Software, at its complete discretion, without the consent or obligation to "
"You or any licensee or user.\n"
"\n"
"13. TAXES AND OTHER CHARGES\n"
"You are responsible for paying all sales, use, excise valuated or other "
"taxes or governmental charges in addition to freight, insurance and "
"installation charges and import or export duties.\n"
"\n"
"YOU HEREBY ACKNOWLEDGE THAT YOU HAVE READ THIS AGREEMENT, UNDERSTAND IT AND "
"AGREE TO BE BOUND BY ITS TERMS AND CONDITIONS.\n"
"\n"
"```"

# header
#: deploy_pro/setup_seafile_cluster_with_nfs.md:1
msgid "# Setup Seafile cluster with NFS"
msgstr "# Seafile 클러스터 및 NFS 설정"

#: deploy_pro/setup_seafile_cluster_with_nfs.md:3
msgid ""
"In a Seafile cluster, one common way to share data among the Seafile server "
"instances is to use NFS. You should only share the files objects on NFS. "
"Here we'll provide a tutorial about how and what to share."
msgstr ""
"Seafile 클러스터에서 Seafile 서버 인스턴스간 데이터를 공유하는 일반적인 방법"
"은 NFS를 사용하는 방법입니다. NFS의 파일 객체만 공유할 수 있어야합니다. 여기"
"서 어떻게 무엇을 공유하는지 지침을 제공해드리겠습니다."

#: deploy_pro/setup_seafile_cluster_with_nfs.md:5
msgid ""
"How to setup nfs server and client is beyond the scope of this wiki. Here "
"are few references:"
msgstr ""
"NFS 서버 및 클라이언트 설정 방법은 이 위키 문서의 주제 범위를 벗어납니다. 몇"
"가지 참고 자료가 있습니다:"

# unordered list
#: deploy_pro/setup_seafile_cluster_with_nfs.md:7
msgid "* Ubuntu: https://help.ubuntu.com/community/SettingUpNFSHowTo"
msgstr "* 우분투: https://help.ubuntu.com/community/SettingUpNFSHowTo"

# unordered list
#: deploy_pro/setup_seafile_cluster_with_nfs.md:8
msgid ""
"* CentOS: http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-nfs."
"html"
msgstr ""
"* CentOS: http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-nfs."
"html"

#: deploy_pro/setup_seafile_cluster_with_nfs.md:10
msgid ""
"Supposed your seafile server installation directory is `/data/haiwen`, after "
"you run the setup script there should be a `seafile-data` directory in it. "
"And supposed you mount the NFS drive on `/seafile-nfs`, you should follow a "
"few steps:"
msgstr ""
"Seafile 서버 설치 디렉터리를 `/data/haiwen`이라고 하고, 설치 스크립트를 실행"
"한 후 `seafile-data` 디렉터리를 해당 디렉터리에 만든다고 가정하겠습니다. 그리"
"고 NFS 드라이브를 `/seafile-nfs`에 마운트한다고 가정하겠습니다. 다음 몇가지 "
"과정을 따라야합니다:"

# unordered list
#: deploy_pro/setup_seafile_cluster_with_nfs.md:12
msgid "* Move the `seafile-data` folder to `/seafile-nfs`:"
msgstr "* `seafile-data` 폴더를 `/seafile-nfs`에 옮기십시오:"

# code block
#: deploy_pro/setup_seafile_cluster_with_nfs.md:14
msgid ""
"```\n"
"mv /data/haiwen/seafile-data /seafile-nfs/\n"
"```"
msgstr ""
"```\n"
"mv /data/haiwen/seafile-data /seafile-nfs/\n"
"```"

# unordered list
#: deploy_pro/setup_seafile_cluster_with_nfs.md:19
msgid ""
"* On every node in the cluster, make a symbolic link to the shared seafile-"
"data folder "
msgstr ""
"* 클러스터의 모든 노드에 공유 seafile-data 폴더의 심볼릭 링크를 만드십시오 "

# code block
#: deploy_pro/setup_seafile_cluster_with_nfs.md:21
msgid ""
"```\n"
"cd /data/haiwen\n"
"ln -s /seafile-nfs/seafile-data /data/haiwen/seafile-data\n"
"```"
msgstr ""
"```\n"
"cd /data/haiwen\n"
"ln -s /seafile-nfs/seafile-data /data/haiwen/seafile-data\n"
"```"

#: deploy_pro/setup_seafile_cluster_with_nfs.md:27
msgid ""
"This way the instances will share the same `seafile-data` folder. All other "
"config files and log files will remain independent."
msgstr ""
"이 방법으로 각 인스턴스별로 동일한 `seafile-data` 폴더를 공유합니다. 기타 다"
"른 설정 파일 및 로그 파일은 제각각의 인스턴스에 남습니다."

# header
#: deploy_pro/setup_with_amazon_s3.md:1
msgid "# Setup With Amazon S3"
msgstr "# Amazon S3 설정"

# header
#: deploy_pro/setup_with_amazon_s3.md:5 deploy_pro/setup_with_swift.md:7
msgid "## Prepare"
msgstr "## 준비"

#: deploy_pro/setup_with_amazon_s3.md:7
msgid "To setup Seafile Professional Server with Amazon S3:"
msgstr "Seafile 전문가판 서버와 아마존 S3를 설정하려면:"

# unordered list
#: deploy_pro/setup_with_amazon_s3.md:9 deploy_pro/setup_with_swift.md:11
msgid ""
"- Setup the basic Seafile Professional Server following the guide on "
"[Download and setup Seafile Professional Server]"
"(download_and_setup_seafile_professional_server.md)"
msgstr ""
"- [Seafile 전문가판 서버 다운로드 및 설치]"
"(download_and_setup_seafile_professional_server.md)의 안내를 따라 Seafile 전"
"문가판 서버 기본 구성 요소를 설치하십시오"

# unordered list
#: deploy_pro/setup_with_amazon_s3.md:10
msgid "- Install the python `boto` library. It's needed to access S3 service."
msgstr ""
"- 파이썬 `boto` 라이브러리를 설치하십시오. S3 서비스 접근에 필요합니다."

# code block
#: deploy_pro/setup_with_amazon_s3.md:11
#: deploy_pro/setup_with_openstackswift.md:15
msgid ""
"```\n"
"sudo easy_install boto\n"
"```"
msgstr ""
"```\n"
"sudo easy_install boto\n"
"```"

# unordered list
#: deploy_pro/setup_with_amazon_s3.md:14 deploy_pro/setup_with_swift.md:12
msgid ""
"- Install and configure memcached. For best performance, Seafile requires "
"install memcached and enable memcache for objects. We recommend to allocate "
"128MB memory for memcached. Edit /etc/memcached.conf"
msgstr ""
"- memcached를 설치하고 설정하십시오. 최상의 성능을 발휘하려면 Seafile에서는 "
"memcached를 설치하고 객체에 대한 memcache를 활성화해야합니다. memcached에 "
"128MB 메모리 확보를 권장합니다. /etc/memcached.conf를 편집하십시오"

# code block
#: deploy_pro/setup_with_amazon_s3.md:16 deploy_pro/setup_with_ceph.md:21
#: deploy_pro/setup_with_openstackswift.md:23 deploy_pro/setup_with_swift.md:14
msgid ""
"```\n"
"# Start with a cap of 64 megs of memory. It's reasonable, and the daemon "
"default\n"
"# Note that the daemon will grow to this size, but does not start out "
"holding this much\n"
"# memory\n"
"# -m 64\n"
"-m 128\n"
"```"
msgstr ""
"```\n"
"# Start with a cap of 64 megs of memory. It's reasonable, and the daemon "
"default\n"
"# Note that the daemon will grow to this size, but does not start out "
"holding this much\n"
"# memory\n"
"# -m 64\n"
"-m 128\n"
"```"

# header
#: deploy_pro/setup_with_amazon_s3.md:24 deploy_pro/setup_with_swift.md:22
msgid "## Modify Seafile.conf"
msgstr "## Seafile.conf 수정"

#: deploy_pro/setup_with_amazon_s3.md:26 deploy_pro/setup_with_ceph.md:47
#: deploy_pro/setup_with_swift.md:24
msgid "Edit `seafile.conf`, add the following lines:"
msgstr "`seafile.conf`를 편집하여 다음 줄을 추가하십시오:"

# code block
#: deploy_pro/setup_with_amazon_s3.md:28
msgid ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-commit-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-fs-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-block-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-commit-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-fs-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"# bucket name can only use lowercase characters, numbers, periods and "
"dashes. Period cannot be used in Frankfurt region.\n"
"bucket = my-block-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/setup_with_amazon_s3.md:54
msgid ""
"It's recommended to create separate buckets for commit, fs, and block "
"objects."
msgstr "commit, fs, block 객체의 별개 버킷을 만들어두시는게 좋습니다."

#: deploy_pro/setup_with_amazon_s3.md:55
msgid ""
"The key_id and key are required to authenticate you to S3. You can find the "
"key_id and key in the \"security credentials\" section on your AWS account "
"page."
msgstr ""
"key_id와 key는 S3에서 인증할 때 필요합니다. key_id와 key는 AWS 계정 페이지의 "
"\"보안 자격\" 섹션에서 찾을 수 있습니다."

#: deploy_pro/setup_with_amazon_s3.md:57
msgid ""
"When creating your buckets on S3, please first read [S3 bucket naming rules]"
"[1]. Note especially not to use **UPPERCASE** letters in bucket names (don't "
"use camel style names, such as MyCommitObjects)."
msgstr ""
"S3에서 버킷을 만들 때 [S3 버킷 이름 규칙][1]을 먼저 읽어두십시오. 특히, **대"
"문자**를 버킷 이름에 사용하면 안됨을 참고하십시오(MyCommitObjects와 같은 캐"
"멀 케이스 방식 이름을 사용하지 마십시오)."

# header
#: deploy_pro/setup_with_amazon_s3.md:59
msgid "### Use S3 in newer regions"
msgstr "### 새 리전에서 S3 활용"

#: deploy_pro/setup_with_amazon_s3.md:61
msgid ""
"After Januaray 2014, new regions of AWS will only support authentication "
"signature version 4 for S3. At this time, new region includes Frankfurt and "
"China."
msgstr ""
"2014년 1월부터 AWS의 새 리전에서는 S3에서 인증 서명 버전 4만 지원합니다. 현"
"재, 프랑크후르트와 중국의 리전도 새 리전에 포함합니다."

#: deploy_pro/setup_with_amazon_s3.md:63
msgid ""
"To use S3 backend in these regions, add following options to "
"commit_object_backend, fs_object_backend and block_backend section in "
"seafile.conf"
msgstr ""
"이 리전의 S3 백엔드를 활용하려면, seafile.conf에 있는 commit_object_backend, "
"fs_object_backend, block_backend 섹션에 다음 설정 항목을 추가핫비시오"

# code block
#: deploy_pro/setup_with_amazon_s3.md:65
msgid ""
"```\n"
"use_v4_signature = true\n"
"# eu-central-1 for Frankfurt region\n"
"aws_region = eu-central-1\n"
"```"
msgstr ""
"```\n"
"use_v4_signature = true\n"
"# eu-central-1 for Frankfurt region\n"
"aws_region = eu-central-1\n"
"```"

#: deploy_pro/setup_with_amazon_s3.md:71
msgid ""
"For file search and webdav to work with the v4 signature mechanism, you need "
"to add following lines to ~/.boto"
msgstr ""
"파일 검색 및 webdav를 v4 서명 매커니즘과 동작하게 하려면 ~/.boto에 다음 줄을 "
"추가해야합니다."

# code block
#: deploy_pro/setup_with_amazon_s3.md:73
msgid ""
"```\n"
"[s3]\n"
"use-sigv4 = True\n"
"```"
msgstr ""
"```\n"
"[s3]\n"
"use-sigv4 = True\n"
"```"

# header
#: deploy_pro/setup_with_amazon_s3.md:78 deploy_pro/setup_with_ceph.md:77
#: deploy_pro/setup_with_openstackswift.md:153
#: deploy_pro/setup_with_swift.md:64
msgid "### Using memcached cluster"
msgstr "### memcached 클러스터 활용"

#: deploy_pro/setup_with_amazon_s3.md:80 deploy_pro/setup_with_ceph.md:79
#: deploy_pro/setup_with_openstackswift.md:155
#: deploy_pro/setup_with_swift.md:66
msgid ""
"In a cluster environment, you may want to use a memcached cluster. In the "
"above configuration, you have to specify all the memcached server node "
"addresses in seafile.conf"
msgstr ""
"클러스터 환경에서는 memcached 클러스터를 활용할 수도 있습니다. 위 설정에서 "
"seafile.conf의 모든 memcached 서버 노드 주소를 지정해야합니다."

# code block
#: deploy_pro/setup_with_amazon_s3.md:82 deploy_pro/setup_with_ceph.md:81
#: deploy_pro/setup_with_openstackswift.md:157
#: deploy_pro/setup_with_swift.md:68
msgid ""
"```\n"
"memcached_options = --SERVER=192.168.1.134 --SERVER=192.168.1.135 --"
"SERVER=192.168.1.136 --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"memcached_options = --SERVER=192.168.1.134 --SERVER=192.168.1.135 --"
"SERVER=192.168.1.136 --POOL-MIN=10 --POOL-MAX=100\n"
"```"

# header
#: deploy_pro/setup_with_amazon_s3.md:86
msgid "### Use HTTPS connections to S3"
msgstr "### S3와 https로 연결하기"

#: deploy_pro/setup_with_amazon_s3.md:88
msgid ""
"Since Pro 5.0.4, you can use HTTPS connections to S3. Add the following "
"options to seafile.conf:"
msgstr ""
"전문가판 5.0.4부터 S3에 https로 연결할 수 있습니다. 다음 설정 항목을 seafile."
"conf에 추가하십시오:"

# code block
#: deploy_pro/setup_with_amazon_s3.md:90
msgid ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"```"
msgstr ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"......\n"
"use_https = true\n"
"```"

#: deploy_pro/setup_with_amazon_s3.md:107 deploy_pro/setup_with_swift.md:93
msgid ""
"Because the server package is built on CentOS 6, if you're using Debian/"
"Ubuntu, you have to copy the system CA bundle to CentOS's CA bundle path. "
"Otherwise Seafile can't find the CA bundle so that the SSL connection will "
"fail."
msgstr ""
"서버 꾸러미를 CentOS 6에서 빌드했기 때문에 데비안/우분투를 사용하면, CentOS"
"의 CA 번들 경로에 시스템 CA 번들을 복사해야합니다. 그렇지 않으면 Seafile에서 "
"CA 번들을 차지 못하여 SSL 연결에 실패합니다."

# code block
#: deploy_pro/setup_with_amazon_s3.md:109 deploy_pro/setup_with_swift.md:95
msgid ""
"```\n"
"sudo mkdir -p /etc/pki/tls/certs\n"
"sudo cp /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt\n"
"sudo ln -s /etc/pki/tls/certs/ca-bundle.crt /etc/pki/tls/cert.pem\n"
"```"
msgstr ""
"```\n"
"sudo mkdir -p /etc/pki/tls/certs\n"
"sudo cp /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt\n"
"sudo ln -s /etc/pki/tls/certs/ca-bundle.crt /etc/pki/tls/cert.pem\n"
"```"

#: deploy_pro/setup_with_amazon_s3.md:115
msgid ""
"Another important note is that you **must not use '.' in your bucket "
"names**. Otherwise the wildcard certificate for AWS S3 cannot be resolved. "
"This is a limitation on AWS."
msgstr ""
"참고해야 할 다른 중요한 사항은 **버킷 이름에 '.'(점)을 사용하지 말 것** 입니"
"다. 점을 사용하면 AWS S3의 와일드카드 인증서를 해석할 수 없습니다. 이 점은 "
"AWS의 한계입니다."

# header
#: deploy_pro/setup_with_amazon_s3.md:117
msgid "## Use S3-compatible Object Storage"
msgstr "## S3 호환 객체 저장장치 활용"

#: deploy_pro/setup_with_amazon_s3.md:119
msgid ""
"Many object storage systems are now compatible with the S3 API, such as "
"OpenStack Swift and Ceph's RADOS Gateway. You can use these S3-compatible "
"storage systems as backend for Seafile. Here is an example config:"
msgstr ""
"대부분의 객체 저장소 시스템은 현재 오픈스택 Swift, Ceph의 RADOS 게이트웨이 같"
"은 S3 API와 호환됩니다. 이런 S3 호환 저장소 시스템을 Seafile 백엔드로 활용할 "
"수 있습니다. 예제 설정은 다음과 같습니다:"

# code block
#: deploy_pro/setup_with_amazon_s3.md:121
msgid ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"bucket = my-commit-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"bucket = my-fs-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"bucket = my-block-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[commit_object_backend]\n"
"name = s3\n"
"bucket = my-commit-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"bucket = my-fs-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[block_backend]\n"
"name = s3\n"
"bucket = my-block-objects\n"
"key_id = your-key-id\n"
"key = your-secret-key\n"
"host = 192.168.1.123:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/setup_with_amazon_s3.md:150
msgid ""
"`host` is the address and port of the S3-compatible service. You cannot "
"prepend \"http\" or \"https\" to the `host` option. By default it'll use "
"http connections. If you want to use https connection, please set `use_https "
"= true` option."
msgstr ""
"`host`는 S3 호환 서비스의 주소 및 포트 번호 값을 지닙니다. \"http\" 및 "
"\"https\"를 \"host\" 설정 항목 값 앞에 붙여둘 수 있습니다. 기본적으로 http 연"
"결을 활용합니다. https 연결을 활용하려면 `use_https = true` 설정 항목 값을 설"
"정하십시오."

#: deploy_pro/setup_with_amazon_s3.md:152
msgid ""
"`path_style_request` asks Seafile to use URLs like "
"`https://192.168.1.123:8080/bucketname/object` to access objects. In Amazon "
"S3, the default URL format is in virtual host style, such as `https://"
"bucketname.s3.amazonaws.com/object`. But this style relies on advanced DNS "
"server setup. So most S3-compatible storage systems only implement the path "
"style format."
msgstr ""
"`path_style_request` 설정 항목은 객체에 접근할 `https://192.168.1.123:8080/"
"bucketname/object`와 같은 URL을 Seafile에 활용하라고 일러주며 기본 URL 형식"
"은 `https://bucketname.s3.amazonaws.com/object`와 같은 가상 호스트 방식입니"
"다. 그러나 이 방식은 고급 DNS 서버 설정에 따라 다릅니다. 따라서 대부분의 S3 "
"호환 저장소 시스템에서는 이 경로 방식만 구현해두었습니다."

# header
#: deploy_pro/setup_with_amazon_s3.md:154
#: deploy_pro/setup_with_openstackswift.md:161
#: deploy_pro/setup_with_swift.md:101
msgid "## Run and Test ##"
msgstr "## 실행 및 시험 ##"

#: deploy_pro/setup_with_amazon_s3.md:156
#: deploy_pro/setup_with_openstackswift.md:163
#: deploy_pro/setup_with_swift.md:103
msgid ""
"Now you can start Seafile by `./seafile.sh start` and `./seahub.sh start` "
"and visit the website."
msgstr ""
"이제 `./seafile.sh start` 및 `./seahub.sh start` 명령으로 Seafile을 시작하고 "
"웹사이트를 둘러볼 수 있습니다."

#: deploy_pro/setup_with_amazon_s3.md:158
msgid ""
"  [1]: http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions."
"html \"the bucket naming rules\""
msgstr ""
"  [1]: http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions."
"html \"the bucket naming rules\""

# header
#: deploy_pro/setup_with_ceph.md:1
msgid "# Setup With Ceph"
msgstr "# Ceph 설정"

#: deploy_pro/setup_with_ceph.md:5
msgid ""
"Ceph is a scalable distributed storage system. Seafile can use Ceph's RADOS "
"object storage layer for storage backend."
msgstr ""
"Ceph는 확장 가능한 분산 저장소 시스템입니다. Seafile은 Ceph의 RADOS 객체 저장"
"소 계층을 저장소 백엔드로 활용할 수 있습니다."

# header
#: deploy_pro/setup_with_ceph.md:7
msgid "## Copy ceph conf file and client keyring"
msgstr "## ceph 설정 파일 및 클라이언트 키 모음 복사"

#: deploy_pro/setup_with_ceph.md:9
msgid ""
"Seafile acts as a client to Ceph/RADOS, so it needs to access ceph cluster's "
"conf file and keyring. You have to copy these files from a ceph admin "
"node's /etc/ceph directory to the seafile machine."
msgstr ""
"Seafile은 클라이언트 입장에서 Ceph/RADOS 처럼 동작하므로, ceph 클러스터의 설"
"정 파일과 키 모음에 접근해야합니다. 다음 파일을 관리자 노드의 /etc/ceph 디렉"
"터리에서 Seafile 머신으로 복사해야합니다."

# code block
#: deploy_pro/setup_with_ceph.md:11
msgid ""
"```\n"
"seafile-machine# sudo scp user@ceph-admin-node:/etc/ceph/ /etc\n"
"```"
msgstr ""
"```\n"
"seafile-machine# sudo scp user@ceph-admin-node:/etc/ceph/ /etc\n"
"```"

# header
#: deploy_pro/setup_with_ceph.md:15
msgid "## Install and enable memcached"
msgstr "## memcached 설치 및 활성화"

#: deploy_pro/setup_with_ceph.md:17 deploy_pro/setup_with_openstackswift.md:19
msgid ""
"For best performance, Seafile requires install memcached and enable memcache "
"for objects. "
msgstr ""
"성능을 최상으로 끌어 올리려면 Seafile에 memcached를 설치하고 객체에 대해 "
"memcache를 활성화해야합니다."

#: deploy_pro/setup_with_ceph.md:19 deploy_pro/setup_with_openstackswift.md:21
msgid ""
"We recommend to allocate 128MB memory for memcached. Edit /etc/memcached.conf"
msgstr ""
"memcached에 128MB 메모리 용량을 할당해주는게 좋습니다. /etc/memcached.conf를 "
"편집하십시오"

# header
#: deploy_pro/setup_with_ceph.md:29
msgid "## Install Python Ceph Library"
msgstr "## 파이썬 Ceph 라이브러리 설치"

#: deploy_pro/setup_with_ceph.md:31
msgid ""
"File search and WebDAV functions rely on Python Ceph library installed in "
"the system."
msgstr ""
"파일 검색 기능과 WebDAV 기능은 시스템에 설치한 파이썬 Ceph 라이브러리에 의존"
"합니다."

# code block
#: deploy_pro/setup_with_ceph.md:35
msgid ""
"```\n"
"sudo apt-get install python-ceph\n"
"```"
msgstr ""
"```\n"
"sudo apt-get install python-ceph\n"
"```"

#: deploy_pro/setup_with_ceph.md:39
msgid "On RedHat/CentOS:"
msgstr "RedHat/CentOS:"

# code block
#: deploy_pro/setup_with_ceph.md:41
msgid ""
"```\n"
"sudo yum install python-rados\n"
"```"
msgstr ""
"```\n"
"sudo yum install python-rados\n"
"```"

# header
#: deploy_pro/setup_with_ceph.md:45
msgid "## Edit seafile configuration"
msgstr "## Seafile 설정 편집"

# code block
#: deploy_pro/setup_with_ceph.md:49
msgid ""
"```\n"
"[block_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-blocks\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-commits\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-fs\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[block_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-blocks\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-commits\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"pool = seafile-fs\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/setup_with_ceph.md:69
msgid ""
"It's recommended to create separate pools for commit, fs, and block objects."
msgstr "commit, fs, block 객체의 별개 풀을 만들어두시는게 좋습니다."

# code block
#: deploy_pro/setup_with_ceph.md:71
msgid ""
"```\n"
"ceph-admin-node# rados mkpool seafile-blocks\n"
"ceph-admin-node# rados mkpool seafile-commits\n"
"ceph-admin-node# rados mkpool seafile-fs\n"
"```"
msgstr ""
"```\n"
"ceph-admin-node# rados mkpool seafile-blocks\n"
"ceph-admin-node# rados mkpool seafile-commits\n"
"ceph-admin-node# rados mkpool seafile-fs\n"
"```"

# header
#: deploy_pro/setup_with_ceph.md:85
msgid "## Use arbitary Ceph user"
msgstr "## 임의의 Ceph 사용자 활용"

#: deploy_pro/setup_with_ceph.md:87
msgid ""
"The above configuration will use the default (client.admin) user to connect "
"to Ceph."
msgstr "위 설정에서는 Ceph 연결시 기본(client.admin)사용자를 사용합니다."

#: deploy_pro/setup_with_ceph.md:88
msgid ""
"You may want to use some other Ceph user to connect. This is supported in "
"Seafile."
msgstr ""
"다른 Ceph 사용자로 연결하고 싶을 때가 있습니다. Seafile에서 이 기능을 지원합"
"니다."

#: deploy_pro/setup_with_ceph.md:89
msgid ""
"To specify the Ceph user, you have to add a `ceph_client_id` option to "
"seafile.conf, as the following:"
msgstr ""
"Ceph 사용자를 지정하려면, 다음과 같이 `ceph_client_id` 옵션을 추가해야합니다:"

# code block
#: deploy_pro/setup_with_ceph.md:91
msgid ""
"```\n"
"[block_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-blocks\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-commits\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-fs\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[block_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-blocks\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-commits\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = ceph\n"
"ceph_config = /etc/ceph/ceph.conf\n"
"# Sepcify Ceph user for Seafile here\n"
"ceph_client_id = seafile\n"
"pool = seafile-fs\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"

#: deploy_pro/setup_with_ceph.md:117
msgid "You also have to add this user's keyring path to /etc/ceph/ceph.conf:"
msgstr "/etc/ceph/ceph.conf에 사용자 키 모음 경로를 추가해야합니다:"

# code block
#: deploy_pro/setup_with_ceph.md:119
msgid ""
"```\n"
"[client.seafile]\n"
"keyring = <path to user's keyring file>\n"
"```"
msgstr ""
"```\n"
"[client.seafile]\n"
"keyring = <path to user's keyring file>\n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:1
msgid "# Setup With OpenStackSwift"
msgstr "# 오픈스택 Swift 설정"

#: deploy_pro/setup_with_openstackswift.md:5
msgid ""
"Note: This documentation is obsolete. Please refer to [the new documentation "
"about how to use Swift](setup_with_swift.md)."
msgstr ""
"참고: 이 문서는 오래됐습니다. [새 스위프트 활용 방법 문서](setup_with_swift."
"md)를 참고하십시오."

#: deploy_pro/setup_with_openstackswift.md:7
msgid ""
"Starting from professional server 2.0.5, Seafile can use S3-compatible cloud "
"storage (such as OpenStack/Swift) as backend. This document will use Swift "
"as example."
msgstr ""
"전문가판 서버 2.0.5부터, Seafile에서 S3 호환 클라우드 저장소(OpenStack/Swift)"
"를 백엔드로 사용할 수 있습니다. 이 문서는 Swift를 예제로 활용합니다."

# header
#: deploy_pro/setup_with_openstackswift.md:9
msgid "## Seafile Server Preparation"
msgstr "## Seafile 서버 준비"

#: deploy_pro/setup_with_openstackswift.md:11
msgid "To setup Seafile Professional Server with OpenStack Swift:"
msgstr "Seafile 전문가판 서버와 오픈스택 Swift를 설정하려면:"

# unordered list
#: deploy_pro/setup_with_openstackswift.md:13
msgid ""
"- Setup the basic Seafile Professional Server following the guide on "
"[Download and Setup Seafile Professional Server]"
"(download_and_setup_seafile_professional_server.md)"
msgstr ""
"- [Seafile 전문가판 서버 다운로드 및 설치]"
"(download_and_setup_seafile_professional_server.md) 지침을 따라 Seafile 전문"
"가판 서버 기본 설정을 진행하십시오"

# unordered list
#: deploy_pro/setup_with_openstackswift.md:14
msgid "- Install the python `boto` library. It's needed to access Swift."
msgstr "- 파이썬 `boto` 라이브러리를 설치하십시오 Swift 접근에 필요합니다."

# header
#: deploy_pro/setup_with_openstackswift.md:31
msgid "## Swift Preparation"
msgstr "## Swift 준비"

#: deploy_pro/setup_with_openstackswift.md:33
msgid ""
"In a production environment, you'll configure Swift with S3 middleware and "
"use Keystone for authentication. The following instructions assumes you've "
"already setup Swift with Keystone authentication. We'll focus on the change "
"you need to make Swift work with S3 middleware."
msgstr ""
"실 서비스 환경에서 Swift와 S3 미들웨어를 함께 사용하고 Keystone을 인증 수단으"
"로 활용합니다. 다음 절차는 Swift를 Keystone 인증과 활용하도록 이미 설정했다"
"고 가정합니다. Swift와 S3 미들웨어가 동작하도록 바꾸는데 역점을 두겠습니다."

# header
#: deploy_pro/setup_with_openstackswift.md:35
msgid "### Install Swift3"
msgstr "### Swift3 설치"

#: deploy_pro/setup_with_openstackswift.md:37
msgid "This middleware implements S3 API for Swift."
msgstr "미들웨어는 Swift용 S3 API를 구현합니다."

# code block
#: deploy_pro/setup_with_openstackswift.md:39
msgid ""
"```\n"
"git clone https://github.com/fujita/swift3.git\n"
"cd swift3\n"
"sudo python setup.py install\n"
"```"
msgstr ""
"```\n"
"git clone https://github.com/fujita/swift3.git\n"
"cd swift3\n"
"sudo python setup.py install\n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:45
msgid "### Install keystonmiddleware"
msgstr "### keystonmiddleware 설치"

#: deploy_pro/setup_with_openstackswift.md:47
msgid ""
"This middleware contains the `s3token` filter for authentication between S3 "
"API and Keystone. If you've configured Swift to work with Keystone, you "
"should have this middleware installed already."
msgstr ""
"이 미들웨어에는 S3 API와 Keystone의 인증 용도로 사용하는 `s3token` 필터가 있"
"습니다. Swift를 Keystone과 동작하도록 설정했다면, 이미 미들웨어를 설치했어야"
"합니다."

# code block
#: deploy_pro/setup_with_openstackswift.md:49
msgid ""
"```\n"
"git clone https://github.com/openstack/keystonemiddleware.git\n"
"cd keystonmiddleware\n"
"sudo pip install -r requirements.txt\n"
"sudo python setup.py install\n"
"```"
msgstr ""
"```\n"
"git clone https://github.com/openstack/keystonemiddleware.git\n"
"cd keystonmiddleware\n"
"sudo pip install -r requirements.txt\n"
"sudo python setup.py install\n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:56
msgid "### Modify proxy-server.conf for Swift"
msgstr "### Swift용 proxy-server.conf 수정"

#: deploy_pro/setup_with_openstackswift.md:58
msgid "On Ubuntu, the config file is `/etc/swift/proxy-server.conf`."
msgstr "우분투에서 설정 파일은 `/etc/swift/proxy-server.conf` 입니다."

#: deploy_pro/setup_with_openstackswift.md:60
msgid ""
"First check whether you've replaced `tempauth` with `authtoken keystoneauth` "
"in the main pipeline. This should have been done if you configured Swift to "
"work with Keystone."
msgstr ""
"우선 메인 파이프라인에서 `tempauth`를 `authtoken keystoneauth`로 바꾸었는지 "
"확인하십시오. Swift와 Keystone이 함께 동작하도록 설정했다면 이 과정을 진행해"
"야합니다."

#: deploy_pro/setup_with_openstackswift.md:62
msgid "Add `swift3 s3token` to `[pipeline:main]`:"
msgstr "`swift3 s3token`을 `[pipeline:main]`에 추가하십시오:"

# code block
#: deploy_pro/setup_with_openstackswift.md:64
msgid ""
"```\n"
"[pipeline:main]\n"
"pipeline = [...] swift3 s3token authtoken keystoneauth proxy-server\n"
"```"
msgstr ""
"```\n"
"[pipeline:main]\n"
"pipeline = [...] swift3 s3token authtoken keystoneauth proxy-server\n"
"```"

#: deploy_pro/setup_with_openstackswift.md:69
msgid "Add filters:"
msgstr "필터를 추가하십시오:"

# code block
#: deploy_pro/setup_with_openstackswift.md:71
msgid ""
"```\n"
"[filter:swift3]  \n"
"use = egg:swift3#swift3\n"
"\n"
"[filter:s3token]  \n"
"paste.filter_factory = keystonemiddleware.s3_token:filter_factory  \n"
"auth_port = 35357  \n"
"auth_host = [keystone-ip]  \n"
"auth_protocol = http  \n"
"```"
msgstr ""
"```\n"
"[filter:swift3]  \n"
"use = egg:swift3#swift3\n"
"\n"
"[filter:s3token]  \n"
"paste.filter_factory = keystonemiddleware.s3_token:filter_factory  \n"
"auth_port = 35357  \n"
"auth_host = [keystone-ip]  \n"
"auth_protocol = http  \n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:82
msgid "### Restart Swift"
msgstr "### Swift 다시 시작"

# code block
#: deploy_pro/setup_with_openstackswift.md:84
msgid ""
"```\n"
"swift-init proxy restart\n"
"```"
msgstr ""
"```\n"
"swift-init proxy restart\n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:88
msgid "### Accessing Swift via S3 API"
msgstr "### S3 API로 Swift 접근"

#: deploy_pro/setup_with_openstackswift.md:90
msgid ""
"To access it via S3 API, you'll need AWS-like access key id and secret "
"access key. Generate it with the following command for your specific tenant "
"and user (You should change the tenant-id and user-id):"
msgstr ""
"S3 API로 Swift에 접근하려면, AWS 유사 접근 키 ID와 비밀 접근 키가 필요합니"
"다. 다음 명령으로 지정 공여물과 사용자용 접근 키 ID와 비밀 접근키를 만드십시"
"오(tenant-id와 user-id를 바꿔야합니다):"

# code block
#: deploy_pro/setup_with_openstackswift.md:92
msgid ""
"```\n"
"keystone ec2-credentials-create --tenant-id=d6fdc8460c7b46d0ad24aa23667b85c3 "
"--user-id=b66742a744eb4fc98abd945781bf969d\n"
"```"
msgstr ""
"```\n"
"keystone ec2-credentials-create --tenant-id=d6fdc8460c7b46d0ad24aa23667b85c3 "
"--user-id=b66742a744eb4fc98abd945781bf969d\n"
"```"

#: deploy_pro/setup_with_openstackswift.md:96
msgid ""
"After successfully setup S3 middleware, you should be able to access it with "
"any S3 clients. The next thing you need to do is to create buckets for "
"Seafile. With Python boto library you can do as follows (replace `key_id` "
"and `secret_key` with your own):"
msgstr ""
"S3 미들 웨어를 성공적으로 설정한 후, S3 클라이언트에 접근할 수 있어야합니다. "
"다음에는 Seafile에 버킷을 만들어야합니다. 파이썬 boto 라이브러리로 다음과 같"
"이 진행할 수 있습니다(`key_id` 및 `secret_key`를 여러분이 소유한 값으로 바꾸"
"십시오):"

# code block
#: deploy_pro/setup_with_openstackswift.md:98
msgid ""
"```\n"
"import boto\n"
"import boto.s3.connection\n"
"\n"
"connection = boto.connect_s3(\n"
"    aws_access_key_id='<key_id>',\n"
"    aws_secret_access_key='<secret_key>',\n"
"    port=8080,\n"
"    host='swift-proxy-server-address',\n"
"    is_secure=False,\n"
"    calling_format=boto.s3.connection.OrdinaryCallingFormat())\n"
"connection.create_bucket('seafile-commits')\n"
"connection.create_bucket('seafile-fs')\n"
"connection.create_bucket('seafile-blocks')\n"
"```"
msgstr ""
"```\n"
"import boto\n"
"import boto.s3.connection\n"
"\n"
"connection = boto.connect_s3(\n"
"    aws_access_key_id='<key_id>',\n"
"    aws_secret_access_key='<secret_key>',\n"
"    port=8080,\n"
"    host='swift-proxy-server-address',\n"
"    is_secure=False,\n"
"    calling_format=boto.s3.connection.OrdinaryCallingFormat())\n"
"connection.create_bucket('seafile-commits')\n"
"connection.create_bucket('seafile-fs')\n"
"connection.create_bucket('seafile-blocks')\n"
"```"

#: deploy_pro/setup_with_openstackswift.md:114
msgid ""
"Each S3 bucket maps to a container in Swift. So you can use native Swift "
"command line to check the containers. For example:"
msgstr ""
"각 S3 버킷은 Swift의 컨테이너에 대응합니다. 따라서 컨테이너럴 확인할 때 자체 "
"Swift 명령을 활용할 수 있습니다. 예를 들면:"

# code block
#: deploy_pro/setup_with_openstackswift.md:116
msgid ""
"```\n"
"swift -V 2 -A http://[keystone_ip]:5000/v2.0 -U [tenant]:[user] -K [pas] "
"list\n"
"```"
msgstr ""
"```\n"
"swift -V 2 -A http://[keystone_ip]:5000/v2.0 -U [tenant]:[user] -K [pas] "
"list\n"
"```"

# header
#: deploy_pro/setup_with_openstackswift.md:120
msgid "## Modify seafile.conf"
msgstr "## seafile.conf 수정"

#: deploy_pro/setup_with_openstackswift.md:122
msgid ""
"Append the following lines to `seafile.conf` (replace `key_id` and "
"`secret_key` with your own)"
msgstr ""
"`seafile.conf`에 다음 줄을 추가하십시오(`key_id` 및 `secret_key` 값을 본인 소"
"유 값으로 바꾸십시오)"

# code block
#: deploy_pro/setup_with_openstackswift.md:124
msgid ""
"```\n"
"[block_backend]\n"
"name = s3\n"
"bucket = seafile-blocks\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = s3\n"
"bucket = seafile-commits\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"bucket = seafile-fs\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"
msgstr ""
"```\n"
"[block_backend]\n"
"name = s3\n"
"bucket = seafile-blocks\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = s3\n"
"bucket = seafile-commits\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = s3\n"
"bucket = seafile-fs\n"
"key_id = <key_id>\n"
"key = <secret_key>\n"
"host = <swift-proxy-server-address>:8080\n"
"path_style_request = true\n"
"memcached_options = --SERVER=localhost --POOL-MIN=10 --POOL-MAX=100\n"
"```"

# header
#: deploy_pro/setup_with_swift.md:1
msgid "# Setup With OpenStack Swift"
msgstr "# 오픈스택 Swift 설정"

#: deploy_pro/setup_with_swift.md:5
msgid ""
"Seafile supports OpenStack Swift as storage backend since 5.1.0. This "
"backend uses the native Swift API. Previously users can only use the S3-"
"compatibility layer of Swift. That way is obsolete now. The old "
"documentation is still available [here](setup_with_openstackswift.md)."
msgstr ""
"Seafile에서는 5.1.0에서부터 오픈스택 Swift를 저장소 백엔드로 지원합니다. 이 "
"백엔드는 자체 Swift API를 활용합니다. 이전에는 사용자가 Swift의 S3 호환 계층"
"만 사용할 수 있었습니다. 이젠 이 방식이 오래되었습니다. 이전 문서는 여전히 "
"[여기](setup_with_openstackswift.md)에 있습니다."

#: deploy_pro/setup_with_swift.md:9
msgid "To setup Seafile Professional Server with Swift:"
msgstr "Seafile 전문가판 서버와 Swift를 설정하려면:"

# code block
#: deploy_pro/setup_with_swift.md:26
msgid ""
"```\n"
"[block_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-blocks\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-commits\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-fs\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"```"
msgstr ""
"```\n"
"[block_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-blocks\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"\n"
"[commit_object_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-commits\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"\n"
"[fs_object_backend]\n"
"name = swift\n"
"tenant = yourTenant\n"
"user_name = user\n"
"password = secret\n"
"container = seafile-fs\n"
"auth_host = 192.168.56.31:5000\n"
"auth_ver = v2.0\n"
"memcached_options = --SERVER=192.168.1.134:11211 --POOL-MIN=10 --POOL-"
"MAX=100\n"
"```"

#: deploy_pro/setup_with_swift.md:58
msgid ""
"The above config is just an example. You should replace the options "
"according to your own environment."
msgstr ""
"위 설정은 예제일 뿐입니다. 여러분의 환경에 따라 설정 항목 값을 바꿔야합니다."

#: deploy_pro/setup_with_swift.md:60
msgid ""
"Seafile only supports Swift with Keystone as authentication mechanism. "
"Currently only the v2.0 auth protocol is supported. The `auth_host` option "
"is the address and port of Keystone service."
msgstr ""
"Seafile은 Swift를 지원하며 인증 매커니즘으로 Keystone만 사용할 수 있습니다. "
"현재 v2.0 인증 프로토콜만 지원합니다. `auth_host` 설정 항목은 Keystone 서비스"
"의 주소와 포트 번호 값을 지닙니다."

#: deploy_pro/setup_with_swift.md:62
msgid ""
"It's recommended to create separate containers for commit, fs, and block "
"objects."
msgstr "commit, fs, block 객체에 대해 별도의 컨테이너를 만드는 것이 좋습니다."

# header
#: deploy_pro/setup_with_swift.md:72
msgid "### Use HTTPS connections to Swift"
msgstr "### Swift와 https로 연결하기"

#: deploy_pro/setup_with_swift.md:74
msgid ""
"Since Pro 5.0.4, you can use HTTPS connections to Swift. Add the following "
"options to seafile.conf:"
msgstr ""
"전문가판 5.0.4부터 Swift에 https로 연결할 수 있습니다. 다음 설정 항목을 "
"seafile.conf에 추가하십시오:"

# code block
#: deploy_pro/setup_with_swift.md:76
msgid ""
"```\n"
"[commit_object_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"\n"
"[fs_object_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"\n"
"[block_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"```"
msgstr ""
"```\n"
"[commit_object_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"\n"
"[fs_object_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"\n"
"[block_backend]\n"
"name = swift\n"
"......\n"
"use_https = true\n"
"```"

# header
#: deploy_pro/upgrade_a_cluster.md:1
msgid "# Upgrade a Seafile cluster"
msgstr "# Seafile 클러스터 업그레이드"

# header
#: deploy_pro/upgrade_a_cluster.md:3
msgid "## Major and minor version upgrade"
msgstr "## 주/부 버전 업그레이드"

#: deploy_pro/upgrade_a_cluster.md:5
msgid ""
"Seafile adds new features in major and minor versions. It is likely that "
"some database tables need to be modified or the search index need to be "
"updated. In general, upgrading a cluster contains the following steps:"
msgstr ""
"Seafile 에서는 주/부 버전에 새 기능을 추가합니다. 일부 데이터베이스 테이블을 "
"수정하거나 검색 색인을 업데이트해야 할 수도 있습니다. 보통 클러스터 업그레이"
"드는 다음 단계를 따릅니다:"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:7
msgid "1. Upgrade the database"
msgstr "1. 데이터베이스를 업그레이드하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:8
msgid ""
"2. Update symbolic link at frontend and backend nodes to point to the newest "
"version"
msgstr ""
"2. 프론트엔드 및 백엔드 노드의 심볼릭 링크를 최신 버전을 가리키도록 업데이트"
"하십시오."

# ordered list
#: deploy_pro/upgrade_a_cluster.md:9
msgid "3. Update configuration files at each node"
msgstr "3. 각 노드의 설정 파일을 업데이트하십시오."

# ordered list
#: deploy_pro/upgrade_a_cluster.md:10
msgid "4. Update search index in the backend node"
msgstr "4. 백엔드 노드의 검색 색인을 업데이트하십시오."

#: deploy_pro/upgrade_a_cluster.md:12
msgid "In general, to upgrade a cluster, you need:"
msgstr "보통 클러스터 업그레이드 진행시 다음 과정 진행이 필요합니다:"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:14
msgid ""
"1. Run the upgrade script (for example, ./upgrade/upgrade_4_0_4_1.sh) in one "
"frontend node"
msgstr ""
"1. 프론트엔드 노드에서 업그레이드 스크립트(예: ./upgrade/upgrade_4_0_4_1.sh)"
"를 실행하십시오."

# ordered list
#: deploy_pro/upgrade_a_cluster.md:15
msgid ""
"2. Run the minor upgrade script (./upgrade/minor_upgrade.sh) in all other "
"nodes to update symbolic link"
msgstr ""
"2. 기타 노드에서 마이너 업그레이드 스크립트(./upgrade/minor_upgrade.sh)를 실"
"행하여 심볼릭 링크를 업데이트하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:16
msgid ""
"3. Update configuration files at each node according to the documentation "
"for each version"
msgstr ""
"3. 각 버전에 대해 문서 내용을 따라 각 노드에서 설정 파일을 업데이트하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:17
msgid "4. Delete old search index in the backend node if needed"
msgstr "4. 필요하다면 백엔드 노드의 이전 검색 색인을 삭제하십시오"

# header
#: deploy_pro/upgrade_a_cluster.md:19
msgid "## Maintanence upgrade"
msgstr "## 업그레이드 유지"

#: deploy_pro/upgrade_a_cluster.md:21
msgid ""
"Doing maintanence upgrading is simple, you only need to run the script `./"
"upgrade/minor_upgrade.sh` at each node to update the symbolic link."
msgstr ""
"유지보수 업그레이드는 간단하며, 각 노드에서 `./upgrade/minor_upgrade.sh`스크"
"립트를 실행하여 심볼릭 링크를 업데이트 하기만 하면 됩니다."

# header
#: deploy_pro/upgrade_a_cluster.md:23
msgid "## Specific instructions for each version"
msgstr "## 버전별 절차"

# header
#: deploy_pro/upgrade_a_cluster.md:25
msgid "### From v5.0 to v5.1"
msgstr "### v5.0에서 v5.1로"

#: deploy_pro/upgrade_a_cluster.md:27
msgid ""
"Because Django is upgraded to 1.8, the COMPRESS_CACHE_BACKEND should be "
"changed"
msgstr ""
"장고를 1.8로 업그레이드 했으므로 COMPRESS_CACHE_BACKEND 값을 바꾸어야합니다"

# code block
#: deploy_pro/upgrade_a_cluster.md:29
msgid ""
"```\n"
"   -    COMPRESS_CACHE_BACKEND = 'locmem://'\n"
"   +    COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem."
"LocMemCache'\n"
"```"
msgstr ""
"```\n"
"   -    COMPRESS_CACHE_BACKEND = 'locmem://'\n"
"   +    COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem."
"LocMemCache'\n"
"```"

# header
#: deploy_pro/upgrade_a_cluster.md:34
msgid "### From v4.4 to v5.0"
msgstr "### v4.4에서 v5.0으로"

#: deploy_pro/upgrade_a_cluster.md:36
msgid ""
"v5.0 introduces some database schema change, and all configuration files "
"(ccnet.conf, seafile.conf, seafevents.conf, seahub_settings.py) are moved to "
"a central config directory."
msgstr ""
"v5.0에서 도입한 데이터베이스 스키마가 바뀌었으며 모든 설정 파일(ccnet.conf, "
"seafile.conf, seafevents.conf, seahub_settings.py)을 설정 디렉터리에 한데 옮"
"겨 모아두었습니다."

#: deploy_pro/upgrade_a_cluster.md:38 deploy_pro/upgrade_a_cluster.md:75
msgid "Perform the following steps to upgrade:"
msgstr "업그레이드시 다음 단계를 따라가십시오:"

# unordered list
#: deploy_pro/upgrade_a_cluster.md:40
msgid "- Run the upgrade script at one fronend node to upgrade the database."
msgstr ""
"- 프론트엔드 노드에서 업그레이드 스크립트를 실행하여 데이터베이스를 업그레이"
"드하십시오."

# code block
#: deploy_pro/upgrade_a_cluster.md:41
msgid ""
"```\n"
"./upgrade/upgrade_4.4_5.0.sh\n"
"```"
msgstr ""
"```\n"
"./upgrade/upgrade_4.4_5.0.sh\n"
"```"

# unordered list
#: deploy_pro/upgrade_a_cluster.md:44
msgid ""
"- Then, on all other frontend nodes and the background node, run the upgrade "
"script with `SEAFILE_SKIP_DB_UPGRADE` environmental variable turned on:"
msgstr ""
"- 그 다음, 기타 프론트엔드 노드와 백그라운드 노드에서 "
"`SEAFILE_SKIP_DB_UPGRADE` 환경 변수 값을 활성화해둔 상태에서 업그레이드 스크"
"립트를 실행하십시오:"

# code block
#: deploy_pro/upgrade_a_cluster.md:45
msgid ""
"```\n"
"SEAFILE_SKIP_DB_UPGRADE=1 ./upgrade/upgrade_4.4_5.0.sh\n"
"```"
msgstr ""
"```\n"
"SEAFILE_SKIP_DB_UPGRADE=1 ./upgrade/upgrade_4.4_5.0.sh\n"
"```"

#: deploy_pro/upgrade_a_cluster.md:49
msgid ""
"After the upgrade, you should see the configuration files has been moved to "
"the conf/ folder."
msgstr "업그레이드 과정이 끝나면, 설정 파일은 conf/ 폴더로 이동해두어야합니다."

# code block
#: deploy_pro/upgrade_a_cluster.md:51
msgid ""
"```\n"
"conf/\n"
"  |__ ccnet.conf\n"
"  |__ seafile.conf\n"
"  |__ seafevent.conf\n"
"  |__ seafdav.conf\n"
"  |__ seahub_settings.conf\n"
"```"
msgstr ""
"```\n"
"conf/\n"
"  |__ ccnet.conf\n"
"  |__ seafile.conf\n"
"  |__ seafevent.conf\n"
"  |__ seafdav.conf\n"
"  |__ seahub_settings.conf\n"
"```"

# header
#: deploy_pro/upgrade_a_cluster.md:61
msgid "### From v4.3 to v4.4"
msgstr "### v4.3에서 v4.4로"

#: deploy_pro/upgrade_a_cluster.md:63
msgid ""
"There are no database and search index upgrade from v4.3 to v4.4. Perform "
"the following steps to upgrade:"
msgstr ""
"v4.3에서 v4.4로 업그레이드할 때 데이터베이스 및 검색 색인 부분에서 업그레이드"
"할 부분은 없습니다. 업그레이드를 수행할 때 다음 과정을 따르십시오:"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:65
msgid "1. Run the minor upgrade script at frontend and backend nodes"
msgstr ""
"1. 부 버전(minor) 업그레이드 스크립트를 프론트엔드 노드 및 백엔드 노드에서 실"
"행하십시오"

# header
#: deploy_pro/upgrade_a_cluster.md:67
msgid "### From v4.2 to v4.3"
msgstr "### v4.2에서 v4.3으로"

#: deploy_pro/upgrade_a_cluster.md:69
msgid ""
"v4.3 contains no database table change from v4.2. But the old search index "
"will be deleted and regenerated."
msgstr ""
"v4.3에서는 v4.2 버전으로부터 바뀐 테이블이 없습니다. 하지만 이전 검색 색인을 "
"삭제하고 다시 만듭니다."

#: deploy_pro/upgrade_a_cluster.md:71
msgid ""
"A new option COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem."
"LocMemCache' should be added to seahub_settings.py"
msgstr ""
"COMPRESS_CACHE_BACKEND = 'django.core.cache.backends.locmem.LocMemCache' 새 "
"옵션을 seahub_settings.py에 추가해야합니다"

#: deploy_pro/upgrade_a_cluster.md:73
msgid ""
"The secret key in seahub_settings.py need to be regenerated, the old secret "
"key lack enough randomness."
msgstr ""
"이전 비밀키는 임의성이 충분하지 않으므로 seahub_settings.py의 비밀 키를 다시 "
"만드십시오."

# ordered list
#: deploy_pro/upgrade_a_cluster.md:77
msgid ""
"1. Run the upgrade script at one fronend node to modify the seahub_settings."
"py"
msgstr ""
"1. 프론트엔드 노드에서 업그레이드 스크립트를 실행하여 seahub_settings.py를 수"
"정하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:78
msgid ""
"2. Modify seahub_settings.py at each node, replacing the old secret key with "
"the new one and add option COMPRESS_CACHE_BACKEND"
msgstr ""
"2. 각 노드의 seahub_settings.py를 수정하여 비밀 키를 새 키로 교체하고 "
"COMPRESS_CACHE_BACKEND 옵션을 추가하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:79
msgid "3. Run the minor upgrade script at frontend and backend nodes"
msgstr ""
"3. 프론트엔드와 백엔드 노드의 부 버전(minor) 업그레이드 스크립트를 실행하십시"
"오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:80
msgid ""
"4. Delete the old search index (the folder pro-data/search) at the backend "
"node"
msgstr "4. 백엔드 노드의 이전 검색 색인(pro-data/search 폴더)을 삭제하십시오"

# ordered list
#: deploy_pro/upgrade_a_cluster.md:81
msgid ""
"5. Delete the old office preview output folder (/tmp/seafile-office-output) "
"at the backend node"
msgstr ""
"5. 백엔드 노드의 이전 오피스 미리보기 출력 폴더(/tmp/seafile-office-output)"
"를 삭제하십시오"

# header
#: deploy_pro/upgrading_seafile_professional_server.md:1
msgid "# Upgrading Seafile Professional Server"
msgstr "# Seafile 전문가 서버 업그레이드"

#: deploy_pro/upgrading_seafile_professional_server.md:3
msgid ""
"Upgrading pro server is the same as [upgrading a community server](../deploy/"
"upgrade.md)"
msgstr ""
"전문가판 서버 업그레이드는 [커뮤니티판 서버 업그레이드](../deploy/upgrade.md)"
"와 동일합니다"

# header
#: deploy_pro/using_ldap_pro.md:1
msgid "# Configure Seafile Pro Edition to use LDAP"
msgstr "# LDAP를 사용하도록 Seafile 전문가판 설정"

# header
#: deploy_pro/using_ldap_pro.md:3
msgid "## How does LDAP User Management Works in Seafile"
msgstr "## Seafile의 LDAP 사용자 관리 동작 방식"

#: deploy_pro/using_ldap_pro.md:5
msgid ""
"When Seafile is integrated with LDAP/AD, users in the system can be divided "
"into two tiers:"
msgstr "Seafile을 LDAP/AD와 통합하면, 시스템 사용자는 두 티어로 구분합니다:"

# unordered list
#: deploy_pro/using_ldap_pro.md:7
msgid ""
"- Users within Seafile's internal user database. Some attributes are "
"attached to these users, such as whether it's a system admin user, whether "
"it's activated. This tier includes two types of users:"
msgstr ""
"- Seafile의 자체 사용자 데이터베이스에 있는 사용자. 일부 속성은 이 사용자로 "
"붙는데, 시스템 관리 사용자인지, 활성 상태인지 여부 속성이 여기에 해당합니다. "
"이 티어에는 두 가지 형태의 사용자가 있습니다:"

# unordered list
#: deploy_pro/using_ldap_pro.md:8
msgid ""
"    * Native users: these users are created by the admin on Seafile's system "
"admin interface. These users are stored in the `EmailUser` table of the "
"`ccnet` database."
msgstr ""
"    * 자체 사용자: 이 사용자는 Seafile의 시스템 관리자 인터페이스에서 관리자"
"가 만듭니다. 이 사용자는 `ccnet` 데이터베이스의 `EmailUser` 테이블에 저장합니"
"다."

# unordered list
#: deploy_pro/using_ldap_pro.md:9
msgid ""
"    * Users imported from LDAP/AD server: When a user in LDAP/AD logs into "
"Seafile, its information will be imported from LDAP/AD server into Seafile's "
"database. These users are stored in the `LDAPUsers` table of the `ccnet` "
"database."
msgstr ""
"    * LDAP/AD 서버에서 온 사용자: Seafile에 LDAP/AD 사용자가 로그인하면, "
"LDAP/AD 서버의 사용자 정보를 Seafile 데이터베이스로 가져옵니다. 이 사용자는 "
"`ccnet` 데이터베이스의 `LDAPUsers` 테이블에 저장합니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:10
msgid ""
"- Users in LDAP/AD server. These are all the intended users of Seafile "
"inside the LDAP server. Seafile doesn't manipulate these users directly. It "
"has to import them into its internal database before setting attributes on "
"them."
msgstr ""
"- LDAP/AD 서버 사용자. 이 사용자는 LDAP 서버에 있는 Seafile을 사용하려는 사용"
"자입니다. Seafile은 이 사용자를 직접 다루지 못합니다. 설정 속성을 자체 데이터"
"베이스로 가져옵니다."

#: deploy_pro/using_ldap_pro.md:12
msgid ""
"When Seafile counts the user number in the system, it only counts the "
"**activated** users in its internal database."
msgstr ""
"Seafile에서 시스템 사용자를 셀 때는 자체 데이터베이스의 **활성** 사용자만 셉"
"니다."

#: deploy_pro/using_ldap_pro.md:14
msgid ""
"When Seafile is integrated with LDAP/AD, it'll look up users from both the "
"internal database and LDAP server. As long as the user exists in one of "
"these two sources, he/she can log into the system."
msgstr ""
"Seafile을 LDAP/AD와 통합하면, 자체 서버와 LDAP 서버 양측에서 사용자를 찾습니"
"다. 두 곳에 사용자가 있으면 시스템에 로그인할 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:16
msgid "## Basic LDAP/AD Integration"
msgstr "## 기본 LDAP/AD 통합"

#: deploy_pro/using_ldap_pro.md:18
msgid ""
"The only requirement for Seafile to use LDAP/AD for authentication is that, "
"there must be a unique identifier for each user in the LDAP/AD server. "
"Seafile can only use email-address-format user identifiers. So there are "
"usually only two options for this unique identifier:"
msgstr ""
"Seafile에서 LDAP/AD를 인증용으로 사용하는데 필요한 유일한 사항은, LDAP/AD서버"
"에 있는 각 사용자의 유일 식별자입니다. Seafile은 전자메일 주소 형식 사용자 식"
"별자만 사용할 수 있습니다. 따라서 유일 식별자 사용에 두가지 선택지만 있습니"
"다:"

# unordered list
#: deploy_pro/using_ldap_pro.md:20
msgid ""
"- Email address: this is the most common choice. Most organizations assign "
"unique email address for each member."
msgstr ""
"- 전자메일 주소: 대부분 선택하는 수단입니다. 대부분의 조직에서는 각 구성원에"
"게 유일 전자메일 주소를 할당합니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:21
msgid ""
"- UserPrincipalName: this is a user attribute only available in Active "
"Directory. It's format is `user-login-name@domain-name`, e.g. `john@example."
"com`. It's not a real email address, but it works fine as the unique "
"identifier."
msgstr ""
"- UserPrincipalName: 액티브 디렉터리에서만 사용하는 사용자 속성입니다. 형식"
"은 `user-login-name@domain-name`이며, 예를 들면 `john@example.com`과 같습니"
"다. 실제 전자메일 주소는 아니지만 유일 식별자로 잘 동작합니다."

# header
#: deploy_pro/using_ldap_pro.md:23
msgid "### Connecting to Active Directory"
msgstr "### 액티브 디렉터리에 연결"

#: deploy_pro/using_ldap_pro.md:25
msgid ""
"To use AD to authenticate user, please add the following lines to ccnet.conf."
msgstr "사용자 인증에 AD를 사용한다면, 다음 줄을 ccnet.conf에 추가하십시오."

#: deploy_pro/using_ldap_pro.md:27
msgid "If you choose email address as unique identifier:"
msgstr "전자메일 주소를 유일 식별자로 사용할 경우:"

#: deploy_pro/using_ldap_pro.md:29 deploy_pro/using_ldap_pro.md:38
#: deploy_pro/using_ldap_pro.md:64
msgid "    [LDAP]"
msgstr "    [LDAP]"

#: deploy_pro/using_ldap_pro.md:30 deploy_pro/using_ldap_pro.md:39
#: deploy_pro/using_ldap_pro.md:65
msgid "    HOST = ldap://192.168.1.123/"
msgstr "    HOST = ldap://192.168.1.123/"

#: deploy_pro/using_ldap_pro.md:31 deploy_pro/using_ldap_pro.md:40
msgid "    BASE = cn=users,dc=example,dc=com"
msgstr "    BASE = cn=users,dc=example,dc=com"

#: deploy_pro/using_ldap_pro.md:32 deploy_pro/using_ldap_pro.md:41
msgid "    USER_DN = administrator@example.local"
msgstr "    USER_DN = administrator@example.local"

#: deploy_pro/using_ldap_pro.md:33 deploy_pro/using_ldap_pro.md:42
#: deploy_pro/using_ldap_pro.md:68
msgid "    PASSWORD = secret"
msgstr "    PASSWORD = secret"

#: deploy_pro/using_ldap_pro.md:34 deploy_pro/using_ldap_pro.md:69
msgid "    LOGIN_ATTR = mail"
msgstr "    LOGIN_ATTR = mail"

#: deploy_pro/using_ldap_pro.md:36
msgid "If you choose UserPrincipalName as unique identifier:"
msgstr "UserPrincipalName을 유일 식별자로 사용한다면:"

#: deploy_pro/using_ldap_pro.md:43
msgid "    LOGIN_ATTR = userPrincipalName"
msgstr "    LOGIN_ATTR = userPrincipalName"

#: deploy_pro/using_ldap_pro.md:45
msgid "Meaning of each config options:"
msgstr "UserPrincipalName을 유일 식별자로 사용한다면:"

# unordered list
#: deploy_pro/using_ldap_pro.md:47
msgid ""
"* HOST: LDAP URL for the host. ldap://, ldaps:// and ldapi:// are supported. "
"You can also include port number in the URL, like ldap://ldap.example."
"com:389. To use TLS, you should configure the LDAP server to listen on LDAPS "
"port and specify ldaps:// here. More details about TLS will be covered below."
msgstr ""
"* HOST: 호스트의 LDAP URL입니다. ldap:// ldaps:// ldapi://를 지원합니다. "
"ldap://ldap.example.com:389처럼 URL에 포트 번호를 넣을 수 있습니다. TLS를 사"
"용하려면 LDAP 서버에 LDAPS 포트에서 응답 대기하도록 설정하고 ldaps://를 지정"
"하십시오. TLS에 대한 자세한 내용은 아래에 다룹니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:48
msgid ""
"* BASE: The root distinguished name (DN) to use when running queries against "
"the directory server. **You cannot use the root DN (e.g. dc=example,dc=com) "
"as BASE**."
msgstr ""
"* BASE: 디렉터리 서버에서 요청문을 실행할 때 사용할 루트 구별 이름(DN)입니"
"다. **루트 DN(e.g. dc=example,dc=com)을 BASE로 사용할 수 없습니다**."

# unordered list
#: deploy_pro/using_ldap_pro.md:49
msgid ""
"* USER_DN: The distinguished name of the user that Seafile will use when "
"connecting to the directory server. This user should have sufficient "
"privilege to access all the nodes under BASE. It's recommended to use a user "
"in the administrator group."
msgstr ""
"* USER_DN: 디렉터리 서버에 연결할 때 Seafile에서 사용할 사용자의 식별 이름입"
"니다. BASE 기반의 모든 노드에 접근하려면 해당 사용자는 충분한 권한을 가지고 "
"있어야합니다. 관리자 그룹의 사용자 활용을 추천합니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:50
msgid "* PASSWORD: Password of the above user."
msgstr "* PASSWORD: 위 사용자의 암호."

# unordered list
#: deploy_pro/using_ldap_pro.md:51
msgid ""
"* LOGIN_ATTR: The attribute used for user's unique identifier. Use `mail` or "
"`userPrincipalName`."
msgstr ""
"* LOGIN_ATTR: 사용자 유일 식별자에 사용하는 속성입니다. `mail` 또는 "
"`userPrincipalName`을 사용하십시오."

#: deploy_pro/using_ldap_pro.md:53
msgid "Tips for choosing BASE and USER_DN:"
msgstr "BASE 및 USER_DN을 설정하는 요령:"

# unordered list
#: deploy_pro/using_ldap_pro.md:55
msgid ""
"* To determine the BASE, you first have to navigate your organization "
"hierachy on the domain controller GUI."
msgstr ""
"* BASE 값을 설정하려면, 도메인 컨트롤러 GUI에 있는 조직 계층을 우선 탐색하십"
"시오."

# unordered list
#: deploy_pro/using_ldap_pro.md:56
msgid ""
"    * If you want to allow all users to use Seafile, you can use 'cn=users,"
"dc=yourdomain,dc=com' as BASE (with proper adjustment for your own needs)."
msgstr ""
"    * 모든 사용자가 Seafile을 쓸 수 있게 한다면, 'cn=users,dc=yourdomain,"
"dc=com'을 BASE 값으로 활용할 수 있습니>다(그리고 필요에 따라 적당히 조절하십"
"시오)."

# unordered list
#: deploy_pro/using_ldap_pro.md:57
msgid ""
"    * If you want to limit users to a certain OU (Organization Unit), you "
"run `dsquery` command on the domain controller to find out the DN for this "
"OU. For example, if the OU is 'staffs', you can run 'dsquery ou -name "
"staff'. More information can be found [here](https://technet.microsoft.com/"
"en-us/library/cc770509.aspx)."
msgstr ""
"    * 사용자를 일부 OU (조직 단위)로 한정하려면, 도메인 컨트롤러에서 "
"`dsquery` 명령을 실행하여 이 OU에 있는 DN을 찾으십시오. 예를 들어, OU가 "
"'staffs'면, 'dsquery ou -name staff'을 실행하시면 됩니다. 더 자세한 내용은 "
"[여기](https://technet.microsoft.com/en-us/library/cc770509.aspx)에 있습니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:58
msgid ""
"* AD supports 'user@domain.name' format for the USER_DN option. For example "
"you can use administrator@example.com for USER_DN. Sometime the domain "
"controller doesn't recognize this format. You can still use `dsquery` "
"command to find out user's DN. For example, if the user name is "
"'seafileuser', run `dsquery user -name seafileuser`. More information [here]"
"(https://technet.microsoft.com/en-us/library/cc725702.aspx)."
msgstr ""
"* AD는 USER_DN 옵션에 'user@domain.name' 형식을 지원합니다. 예를 들어 USER_DN"
"에 administrator@example.com 값을 사용할 수 있습니다. 때로는 도메인 컨트롤러"
"에서 이 형식을 인지하지 못할 수도 있습니다. 사용자 DN을 찾을 때 `dsquery` 명"
"령을 사용할 수 있습니다. 예를 들면 `seafileuser` 이름을 가진 사용자라면 "
"`dsquery user -name seafileuser`를 실행하십시오. 더 자세>한 내용은 [여기에 있"
"습니다](https://technet.microsoft.com/en-us/library/cc725702.aspx)."

# header
#: deploy_pro/using_ldap_pro.md:60
msgid "### Connecting to other LDAP servers"
msgstr "### 기타 LDAP 서버로 연결"

#: deploy_pro/using_ldap_pro.md:62
msgid "Please add the following options to ccnet.conf:"
msgstr "ccnet.conf에 다음 설정 항목 값을 추가하십시오:"

#: deploy_pro/using_ldap_pro.md:66
msgid "    BASE = ou=users,dc=example,dc=com"
msgstr "    BASE = ou=users,dc=example,dc=com"

#: deploy_pro/using_ldap_pro.md:67
msgid "    USER_DN = cn=admin,dc=example,dc=com"
msgstr "    USER_DN = cn=admin,dc=example,dc=com"

#: deploy_pro/using_ldap_pro.md:71
msgid ""
"The meaning of the options are the same as described in the previous "
"section. With other LDAP servers, you can only use `mail` attribute as "
"user's unique identifier."
msgstr ""
"이 설정 항목은 이전 섹션에 언급한 항목과 의미가 같습니다. 기타 LDAP 서버에서"
"는 사용자 유일 식별자로 `mail` 속성을 사용할 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:73
msgid "### Testing Your LDAP Configuration"
msgstr "### LDAP 설정 시험"

#: deploy_pro/using_ldap_pro.md:75
msgid ""
"Since 5.0.0 Pro Edition, we provide a command line tool for checking your "
"LDAP configuration."
msgstr "5.0.0 전문가판에서부터 LDAP 설정을 확인하는 명령행 도구를 제공합니다."

#: deploy_pro/using_ldap_pro.md:77
msgid ""
"To use this tool, make sure you have `python-ldap` package installed on your "
"system."
msgstr ""
"이 도구를 사용하려면 `python-ldap` 꾸러미를 시스템에 설치했는지 확인하십시오."

#: deploy_pro/using_ldap_pro.md:83
msgid "Then you can run the test:"
msgstr "그러면 다음 명령으로 시험을 진행할 수 있습니다:"

# code block
#: deploy_pro/using_ldap_pro.md:85
msgid ""
"```\n"
"cd seafile-server-latest\n"
"./pro/pro.py ldapsync --test\n"
"```"
msgstr ""
"```\n"
"cd seafile-server-latest\n"
"./pro/pro.py ldapsync --test\n"
"```"

#: deploy_pro/using_ldap_pro.md:90
msgid ""
"The test script will test your LDAP settings under the `[LDAP]` section of "
"ccnet.conf. If everything works, it'll print the first ten users in the "
"search results. Otherwise, it'll print out possible errors in your config."
msgstr ""
"시험 스크립트는 ccnet.conf의 `[LDAP]` 섹션에 설정한 LDAP 설정을 시험합니다. "
"모든 검사 대상 동작이 반응하면, 검색 결과의 첫 10명의 사용자를 출력합니다. 설"
"정을 제대로 하지 않았다면 설정상 발생할 수 있는 오류 메시지를 출력합니다."

# header
#: deploy_pro/using_ldap_pro.md:92
msgid "## Setting Up LADP/AD User Sync (Optional)"
msgstr "## LDAP/AD 사용자 동기화 설정(선택)"

#: deploy_pro/using_ldap_pro.md:94
msgid ""
"In Seafile Pro, except for importing users into internal database when they "
"log in, you can also configure Seafile to periodically sync user information "
"from LDAP/AD server into the internal database."
msgstr ""
"Seafile 전문가판에서는 사용자가 로그인했을 때 자체 데이터베이스로 사용자 정보"
"를 가져오는 경우를 제외하고, LDAP/AD 서버의 사용자 정보를 자체 데이터베이스"
"로 주기적으로 동기화하도록 Seafile을 설정할 수 있습니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:96
msgid ""
"- User's full name, department, contact email address can be synced to "
"internal database. Users can use this information to more easily search for "
"specific user."
msgstr ""
"- 사용자 성명, 부서, 연락처 전자메일 주소를 자체 데이터베이스에 동기화할 수 "
"있습니다. 사용자는 특정 사용자를 쉽게 검색할 때 이 정보를 활용할 수 있습니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:97
msgid ""
"- User's Windows or Unix login id can be synced the internal database. This "
"allows the user to log in with his/her familiar login id."
msgstr ""
"- 사용자의 윈도우 또는 유닉스 로그인 이름을 자체 데이터베이스에 동기화할 수 "
"있습니다. 사용자 자신의 익숙한 로그인 ID로 로그인할 수 있습니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:98
msgid ""
"- When a user is removed from LDAP/AD, the corresponding user in Seafile "
"will be deactivated. Otherwise, he/she can still sync files with Seafile "
"client or access the web interface."
msgstr ""
"- LDAP/AD에서 사용자를 제거하면 Seafile의 관련 사용자를 비활성화합니다. 삭제"
"하지 않으면, 해당 사용자는 Seafile로 파일을 여전히 동기화하거나 웹 인터페이스"
"로 접근할 수 있습니다."

#: deploy_pro/using_ldap_pro.md:100
msgid ""
"After syncing is complete, you can see the user's full name, department and "
"contact email on the user's profile page."
msgstr ""
"동기화 과정이 끝나면 사용자 프로파일 페이지에서 사용자의 성명, 부서, 연락처 "
"전자메일 주소를 볼 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:102
msgid "### Active Directory"
msgstr "### 액티브 디렉터리"

#: deploy_pro/using_ldap_pro.md:104
msgid ""
"If you're using Active Directory, add the following options to ccnet.conf:"
msgstr ""
"액티브 디렉터리를 사용한다면 다음 설정 항목을 ccnet.conf에 추가하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:106
msgid ""
"```\n"
"[LDAP]\n"
"......\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_USER_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"USER_OBJECT_CLASS = person\n"
"ENABLE_EXTRA_USER_INFO_SYNC = true\n"
"FIRST_NAME_ATTR = givenName\n"
"LAST_NAME_ATTR = sn\n"
"DEPT_ATTR = department\n"
"UID_ATTR = sAMAccountName\n"
"```"
msgstr ""
"```\n"
"[LDAP]\n"
"......\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_USER_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"USER_OBJECT_CLASS = person\n"
"ENABLE_EXTRA_USER_INFO_SYNC = true\n"
"FIRST_NAME_ATTR = givenName\n"
"LAST_NAME_ATTR = sn\n"
"DEPT_ATTR = department\n"
"UID_ATTR = sAMAccountName\n"
"```"

#: deploy_pro/using_ldap_pro.md:121 deploy_pro/using_ldap_pro.md:155
msgid "Meaning of each options:"
msgstr "각 설정 항목의 의미는 다음과 같습니다:"

# unordered list
#: deploy_pro/using_ldap_pro.md:123 deploy_pro/using_ldap_pro.md:157
msgid ""
"- **ENABLE_USER_SYNC**: set to \"true\" if you want to enable ldap user "
"syncing"
msgstr ""
"- **ENABLE_USER_SYNC**: LDAP 사용자 동기화를 활성화하려면 \"true\"로 설정하십"
"시오"

# unordered list
#: deploy_pro/using_ldap_pro.md:124 deploy_pro/using_ldap_pro.md:158
msgid ""
"- **SYNC_INTERVAL**: The interval to sync. Unit is minutes. Default to 60 "
"minutes."
msgstr ""
"- **SYNC_INTERVAL**: 동기화 주기. 단위는 분입니다. 기본 값은 60분입니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:125
msgid ""
"- **USER_OBJECT_CLASS**: This is the name of the class used to search for "
"user objects. In Active Directory, it's usually \"person\". The default "
"value is \"person\"."
msgstr ""
"- **USER_OBJECT_CLASS**: 사용자 객체 검색시 사용할 클래스 이름. 액티브 디렉터"
"리에서는 보통 \"person\"이며, 기본값입니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:126
msgid ""
"- **ENABLE_EXTRA_USER_INFO_SYNC**: Enable syncing additional user "
"information, including user full name, department, and Windows login name, "
"etc."
msgstr ""
"- **ENABLE_EXTRA_USER_INFO_SYNC**: 사용자 성명, 부서, 윈도우 로그인 이름 등"
"의 추가 사용자 정보 동기화를 활성합니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:127 deploy_pro/using_ldap_pro.md:161
msgid ""
"- **FIRST_NAME_ATTR**: Attribute for user's first name. It's \"givenName\" "
"by default."
msgstr ""
"- **FIRST_NAME_ATTR**: 사용자의 이름 속성. 기본값은 \"givenName\" 입니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:128 deploy_pro/using_ldap_pro.md:162
msgid ""
"- **LAST_NAME_ATTR**: Attribute for user's last name. It's \"sn\" by default."
msgstr ""
"- **LAST_NAME_ATTR**: 사용자 이름의 성에 해당하는 속성. 기본값은 \"sn\" 입니"
"다."

# unordered list
#: deploy_pro/using_ldap_pro.md:129 deploy_pro/using_ldap_pro.md:163
msgid ""
"- **USER_NAME_REVERSE**: In some laguages, such as Chinese, the display "
"order of first name and last name is reversed. Set this option if you need "
"it."
msgstr ""
"- **USER_NAME_REVERSE**: 중국어와 같은 일부 언어에서는 성과 이름 순서가 바뀌"
"어 나타납니다. 필요하다면 이 설정 항목 값을 설정하십시오."

# unordered list
#: deploy_pro/using_ldap_pro.md:130 deploy_pro/using_ldap_pro.md:164
msgid ""
"- **DEPT_ATTR**: Attribute for user's department. It's \"department\" by "
"default."
msgstr "- **DEPT_ATTR**: 사용자 부서 속성. 기본값은 \"department\" 입니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:131
msgid ""
"- **UID_ATTR**: Attribute for Windows login name. If this is synced, users "
"can also log in with their Windows login name. In AD, the attribute "
"`sAMAccountName` can be used as `UID_ATTR`."
msgstr ""
"- **UID_ATTR**: 윈도우 로그인 이름 속성입니다. 동기화하면, 사용자는 윈도우 로"
"그인 이름으로 로그인할 수 있습니다. AD에서, `sAMAccountName` 속성을 "
"`UID_ATTR` 값으로 사용할 수 있습니다."

#: deploy_pro/using_ldap_pro.md:133
msgid ""
"If you choose `userPrincipalName` as the unique identifier for user, Seafile "
"cannot use that as real email address to send notification emails to user. "
"If the users in AD also have email address attributes, you can sync these "
"email addresses into Seafile's internal database. Seafile can then use them "
"to send emails. The configuration option is:"
msgstr ""
"`userPrincipalName`을 사용자의 유일 식별자로 선택하면, Seafile에서는 실제 사"
"용자에게 알림 전자메일을 보낼 때 활용할 전자메일 주소로 사용할 수 없습니다. "
"AD의 사용자가 전자메일 주소 속성을 지니고 있다면 Seafile 자체 데이터베이스에 "
"이 전자메일 주소를 동기화할 수 있습니다. 이렇게 하면 Seafile에서 이 속성을 활"
"용하여 전자메일을 보낼 수 있습니다. 설정 항목은 다음과 같습니다:"

# unordered list
#: deploy_pro/using_ldap_pro.md:134
msgid ""
"- **CONTACT_EMAIL_ATTR**: usually you can set it to the `mail` attribute."
msgstr ""
"- **CONTACT_EMAIL_ATTR**: 보통 이 값을 `mail` 속성에 설정할 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:136
msgid "### Other LDAP servers"
msgstr "### 기타 LDAP 서버"

#: deploy_pro/using_ldap_pro.md:138
msgid "Add the following options to ccnet.conf:"
msgstr "다음 설정 항목 값을 ccnet.conf에 추가하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:140
msgid ""
"```\n"
"[LDAP]\n"
"......\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_USER_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"USER_OBJECT_CLASS = userOfNames\n"
"ENABLE_EXTRA_USER_INFO_SYNC = true\n"
"FIRST_NAME_ATTR = givenName\n"
"LAST_NAME_ATTR = sn\n"
"DEPT_ATTR = department\n"
"UID_ATTR = uid\n"
"```"
msgstr ""
"```\n"
"[LDAP]\n"
"......\n"
"\n"
"[LDAP_SYNC]\n"
"ENABLE_USER_SYNC = true\n"
"SYNC_INTERVAL = 60\n"
"USER_OBJECT_CLASS = userOfNames\n"
"ENABLE_EXTRA_USER_INFO_SYNC = true\n"
"FIRST_NAME_ATTR = givenName\n"
"LAST_NAME_ATTR = sn\n"
"DEPT_ATTR = department\n"
"UID_ATTR = uid\n"
"```"

# unordered list
#: deploy_pro/using_ldap_pro.md:159
msgid ""
"- **USER_OBJECT_CLASS**: This is the name of the class used to search for "
"user objects. In OpenLDAP, you can use \"userOfNames\". The default value is "
"\"person\"."
msgstr ""
"- **USER_OBJECT_CLASS**: 사용자 객체를 검색할 때 활용하는 클래스의 이름. "
"OpenLDAP에서는 \"userOfNames\"를 활용할 수 있습니다. 기본값은 \"person\" 입니"
"다."

# unordered list
#: deploy_pro/using_ldap_pro.md:160
msgid ""
"- **ENABLE_EXTRA_USER_INFO_SYNC**: Enable syncing additional user "
"information, including user full name, department, and Windows/Unix login "
"name, etc."
msgstr ""
"- **ENABLE_EXTRA_USER_INFO_SYNC**: 성명, 부서, 윈도우/유닉스 로그인 이름 등 "
"추가 사용자 정보 동기화를 활성화합니다."

# unordered list
#: deploy_pro/using_ldap_pro.md:165
msgid ""
"- **UID_ATTR**: Attribute for Windows/Unix login name. If this is synced, "
"users can also log in with their Windows/Unix login name. In OpenLDAP, the "
"attribute `uid` or something similar can be used."
msgstr ""
"- **UID_ATTR**: 윈도우/유닉스 로그인 이름 속성입니다. 동기화 처리했다면, 동기"
"화한 사용자는 윈도우/유닉스 로그인 이름으로 로그인할 수 있습니다. OpenLDAP에"
"서는, `uid` 또는 유사 속성을 사용할 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:167
msgid "### Manually Trigger Syncing"
msgstr "### 동기화 수동 실행"

#: deploy_pro/using_ldap_pro.md:169
msgid ""
"To test your LDAP sync configuration, you can run the sync command manually."
msgstr "LDAP 동기화 설정을 시험해보려면 동기화 명령을 직접 실행하시면 됩니다."

# header
#: deploy_pro/using_ldap_pro.md:178
msgid "### Don't Import New Users in LDAP Sync"
msgstr "### LDAP 동기화 중 새 사용자를 가져오지 못함"

#: deploy_pro/using_ldap_pro.md:180
msgid ""
"By default, when LDAP sync process detects that a new user is added in the "
"LDAP server, it'll automatically sync that user into internal database. And "
"the new users will be activated by default. This will consume one more user "
"license. "
msgstr ""
"기본적으로 LDAP 동기화 처리 과정에서 LDAP 서버에 새 사용자 추가를 감지하면 자"
"체 데이터베이스에 해당 사용자를 자동으로 동기화합니다. 그리고 새 사용자를 기"
"본적으로 활성화합니다. 이 과정을 통해 하나 이상의 사용자 라이선스를 이용합니"
"다."

#: deploy_pro/using_ldap_pro.md:182
msgid ""
"Let's consider the following situation: you have a lot of users in the LDAP "
"server, but you don't buy enough licenses to add all these users into "
"Seafile. Enabling LDAP sync will consume all the licenses you buy and make "
"your Seafile installation unusable. The ideal solution would be: new users "
"are only added to Seafile when they log in for the first time. And LDAP sync "
"only sync information from LDAP server for existing users. The following "
"option is for this exact purpose:"
msgstr ""
"다음 상황을 가정해보겠습니다: LDAP 서버에 상당히 많은 사용자가 있지만, 이 사"
"용자를 Seafile에 추가하기에 충분하지 않은 라이선스를 구매했습니다. LDAP 동기"
"화를 활성화하면 구매한 모든 라이선스를 호비하고 Seafile 설치를 진행할 수 없습"
"니다. 최적의 방책은 새 사용자가 처음 로그인했을 때만 Seafile에 추가하는 방식"
"입니다. 그리고 LDAP 동기화는 기존의 사용자에 대해서만 LDAP 서버에서 정보를 동"
"기화처리합니다. 다음 설정 항목 값은 정확히 이 목적으로 활용합니다:"

# code block
#: deploy_pro/using_ldap_pro.md:184
msgid ""
"```\n"
"[LDAP_SYNC]\n"
"IMPORT_NEW_USER = false\n"
"```"
msgstr ""
"```\n"
"[LDAP_SYNC]\n"
"IMPORT_NEW_USER = false\n"
"```"

# header
#: deploy_pro/using_ldap_pro.md:189
msgid "## Advanced LDAP/AD Integration Options"
msgstr "## 고급 LDAP/AD 통합 설정 항목"

# header
#: deploy_pro/using_ldap_pro.md:191
msgid "### Multiple BASE"
msgstr "### 다중 BASE"

#: deploy_pro/using_ldap_pro.md:193
msgid ""
"Multiple base DN is useful when your company has more than one OUs to use "
"Seafile. You can specify a list of base DN in the \"BASE\" config. The DNs "
"are separated by \";\", e.g. `ou=developers,dc=example,dc=com;ou=marketing,"
"dc=example,dc=com`"
msgstr ""
"다중 베이스 DN은 회사에 Seafile을 사용하려는 조직 단위가 하나 이상일 경우 유"
"용합니다. \"BASE\" 설정에 베이스 DN을 여러 항목으로 지정할 수 있습니다. DN은 "
"\";\" 문자로 구분하며 다음과 같이 설정합니다. `ou=developers,dc=example,"
"dc=com;ou=marketing,dc=example,dc=com`"

# header
#: deploy_pro/using_ldap_pro.md:195
msgid "### Additional Search Filter"
msgstr "### 추가 검색 필터"

#: deploy_pro/using_ldap_pro.md:197
msgid ""
"Search filter is very useful when you have a large organization but only a "
"portion of people want to use Seafile. The filter can be given by setting "
"\"FILTER\" config. The value of this option follows standard LDAP search "
"filter syntax (https://msdn.microsoft.com/en-us/library/aa746475(v=vs.85)."
"aspx)."
msgstr ""
"검색 필터는 거대 조직에서 일부 사용자가 Seafile을 사용하려 할 때 유용합니다. "
"\"FILTER\" 값을 설정하면 필터 조건을 줄 수 있습니다. 이 설정 항목의 값은 표"
"준 LDAP 검색 필터 문법을 따릅니다(https://msdn.microsoft.com/en-us/library/"
"aa746475(v=vs.85).aspx)."

#: deploy_pro/using_ldap_pro.md:199
msgid ""
"The final filter used for searching for users is `(&($LOGIN_ATTR=*)"
"($FILTER))`. `$LOGIN_ATTR` and `$FILTER` will be replaced by your option "
"values."
msgstr ""
"사용자 검색에 사용할 최종 필터는 `(&($LOGIN_ATTR=*)($FILTER))`입니다. `"
"$LOGIN_ATTR` 및 `$FILTER` 변수는 개별 설정 항목 값으로 바뀝니다."

#: deploy_pro/using_ldap_pro.md:201
msgid "For example, add the following line to LDAP config:"
msgstr "예를 들자면, LDAP 설정에 다음 줄을 추가하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:203
msgid ""
"```\n"
"FILTER = memberOf=CN=group,CN=developers,DC=example,DC=com\n"
"```"
msgstr ""
"```\n"
"FILTER = memberOf=CN=group,CN=developers,DC=example,DC=com\n"
"```"

#: deploy_pro/using_ldap_pro.md:207
msgid ""
"The final search filter would be `(&(mail=*)(memberOf=CN=group,CN=developers,"
"DC=example,DC=com))`"
msgstr ""
"최종 검색 필터는 `(&(mail=*)(memberOf=CN=group,CN=developers,DC=example,"
"DC=com))`입니다"

#: deploy_pro/using_ldap_pro.md:209
msgid ""
"Note that the cases in the above example is significant. The `memberOf` "
"attribute is only available in Active Directory."
msgstr ""
"참고로 위 예제에서 대소문자는 중요합니다. `memberOf` 속성은 액티브 디렉터리에"
"서만 사용할 수 있습니다."

# header
#: deploy_pro/using_ldap_pro.md:211
msgid "### Limiting Seafile Users to a Group in Active Directory"
msgstr "### Seafile 사용자를 액티브 디렉터리 그룹으로 제한하기"

#: deploy_pro/using_ldap_pro.md:213
msgid ""
"You can use the FILTER option to limit user scope to a certain AD group."
msgstr ""
"FILTER 옵션을 사용하여 사용자 범위를 각각의 AD 그룹으로 제한할 수 있습니다."

# ordered list
#: deploy_pro/using_ldap_pro.md:215
msgid ""
"1. First, you should find out the DN for the group. Again, we'll use "
"`dsquery` command on the domain controller. For example, if group name is "
"'seafilegroup', run `dsquery group -name seafilegroup`."
msgstr ""
"1. 우선 그룹의 DN을 확인하십시오. 다시 말씀드리지만, 도메인 컨트롤러의 "
"`dsquery` 명령을 사용합니다. 예를 들어 그룹 이름이 `seafilegroup`이라면, "
"`dsquery group -name seafilegroup`을 실행하십시오."

# ordered list
#: deploy_pro/using_ldap_pro.md:216
msgid "2. Add following line to LDAP config:"
msgstr "2. 다음 줄을 LDAP 설정에 추가하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:218
msgid ""
"```\n"
"FILTER = memberOf={output of dsquery command}\n"
"```"
msgstr ""
"```\n"
"FILTER = memberOf={output of dsquery command}\n"
"```"

# header
#: deploy_pro/using_ldap_pro.md:222
msgid "### Using TLS connection to LDAP/AD server"
msgstr "### LDAP/AD 서버에 TLS로 연결하기"

#: deploy_pro/using_ldap_pro.md:224
msgid ""
"To use TLS connection to the directory server, you should install a valid "
"SSL certificate on the directory server."
msgstr ""
"디렉터리 서버에 TLS로 연결하려면 디렉터리 서버에 올바른 SSL 인증서를 설치해야"
"합니다."

#: deploy_pro/using_ldap_pro.md:226
msgid ""
"The current version of Seafile Linux server package is compiled on CentOS. "
"We include the ldap client library in the package to maintain compatibility "
"with older Linux distributions. But since different Linux distributions have "
"different path or configuration for OpenSSL library, sometimes Seafile is "
"unable to connect to the directory server with TLS."
msgstr ""
"Seafile 리눅스 서버 꾸러미 현재 버전은 CentOS에서 컴파일했습니다. 꾸러미에 넣"
"은 LDAP 클라이언트 라이브러리는 이전 리눅스 배포판 버전과 호환되도록 관리합니"
"다. 하지만 제각기 다른 리눅스 배포판은 OpenSSL 라이브러리 경로가 다르고 설정"
"도 다르기 때문에 Seafile이 때로는 디렉터리 서버를 TLS로 연결할 수 없을 때도 "
"있습니다."

#: deploy_pro/using_ldap_pro.md:228
msgid ""
"The ldap library (libldap) bundled in the Seafile package is of version 2.4. "
"If your Linux distribution is new enough (like CentOS 6, Debian 7 or Ubuntu "
"12.04 or above), you can use system's libldap instead."
msgstr ""
"Seafile 꾸러미에 들어있는 LDAP 라이브러리(libldap) 버전은 2.4입니다. 리눅스 "
"배포판이 최신일 경우(CentOS 8, 데비안 7, 우분투 12.04 이상), 시스템의 libldap"
"를 대신 사용할 수 있습니다."

#: deploy_pro/using_ldap_pro.md:230
msgid ""
"On Ubuntu 14.04 and Debian 7/8, moving the bundled ldap related libraries "
"out of the library path should make TLS connection work."
msgstr ""
"우분투 14.04 및 데비안 7/8에서는 압축 파일에 들어있는 LDAP 관련 라이브러리를 "
"라이브러리 경로 밖으로 옮길 때 TLS 연결이 동작하도록 해야합니다."

# code block
#: deploy_pro/using_ldap_pro.md:232
msgid ""
"```\n"
"cd ${SEAFILE_INSTALLATION_DIR}/seafile-server-latest/seafile/lib\n"
"mkdir disabled_libs_use_local_ones_instead\n"
"mv liblber-2.4.so.2 libldap-2.4.so.2 libsasl2.so.2 libldap_r-2.4.so.2 "
"disabled_libs_use_local_ones_instead/\n"
"```"
msgstr ""
"```\n"
"cd ${SEAFILE_INSTALLATION_DIR}/seafile-server-latest/seafile/lib\n"
"mkdir disabled_libs_use_local_ones_instead\n"
"mv liblber-2.4.so.2 libldap-2.4.so.2 libsasl2.so.2 libldap_r-2.4.so.2 "
"disabled_libs_use_local_ones_instead/\n"
"```"

#: deploy_pro/using_ldap_pro.md:238
msgid "On CentOS 6, you have to move the libnssutil library:"
msgstr "CentOS 6에서는 libnssutil 라이브러리를 옮겨야합니다:"

# code block
#: deploy_pro/using_ldap_pro.md:240
msgid ""
"```\n"
"cd ${SEAFILE_INSTALLATION_DIR}/seafile-server-latest/seafile/lib\n"
"mkdir disabled_libs_use_local_ones_instead\n"
"mv libnssutil3.so disabled_libs_use_local_ones_instead/\n"
"```"
msgstr ""
"```\n"
"cd ${SEAFILE_INSTALLATION_DIR}/seafile-server-latest/seafile/lib\n"
"mkdir disabled_libs_use_local_ones_instead\n"
"mv libnssutil3.so disabled_libs_use_local_ones_instead/\n"
"```"

#: deploy_pro/using_ldap_pro.md:246
msgid ""
"This effectively removes the bundled libraries from the library search path. "
msgstr "이 작업으로 라이브러리 검색 경로에 포함한 라이브러리를 제거합니다. "

#: deploy_pro/using_ldap_pro.md:247
msgid ""
"When the server starts, it'll instead find and use the system libraries (if "
"they are installed). "
msgstr "서버를 시작할 때 시스템 라이브러리를(설치했으면) 대신 찾고 사용합니다."

#: deploy_pro/using_ldap_pro.md:248
msgid ""
"This change has to be repeated after each update of the Seafile installation."
msgstr "Seafile 설치를 업데이트 한 후 이 변경 과정을 반복합니다."

# header
#: deploy_pro/using_ldap_pro.md:251
msgid "### Use paged results extension"
msgstr "### 페이지 단위 결과 반환 확장 기능 활용"

#: deploy_pro/using_ldap_pro.md:253
msgid ""
"LDAP protocol version 3 supports \"paged results\" (PR) extension. When you "
"have large number of users, this option can greatly improve the performance "
"of listing users. Most directory server nowadays support this extension."
msgstr ""
"LDAP 프로토콜 버전 3에서는 \"페이지 단위 결과 출력\"(PR) 확장 기능을 지원합니"
"다. 사용자가 상당히 많을 경우 이 선택지를 활용하여 사용자 조회시 시스템 성능"
"을 상당히 끌어올릴 수 있습니다. 최근 대부분 디렉터리 서버에서는 이 확장 기능"
"을 지원합니다."

#: deploy_pro/using_ldap_pro.md:255
msgid ""
"In Seafile Pro Edition, add this option to LDAP section of ccnet.conf to "
"enable PR:"
msgstr ""
"Seafile 전문가판에서는 ccnet.conf의 LDAP 섹션에 이 설정 항목을 추가하여 PR을 "
"활성화하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:257
msgid ""
"```\n"
"USE_PAGED_RESULT = true\n"
"```"
msgstr ""
"```\n"
"USE_PAGED_RESULT = true\n"
"```"

# header
#: deploy_pro/using_ldap_pro.md:261
msgid "### Follow referrals"
msgstr "### 리퍼럴 따르기"

#: deploy_pro/using_ldap_pro.md:263
msgid ""
"Starting from Pro Edition 4.0.4, Seafile supports auto following referrals "
"in LDAP search. This is useful for partitioned LDAP or AD servers, where "
"users may be spreaded on multiple directory servers. For more information "
"about referrals, you can refer to [this article](https://technet.microsoft."
"com/en-us/library/cc978014.aspx)."
msgstr ""
"전문가판 4.0.4 부터, Seafile에서는 LDAP 검색시 자동 리퍼럴 따름 동작을 지원합"
"니다. 여러 사용자가 다중 디렉터리 서버에 퍼져 LDAP 또는 AD 서버가 나뉘어 있"
"을 때 유용합니다. 리퍼럴에 대한 더 많은 정보는 [이 게시글](https://technet."
"microsoft.com/en-us/library/cc978014.aspx)에서 찾아볼 수 있습니다."

#: deploy_pro/using_ldap_pro.md:265
msgid "To configure, add following option to ccnet.conf in the [LDAP] section:"
msgstr "설정하려면 ccnet.conf의 [LDAP] 섹션에 다음 설정 항목을 추가하십시오:"

# code block
#: deploy_pro/using_ldap_pro.md:267
msgid ""
"```\n"
"FOLLOW_REFERRALS = true\n"
"```"
msgstr ""
"```\n"
"FOLLOW_REFERRALS = true\n"
"```"

# header
#: deploy_pro/virus_scan.md:1
msgid "# Virus Scan"
msgstr "# 바이러스 검사"

#: deploy_pro/virus_scan.md:5
msgid ""
"In Seafile Pro Edition 4.4.0 (or above), Seafile can scan virus for uploaded "
"files in the background. When configured to run periodically, the scan "
"process scans all existing libraries on the server. In each scan, the "
"process only scans newly uploaded/updated files since the last scan. For "
"each file, the process executes a user-specified virus scan command to check "
"whether the file is a virus or not. Most anti-virus programs provide command "
"line utility for Linux."
msgstr ""
"Seafile 전문가판 4.4.0(이상) 에서, 백그라운드 작업을 통해 업로드한 파일에 대"
"한 바이러스를 검사할 수 있습니다. 주기적으로 실행하도록 설정했다면, 검사 과저"
"은 서버의 모든 기존 라이브러리를 검사합니다. 각 검사 동작 수행시 최근 검사한 "
"후 새로 업로드/업데이트 한 파일만 검사합니다. 각 파일에 대해, 프로세스는 파일"
"이 바이러스인지 아닌지 확인하는 사용자 지정 바이러스 검사 명령을 실행합니다. "
"대부분의 바이러스 치료 프로그램은 리눅스용 명령행 유틸리티를 제공합니다."

#: deploy_pro/virus_scan.md:7
msgid "To enable this feature, add the following options to `seafile.conf`:"
msgstr "이 기능을 활성화하려면 `seafile.conf`에 다음 설정 항목을 추가하십시오:"

# code block
#: deploy_pro/virus_scan.md:9
msgid ""
"```\n"
"[virus_scan]\n"
"scan_command = (command for checking virus)\n"
"virus_code = (command exit codes when file is virus)\n"
"nonvirus_code = (command exit codes when file is not virus)\n"
"scan_interval = (scanning interval, in unit of minutes, default to 60 "
"minutes)\n"
"```"
msgstr ""
"```\n"
"[virus_scan]\n"
"scan_command = (command for checking virus)\n"
"virus_code = (command exit codes when file is virus)\n"
"nonvirus_code = (command exit codes when file is not virus)\n"
"scan_interval = (scanning interval, in unit of minutes, default to 60 "
"minutes)\n"
"```"

#: deploy_pro/virus_scan.md:17
msgid "More details about the options:"
msgstr "설정 항목에 대한 좀 더 자세한 내용은 다음과 같습니다:"

# unordered list
#: deploy_pro/virus_scan.md:19
msgid ""
"* On Linux/Unix, most virus scan commands returns specific exit codes for "
"virus and non-virus. You should consult the manual of your anti-virus "
"program for more information."
msgstr ""
"* 리눅스/유닉스에서 대부분의 바이러스 검사 명령에서는 바이러스가 있느냐 없느"
"냐에 따라 지정 종료 코드를 반환합니다. 자세한 내용은 바이러스 검사 프로그램 "
"설명서를 참고하십시오."

#: deploy_pro/virus_scan.md:21
msgid "An example for ClamAV (http://www.clamav.net/) is provided below:"
msgstr "ClamAV (http://www.clamav.net/) 예제는 다음과 같습니다:"

# code block
#: deploy_pro/virus_scan.md:23
msgid ""
"```\n"
"[virus_scan]\n"
"scan_command = clamscan\n"
"virus_code = 1\n"
"nonvirus_code = 0\n"
"```"
msgstr ""
"```\n"
"[virus_scan]\n"
"scan_command = clamscan\n"
"virus_code = 1\n"
"nonvirus_code = 0\n"
"```"

#: deploy_pro/virus_scan.md:30
msgid ""
"To test whether your configuration works, you can trigger a scan manually:"
msgstr ""
"설정한 대로 동작하는지 시험하려면 다음 검사 동작을 실행해보실 수 있습니다:"

# code block
#: deploy_pro/virus_scan.md:32
msgid ""
"```\n"
"cd seafile-server-latest\n"
"./pro/pro.py virus_scan\n"
"```"
msgstr ""
"```\n"
"cd seafile-server-latest\n"
"./pro/pro.py virus_scan\n"
"```"

#: deploy_pro/virus_scan.md:37
msgid ""
"If virus is detected, you can see scan records and delete infected files in "
"Virus Scan page."
msgstr ""
"바이러스를 발견하면, 검색 기록을 살펴보고 바이러스 검사 페이지에서 감혐 파일"
"을 삭제할 수 있습니다."

#: deploy_pro/virus_scan.md:38
msgid "![virus-scan](../images/virus-scan.png)"
msgstr "![virus-scan](../images/virus-scan.png)"

# header
#: deploy_pro/virus_scan_with_kav4fs.md:1
msgid "# Virus Scan with kav4fs"
msgstr "# kav4fs로 바이러스 검사"

#: deploy_pro/virus_scan_with_kav4fs.md:5
msgid ""
"Assume you have installed Kaspersky Anti-Virus for Linux File Server in "
"Seafile server machine."
msgstr ""
"Seafile 서버 머신에서 리눅스 파일 서버용 카스퍼스키 바이러스 예방 프로그램을 "
"설치했다고 가정하겠습니다."

#: deploy_pro/virus_scan_with_kav4fs.md:7
msgid ""
"If the user that runs Seafile server is not root, it should have sudoers "
"privilege to avoid writing password when running kav4fs-control. Add "
"following content to /etc/sudoers:"
msgstr ""
"Seafile 서버를 비 루트 계정으로 실행한다면 kav4fs-control을 실행할 때 암호 작"
"성을 피하려는 목적으로 sudoers 권한을 주어야합니다. 다음 설정을 /etc/sudoers"
"에 추가하십시오:"

# code block
#: deploy_pro/virus_scan_with_kav4fs.md:9
msgid ""
"```\n"
"<user of running seafile server>\tALL=(ALL:ALL) ALL\n"
"<user of running seafile server> ALL=NOPASSWD: /opt/kaspersky/kav4fs/bin/"
"kav4fs-control\n"
"```"
msgstr ""
"```\n"
"<user of running seafile server>\tALL=(ALL:ALL) ALL\n"
"<user of running seafile server> ALL=NOPASSWD: /opt/kaspersky/kav4fs/bin/"
"kav4fs-control\n"
"```"

# header
#: deploy_pro/virus_scan_with_kav4fs.md:14
msgid "## Script"
msgstr "## 스크립트"

#: deploy_pro/virus_scan_with_kav4fs.md:16
msgid ""
"As the return code of kav4fs can not reflect the file scan result, we use a "
"shell script to parse"
msgstr ""
"kav4fs의 반환 코드를 파일 검사 결과에 반영할 수 없기에, 검색 출력 해석에 셸 "
"스크립트를 사용하겠습니다"

#: deploy_pro/virus_scan_with_kav4fs.md:17
msgid ""
"the scan output and based on the parse result to return different return "
"code to reflect the scan result."
msgstr ""
"검사 결과와 해석 결과 기반은 검사 결과를 반영하는 반환 코드를 다르게 반환합니"
"다."

#: deploy_pro/virus_scan_with_kav4fs.md:19
msgid "Save following contents to a file such as `kav4fs_scan.sh`:"
msgstr "다음 내용을 `kav4fs_scan.sh`와 같은 이름으로 저장하십시오:"

# code block
#: deploy_pro/virus_scan_with_kav4fs.md:21
msgid ""
"```\n"
"#!/bin/bash\n"
"\n"
"TEMP_LOG_FILE=`mktemp /tmp/XXXXXXXXXX`\n"
"VIRUS_FOUND=1\n"
"CLEAN=0\n"
"UNDEFINED=2\n"
"KAV4FS='/opt/kaspersky/kav4fs/bin/kav4fs-control'\n"
"if [ ! -x $KAV4FS ]\n"
"then\n"
"    echo \"Binary not executable\"\n"
"    exit $UNDEFINED\n"
"fi\n"
"\n"
"sudo $KAV4FS --scan-file $1 > $TEMP_LOG_FILE\n"
"if [ \"$?\" -ne 0 ]\n"
"then\n"
"    echo \"Error due to check file '$1'\"\n"
"    exit 3\n"
"fi\n"
"THREATS_C=`grep 'Threats found:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"RISKWARE_C=`grep 'Riskware found:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"INFECTED=`grep 'Infected:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"SUSPICIOUS=`grep 'Suspicious:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"SCAN_ERRORS_C=`grep 'Scan errors:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"PASSWORD_PROTECTED=`grep 'Password protected:' $TEMP_LOG_FILE|cut -d':' -f 2|"
"sed 's/ //g'`\n"
"CORRUPTED=`grep 'Corrupted:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"\n"
"rm -f $TEMP_LOG_FILE\n"
"\n"
"if [ $THREATS_C -gt 0 -o $RISKWARE_C -gt 0 -o $INFECTED -gt 0 -o $SUSPICIOUS "
"-gt 0 ]\n"
"then\n"
"    exit $VIRUS_FOUND\n"
"elif [ $SCAN_ERRORS_C -gt 0 -o $PASSWORD_PROTECTED -gt 0 -o $CORRUPTED -gt "
"0 ]\n"
"then\n"
"    exit $UNDEFINED\n"
"else\n"
"    exit $CLEAN\n"
"fi\n"
"```"
msgstr ""
"```\n"
"#!/bin/bash\n"
"\n"
"TEMP_LOG_FILE=`mktemp /tmp/XXXXXXXXXX`\n"
"VIRUS_FOUND=1\n"
"CLEAN=0\n"
"UNDEFINED=2\n"
"KAV4FS='/opt/kaspersky/kav4fs/bin/kav4fs-control'\n"
"if [ ! -x $KAV4FS ]\n"
"then\n"
"    echo \"Binary not executable\"\n"
"    exit $UNDEFINED\n"
"fi\n"
"\n"
"sudo $KAV4FS --scan-file $1 > $TEMP_LOG_FILE\n"
"if [ \"$?\" -ne 0 ]\n"
"then\n"
"    echo \"Error due to check file '$1'\"\n"
"    exit 3\n"
"fi\n"
"THREATS_C=`grep 'Threats found:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"RISKWARE_C=`grep 'Riskware found:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"INFECTED=`grep 'Infected:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"SUSPICIOUS=`grep 'Suspicious:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"SCAN_ERRORS_C=`grep 'Scan errors:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //"
"g'`\n"
"PASSWORD_PROTECTED=`grep 'Password protected:' $TEMP_LOG_FILE|cut -d':' -f 2|"
"sed 's/ //g'`\n"
"CORRUPTED=`grep 'Corrupted:' $TEMP_LOG_FILE|cut -d':' -f 2|sed 's/ //g'`\n"
"\n"
"rm -f $TEMP_LOG_FILE\n"
"\n"
"if [ $THREATS_C -gt 0 -o $RISKWARE_C -gt 0 -o $INFECTED -gt 0 -o $SUSPICIOUS "
"-gt 0 ]\n"
"then\n"
"    exit $VIRUS_FOUND\n"
"elif [ $SCAN_ERRORS_C -gt 0 -o $PASSWORD_PROTECTED -gt 0 -o $CORRUPTED -gt "
"0 ]\n"
"then\n"
"    exit $UNDEFINED\n"
"else\n"
"    exit $CLEAN\n"
"fi\n"
"```"

#: deploy_pro/virus_scan_with_kav4fs.md:62
msgid "Grant executable privilege to the script:"
msgstr "스크립트 실행 권한을 부여하십시오:"

# code block
#: deploy_pro/virus_scan_with_kav4fs.md:64
msgid ""
"```\n"
"chmod u+x kav4fs_scan.sh\n"
"```"
msgstr ""
"```\n"
"chmod u+x kav4fs_scan.sh\n"
"```"

#: deploy_pro/virus_scan_with_kav4fs.md:68
msgid "The meaing of the script return code:"
msgstr "스크립트 반환 코드 값의 의미는 다음과 같습니다:"

# code block
#: deploy_pro/virus_scan_with_kav4fs.md:70
msgid ""
"```\n"
"1: found virus\n"
"0: no virus\n"
"other: scan failed\n"
"```"
msgstr ""
"```\n"
"1: found virus\n"
"0: no virus\n"
"other: scan failed\n"
"```"

# header
#: deploy_pro/virus_scan_with_kav4fs.md:76
msgid "## configuration"
msgstr "## 설정"

#: deploy_pro/virus_scan_with_kav4fs.md:78
msgid "Add following content to `seafile.conf`:"
msgstr "다음 설정 항목을 `seafile.conf`에 추가하십시오:"

# code block
#: deploy_pro/virus_scan_with_kav4fs.md:80
msgid ""
"```\n"
"[virus_scan]\n"
"scan_command = <absolute path of kav4fs_scan.sh>\n"
"virus_code = 1\n"
"nonvirus_code = 0\n"
"scan_interval = <scanning interval, in unit of minutes, default to 60 "
"minutes>\n"
"```"
msgstr ""
"```\n"
"[virus_scan]\n"
"scan_command = <absolute path of kav4fs_scan.sh>\n"
"virus_code = 1\n"
"nonvirus_code = 0\n"
"scan_interval = <scanning interval, in unit of minutes, default to 60 "
"minutes>\n"
"```"

# header
#: deploy_pro/web_resumable_upload.md:1
msgid "# Web Resumable File Upload"
msgstr "# 웹에서 재개 가능한 파일 업로드"

#: deploy_pro/web_resumable_upload.md:3
msgid ""
"When upload a large file in the web interface, if the network is unreliable, "
"the upload is often interrupted. It's convenient if the upload can be "
"resumed from where it stopped last time. In Seafile Pro Edition 4.4.0 and "
"above, this feature is supported."
msgstr ""
"웹 인터페이스에서 큰 파일을 업로드할 때 네트워크가 불안정하다면 업로드가 종"
"종 멈춥니다. 업로드를 가장 마지막에 멈춘 시점부터 재개할 수 있다면 참 편합니"
"다. Seafile 전문가판 4.4.0 이상에서는 이 기능을 지원합니다."

#: deploy_pro/web_resumable_upload.md:5
msgid "This feature works as following:"
msgstr "이 기능은 다음과 같이 동작합니다:"

# ordered list
#: deploy_pro/web_resumable_upload.md:7
msgid ""
"1. A user uploads a large file on the web interface, and the connection is "
"interrupted after some part of the file is uploaded."
msgstr ""
"1. 웹 인터페이스에서 사용자가 큰 파일을 업로드하고, 파일 일부를 업로드하던 도"
"중에 연결이 끊어집니다."

# ordered list
#: deploy_pro/web_resumable_upload.md:8
msgid "2. The server remembers where the upload stopped."
msgstr "2. 서버에서는 업로드를 멈춘 지점을 기억합니다."

# ordered list
#: deploy_pro/web_resumable_upload.md:9
msgid ""
"3. When the same file is uploaded to the same library and folder, the server "
"tells the browser where to start the upload."
msgstr ""
"3. 동일한 파일을 동일한 라이브러리 및 폴더에 업로드할 경우, 서버에서는 브라우"
"저에게 업로드 재개 지점을 알려줍니다."

#: deploy_pro/web_resumable_upload.md:11
msgid "Limitations:"
msgstr "제한 사항:"

# ordered list
#: deploy_pro/web_resumable_upload.md:13
msgid ""
"1. Only supports resumble upload. File update and folder upload is not "
"resumable."
msgstr ""
"1. 업로드 재개 기능만 지원합니다. 파일 업데이트 및 폴더 업로드는 재개할 수 없"
"습니다."

# ordered list
#: deploy_pro/web_resumable_upload.md:14
msgid "2. Only supports Chrome, Firefox, IE 10+."
msgstr "2. 크롬, 파이어폭스, 인터넷 인스플로러 버전 10 이상만 지원합니다."

#: deploy_pro/web_resumable_upload.md:16
msgid "To enable this feature, add following options to seahub_settings.py:"
msgstr ""
"이 기능을 활성화하려면 seahub_settings.py에 다음 설정 항목을 추가하십시오:"

# code block
#: deploy_pro/web_resumable_upload.md:18
msgid ""
"```\n"
"ENABLE_RESUMABLE_FILEUPLOAD = True\n"
"```"
msgstr ""
"```\n"
"ENABLE_RESUMABLE_FILEUPLOAD = True\n"
"```"

#: deploy_pro/web_resumable_upload.md:22
msgid ""
"In Seafile cluster, in order to make this feature function normally, one of "
"the following two special configuration must be done:"
msgstr ""
"Seafile 클러스터에서는 이 기능을 제대로 동작하게 하려면, 다음 별도 설정 중 하"
"나를 제대로 처리해야합니다:"

# ordered list
#: deploy_pro/web_resumable_upload.md:24
msgid ""
"1. seafile-server-latest/seafile-data/httptemp folder should be shared "
"amoung all front end Seafile server via NFS."
msgstr ""
"1. seafile-server-latest/seafile-data/httptemp 폴더는 NFS를 통해 기타 프론트"
"엔드 Seafile 서버에 공유해야합니다."

# ordered list
#: deploy_pro/web_resumable_upload.md:25
msgid ""
"2. Or, configure the load balancer to always send requests from the same IP "
"address to a fixed back end server."
msgstr ""
"2. 또는 고정 백엔드 서버로 동일한 IP 주소를 통해 항상 요청을 보내도록 로드 밸"
"런서를 설정해야합니다."

# unordered list
#, fuzzy
#~ msgid ""
#~ "- Seafile Community Server tarball is `seafile-server_1.8.0_x86-86.tar."
#~ "gz`; After uncompressing, the folder is `seafile-server-1.7.0`"
#~ msgstr ""
#~ "- Seafile 커뮤니티판 서버 타르볼은 `seafile-server_1.8.0_x86-86.tar.gz`이"
#~ "며, 압축을 해제하면 `seafile-server-1.8.0` 폴더가 나옵니다"

# unordered list
#, fuzzy
#~ msgid ""
#~ "- Seafile Professional Server tarball is `seafile-pro-server_1.8.0_x86-86."
#~ "tar.gz`; After uncompressing, the folder is `seafile-pro-server-1.7.0`"
#~ msgstr ""
#~ "- Seafile 전문가판 서버 타르볼은 `seafile-pro-server_1.8.0_x86-86.tar.gz`"
#~ "이며, 압축을 해제하면 `seafile-pro-server-1.8.0` 폴더가 나옵니다"
